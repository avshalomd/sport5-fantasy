(function(){
/*
 Copyright (c) 2020, Blockthrough All rights reserved.
   See license text at: https://blockthrough.com/license
*/
var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.createTemplateTagFirstArg=function(y){return y.raw=y};$jscomp.createTemplateTagFirstArgWithRaw=function(y,R){y.raw=R;return y};$jscomp.arrayIteratorImpl=function(y){var R=0;return function(){return R<y.length?{done:!1,value:y[R++]}:{done:!0}}};$jscomp.arrayIterator=function(y){return{next:$jscomp.arrayIteratorImpl(y)}};$jscomp.makeIterator=function(y){var R="undefined"!=typeof Symbol&&Symbol.iterator&&y[Symbol.iterator];return R?R.call(y):$jscomp.arrayIterator(y)};
$jscomp.arrayFromIterator=function(y){for(var R,V=[];!(R=y.next()).done;)V.push(R.value);return V};$jscomp.arrayFromIterable=function(y){return y instanceof Array?y:$jscomp.arrayFromIterator($jscomp.makeIterator(y))};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.ISOLATE_POLYFILLS=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(y,R,V){if(y==Array.prototype||y==Object.prototype)return y;y[R]=V.value;return y};$jscomp.getGlobal=function(y){y=["object"==typeof globalThis&&globalThis,y,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var R=0;R<y.length;++R){var V=y[R];if(V&&V.Math==Math)return V}throw Error("Cannot find global object");};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.IS_SYMBOL_NATIVE="function"===typeof Symbol&&"symbol"===typeof Symbol("x");$jscomp.TRUST_ES6_POLYFILLS=!$jscomp.ISOLATE_POLYFILLS||$jscomp.IS_SYMBOL_NATIVE;$jscomp.polyfills={};$jscomp.propertyToPolyfillSymbol={};$jscomp.POLYFILL_PREFIX="$jscp$";var $jscomp$lookupPolyfilledValue=function(y,R){var V=$jscomp.propertyToPolyfillSymbol[R];if(null==V)return y[R];V=y[V];return void 0!==V?V:y[R]};
$jscomp.polyfill=function(y,R,V,U){R&&($jscomp.ISOLATE_POLYFILLS?$jscomp.polyfillIsolated(y,R,V,U):$jscomp.polyfillUnisolated(y,R,V,U))};$jscomp.polyfillUnisolated=function(y,R,V,U){V=$jscomp.global;y=y.split(".");for(U=0;U<y.length-1;U++){var ea=y[U];if(!(ea in V))return;V=V[ea]}y=y[y.length-1];U=V[y];R=R(U);R!=U&&null!=R&&$jscomp.defineProperty(V,y,{configurable:!0,writable:!0,value:R})};
$jscomp.polyfillIsolated=function(y,R,V,U){var ea=y.split(".");y=1===ea.length;U=ea[0];U=!y&&U in $jscomp.polyfills?$jscomp.polyfills:$jscomp.global;for(var qa=0;qa<ea.length-1;qa++){var da=ea[qa];if(!(da in U))return;U=U[da]}ea=ea[ea.length-1];V=$jscomp.IS_SYMBOL_NATIVE&&"es6"===V?U[ea]:null;R=R(V);null!=R&&(y?$jscomp.defineProperty($jscomp.polyfills,ea,{configurable:!0,writable:!0,value:R}):R!==V&&($jscomp.propertyToPolyfillSymbol[ea]=$jscomp.IS_SYMBOL_NATIVE?$jscomp.global.Symbol(ea):$jscomp.POLYFILL_PREFIX+
ea,ea=$jscomp.propertyToPolyfillSymbol[ea],$jscomp.defineProperty(U,ea,{configurable:!0,writable:!0,value:R})))};$jscomp.underscoreProtoCanBeSet=function(){var y={a:!0},R={};try{return R.__proto__=y,R.a}catch(V){}return!1};$jscomp.setPrototypeOf=$jscomp.TRUST_ES6_POLYFILLS&&"function"==typeof Object.setPrototypeOf?Object.setPrototypeOf:$jscomp.underscoreProtoCanBeSet()?function(y,R){y.__proto__=R;if(y.__proto__!==R)throw new TypeError(y+" is not extensible");return y}:null;$jscomp.generator={};
$jscomp.generator.ensureIteratorResultIsObject_=function(y){if(!(y instanceof Object))throw new TypeError("Iterator result "+y+" is not an object");};$jscomp.generator.Context=function(){this.isRunning_=!1;this.yieldAllIterator_=null;this.yieldResult=void 0;this.nextAddress=1;this.finallyAddress_=this.catchAddress_=0;this.finallyContexts_=this.abruptCompletion_=null};
$jscomp.generator.Context.prototype.start_=function(){if(this.isRunning_)throw new TypeError("Generator is already running");this.isRunning_=!0};$jscomp.generator.Context.prototype.stop_=function(){this.isRunning_=!1};$jscomp.generator.Context.prototype.jumpToErrorHandler_=function(){this.nextAddress=this.catchAddress_||this.finallyAddress_};$jscomp.generator.Context.prototype.next_=function(y){this.yieldResult=y};
$jscomp.generator.Context.prototype.throw_=function(y){this.abruptCompletion_={exception:y,isException:!0};this.jumpToErrorHandler_()};$jscomp.generator.Context.prototype.return=function(y){this.abruptCompletion_={return:y};this.nextAddress=this.finallyAddress_};$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks=function(y){this.abruptCompletion_={jumpTo:y};this.nextAddress=this.finallyAddress_};$jscomp.generator.Context.prototype.yield=function(y,R){this.nextAddress=R;return{value:y}};
$jscomp.generator.Context.prototype.yieldAll=function(y,R){y=$jscomp.makeIterator(y);var V=y.next();$jscomp.generator.ensureIteratorResultIsObject_(V);if(V.done)this.yieldResult=V.value,this.nextAddress=R;else return this.yieldAllIterator_=y,this.yield(V.value,R)};$jscomp.generator.Context.prototype.jumpTo=function(y){this.nextAddress=y};$jscomp.generator.Context.prototype.jumpToEnd=function(){this.nextAddress=0};
$jscomp.generator.Context.prototype.setCatchFinallyBlocks=function(y,R){this.catchAddress_=y;void 0!=R&&(this.finallyAddress_=R)};$jscomp.generator.Context.prototype.setFinallyBlock=function(y){this.catchAddress_=0;this.finallyAddress_=y||0};$jscomp.generator.Context.prototype.leaveTryBlock=function(y,R){this.nextAddress=y;this.catchAddress_=R||0};
$jscomp.generator.Context.prototype.enterCatchBlock=function(y){this.catchAddress_=y||0;y=this.abruptCompletion_.exception;this.abruptCompletion_=null;return y};$jscomp.generator.Context.prototype.enterFinallyBlock=function(y,R,V){V?this.finallyContexts_[V]=this.abruptCompletion_:this.finallyContexts_=[this.abruptCompletion_];this.catchAddress_=y||0;this.finallyAddress_=R||0};
$jscomp.generator.Context.prototype.leaveFinallyBlock=function(y,R){R=this.finallyContexts_.splice(R||0)[0];if(R=this.abruptCompletion_=this.abruptCompletion_||R){if(R.isException)return this.jumpToErrorHandler_();void 0!=R.jumpTo&&this.finallyAddress_<R.jumpTo?(this.nextAddress=R.jumpTo,this.abruptCompletion_=null):this.nextAddress=this.finallyAddress_}else this.nextAddress=y};$jscomp.generator.Context.prototype.forIn=function(y){return new $jscomp.generator.Context.PropertyIterator(y)};
$jscomp.generator.Context.PropertyIterator=function(y){this.object_=y;this.properties_=[];for(var R in y)this.properties_.push(R);this.properties_.reverse()};$jscomp.generator.Context.PropertyIterator.prototype.getNext=function(){for(;0<this.properties_.length;){var y=this.properties_.pop();if(y in this.object_)return y}return null};$jscomp.generator.Engine_=function(y){this.context_=new $jscomp.generator.Context;this.program_=y};
$jscomp.generator.Engine_.prototype.next_=function(y){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_.next,y,this.context_.next_);this.context_.next_(y);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.return_=function(y){this.context_.start_();var R=this.context_.yieldAllIterator_;if(R)return this.yieldAllStep_("return"in R?R["return"]:function(V){return{value:V,done:!0}},y,this.context_.return);this.context_.return(y);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.throw_=function(y){this.context_.start_();if(this.context_.yieldAllIterator_)return this.yieldAllStep_(this.context_.yieldAllIterator_["throw"],y,this.context_.next_);this.context_.throw_(y);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.yieldAllStep_=function(y,R,V){try{var U=y.call(this.context_.yieldAllIterator_,R);$jscomp.generator.ensureIteratorResultIsObject_(U);if(!U.done)return this.context_.stop_(),U;var ea=U.value}catch(qa){return this.context_.yieldAllIterator_=null,this.context_.throw_(qa),this.nextStep_()}this.context_.yieldAllIterator_=null;V.call(this.context_,ea);return this.nextStep_()};
$jscomp.generator.Engine_.prototype.nextStep_=function(){for(;this.context_.nextAddress;)try{var y=this.program_(this.context_);if(y)return this.context_.stop_(),{value:y.value,done:!1}}catch(R){this.context_.yieldResult=void 0,this.context_.throw_(R)}this.context_.stop_();if(this.context_.abruptCompletion_){y=this.context_.abruptCompletion_;this.context_.abruptCompletion_=null;if(y.isException)throw y.exception;return{value:y.return,done:!0}}return{value:void 0,done:!0}};
$jscomp.generator.Generator_=function(y){this.next=function(R){return y.next_(R)};this.throw=function(R){return y.throw_(R)};this.return=function(R){return y.return_(R)};this[Symbol.iterator]=function(){return this}};$jscomp.generator.createGenerator=function(y,R){R=new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(R));$jscomp.setPrototypeOf&&y.prototype&&$jscomp.setPrototypeOf(R,y.prototype);return R};
$jscomp.asyncExecutePromiseGenerator=function(y){function R(U){return y.next(U)}function V(U){return y.throw(U)}return new Promise(function(U,ea){function qa(da){da.done?U(da.value):Promise.resolve(da.value).then(R,V).then(qa,ea)}qa(y.next())})};$jscomp.asyncExecutePromiseGeneratorFunction=function(y){return $jscomp.asyncExecutePromiseGenerator(y())};$jscomp.asyncExecutePromiseGeneratorProgram=function(y){return $jscomp.asyncExecutePromiseGenerator(new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(y)))};
$jscomp.initSymbol=function(){};$jscomp.polyfill("Symbol",function(y){if(y)return y;var R=function(ea,qa){this.$jscomp$symbol$id_=ea;$jscomp.defineProperty(this,"description",{configurable:!0,writable:!0,value:qa})};R.prototype.toString=function(){return this.$jscomp$symbol$id_};var V=0,U=function(ea){if(this instanceof U)throw new TypeError("Symbol is not a constructor");return new R("jscomp_symbol_"+(ea||"")+"_"+V++,ea)};return U},"es6","es3");$jscomp.initSymbolIterator=function(){};
$jscomp.polyfill("Symbol.iterator",function(y){if(y)return y;y=Symbol("Symbol.iterator");for(var R="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),V=0;V<R.length;V++){var U=$jscomp.global[R[V]];"function"===typeof U&&"function"!=typeof U.prototype[y]&&$jscomp.defineProperty(U.prototype,y,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}})}return y},"es6",
"es3");$jscomp.initSymbolAsyncIterator=function(){};$jscomp.iteratorPrototype=function(y){y={next:y};y[Symbol.iterator]=function(){return this};return y};$jscomp.FORCE_POLYFILL_PROMISE=!1;
$jscomp.polyfill("Promise",function(y){function R(){this.batch_=null}function V(da){return da instanceof ea?da:new ea(function(xa,T){xa(da)})}if(y&&!$jscomp.FORCE_POLYFILL_PROMISE)return y;R.prototype.asyncExecute=function(da){if(null==this.batch_){this.batch_=[];var xa=this;this.asyncExecuteFunction(function(){xa.executeBatch_()})}this.batch_.push(da)};var U=$jscomp.global.setTimeout;R.prototype.asyncExecuteFunction=function(da){U(da,0)};R.prototype.executeBatch_=function(){for(;this.batch_&&this.batch_.length;){var da=
this.batch_;this.batch_=[];for(var xa=0;xa<da.length;++xa){var T=da[xa];da[xa]=null;try{T()}catch(C){this.asyncThrow_(C)}}}this.batch_=null};R.prototype.asyncThrow_=function(da){this.asyncExecuteFunction(function(){throw da;})};var ea=function(da){this.state_=0;this.result_=void 0;this.onSettledCallbacks_=[];var xa=this.createResolveAndReject_();try{da(xa.resolve,xa.reject)}catch(T){xa.reject(T)}};ea.prototype.createResolveAndReject_=function(){function da(C){return function(la){T||(T=!0,C.call(xa,
la))}}var xa=this,T=!1;return{resolve:da(this.resolveTo_),reject:da(this.reject_)}};ea.prototype.resolveTo_=function(da){if(da===this)this.reject_(new TypeError("A Promise cannot resolve to itself"));else if(da instanceof ea)this.settleSameAsPromise_(da);else{a:switch(typeof da){case "object":var xa=null!=da;break a;case "function":xa=!0;break a;default:xa=!1}xa?this.resolveToNonPromiseObj_(da):this.fulfill_(da)}};ea.prototype.resolveToNonPromiseObj_=function(da){var xa=void 0;try{xa=da.then}catch(T){this.reject_(T);
return}"function"==typeof xa?this.settleSameAsThenable_(xa,da):this.fulfill_(da)};ea.prototype.reject_=function(da){this.settle_(2,da)};ea.prototype.fulfill_=function(da){this.settle_(1,da)};ea.prototype.settle_=function(da,xa){if(0!=this.state_)throw Error("Cannot settle("+da+", "+xa+"): Promise already settled in state"+this.state_);this.state_=da;this.result_=xa;this.executeOnSettledCallbacks_()};ea.prototype.executeOnSettledCallbacks_=function(){if(null!=this.onSettledCallbacks_){for(var da=0;da<
this.onSettledCallbacks_.length;++da)qa.asyncExecute(this.onSettledCallbacks_[da]);this.onSettledCallbacks_=null}};var qa=new R;ea.prototype.settleSameAsPromise_=function(da){var xa=this.createResolveAndReject_();da.callWhenSettled_(xa.resolve,xa.reject)};ea.prototype.settleSameAsThenable_=function(da,xa){var T=this.createResolveAndReject_();try{da.call(xa,T.resolve,T.reject)}catch(C){T.reject(C)}};ea.prototype.then=function(da,xa){function T(sa,eb){return"function"==typeof sa?function(nb){try{C(sa(nb))}catch(ib){la(ib)}}:
eb}var C,la,Ba=new ea(function(sa,eb){C=sa;la=eb});this.callWhenSettled_(T(da,C),T(xa,la));return Ba};ea.prototype.catch=function(da){return this.then(void 0,da)};ea.prototype.callWhenSettled_=function(da,xa){function T(){switch(C.state_){case 1:da(C.result_);break;case 2:xa(C.result_);break;default:throw Error("Unexpected state: "+C.state_);}}var C=this;null==this.onSettledCallbacks_?qa.asyncExecute(T):this.onSettledCallbacks_.push(T)};ea.resolve=V;ea.reject=function(da){return new ea(function(xa,
T){T(da)})};ea.race=function(da){return new ea(function(xa,T){for(var C=$jscomp.makeIterator(da),la=C.next();!la.done;la=C.next())V(la.value).callWhenSettled_(xa,T)})};ea.all=function(da){var xa=$jscomp.makeIterator(da),T=xa.next();return T.done?V([]):new ea(function(C,la){function Ba(nb){return function(ib){sa[nb]=ib;eb--;0==eb&&C(sa)}}var sa=[],eb=0;do sa.push(void 0),eb++,V(T.value).callWhenSettled_(Ba(sa.length-1),la),T=xa.next();while(!T.done)})};return ea},"es6","es3");
$jscomp.polyfill("Object.setPrototypeOf",function(y){return y||$jscomp.setPrototypeOf},"es6","es5");$jscomp.checkEs6ConformanceViaProxy=function(){try{var y={},R=Object.create(new $jscomp.global.Proxy(y,{get:function(V,U,ea){return V==y&&"q"==U&&ea==R}}));return!0===R.q}catch(V){return!1}};$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS=!1;$jscomp.ES6_CONFORMANCE=$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS&&$jscomp.checkEs6ConformanceViaProxy();
$jscomp.owns=function(y,R){return Object.prototype.hasOwnProperty.call(y,R)};
$jscomp.polyfill("WeakMap",function(y){function R(){if(!y||!Object.seal)return!1;try{var C=Object.seal({}),la=Object.seal({}),Ba=new y([[C,2],[la,3]]);if(2!=Ba.get(C)||3!=Ba.get(la))return!1;Ba.delete(C);Ba.set(la,4);return!Ba.has(C)&&4==Ba.get(la)}catch(sa){return!1}}function V(){}function U(C){var la=typeof C;return"object"===la&&null!==C||"function"===la}function ea(C){if(!$jscomp.owns(C,da)){var la=new V;$jscomp.defineProperty(C,da,{value:la})}}function qa(C){if(!$jscomp.ISOLATE_POLYFILLS){var la=
Object[C];la&&(Object[C]=function(Ba){if(Ba instanceof V)return Ba;Object.isExtensible(Ba)&&ea(Ba);return la(Ba)})}}if($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS){if(y&&$jscomp.ES6_CONFORMANCE)return y}else if(R())return y;var da="$jscomp_hidden_"+Math.random();qa("freeze");qa("preventExtensions");qa("seal");var xa=0,T=function(C){this.id_=(xa+=Math.random()+1).toString();if(C){C=$jscomp.makeIterator(C);for(var la;!(la=C.next()).done;)la=la.value,this.set(la[0],la[1])}};T.prototype.set=function(C,
la){if(!U(C))throw Error("Invalid WeakMap key");ea(C);if(!$jscomp.owns(C,da))throw Error("WeakMap key fail: "+C);C[da][this.id_]=la;return this};T.prototype.get=function(C){return U(C)&&$jscomp.owns(C,da)?C[da][this.id_]:void 0};T.prototype.has=function(C){return U(C)&&$jscomp.owns(C,da)&&$jscomp.owns(C[da],this.id_)};T.prototype.delete=function(C){return U(C)&&$jscomp.owns(C,da)&&$jscomp.owns(C[da],this.id_)?delete C[da][this.id_]:!1};return T},"es6","es3");$jscomp.MapEntry=function(){};
$jscomp.polyfill("Map",function(y){function R(){if($jscomp.ASSUME_NO_NATIVE_MAP||!y||"function"!=typeof y||!y.prototype.entries||"function"!=typeof Object.seal)return!1;try{var T=Object.seal({x:4}),C=new y($jscomp.makeIterator([[T,"s"]]));if("s"!=C.get(T)||1!=C.size||C.get({x:4})||C.set({x:4},"t")!=C||2!=C.size)return!1;var la=C.entries(),Ba=la.next();if(Ba.done||Ba.value[0]!=T||"s"!=Ba.value[1])return!1;Ba=la.next();return Ba.done||4!=Ba.value[0].x||"t"!=Ba.value[1]||!la.next().done?!1:!0}catch(sa){return!1}}
if($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS){if(y&&$jscomp.ES6_CONFORMANCE)return y}else if(R())return y;var V=new WeakMap,U=function(T){this.data_={};this.head_=da();this.size=0;if(T){T=$jscomp.makeIterator(T);for(var C;!(C=T.next()).done;)C=C.value,this.set(C[0],C[1])}};U.prototype.set=function(T,C){T=0===T?0:T;var la=ea(this,T);la.list||(la.list=this.data_[la.id]=[]);la.entry?la.entry.value=C:(la.entry={next:this.head_,previous:this.head_.previous,head:this.head_,key:T,value:C},la.list.push(la.entry),
this.head_.previous.next=la.entry,this.head_.previous=la.entry,this.size++);return this};U.prototype.delete=function(T){T=ea(this,T);return T.entry&&T.list?(T.list.splice(T.index,1),T.list.length||delete this.data_[T.id],T.entry.previous.next=T.entry.next,T.entry.next.previous=T.entry.previous,T.entry.head=null,this.size--,!0):!1};U.prototype.clear=function(){this.data_={};this.head_=this.head_.previous=da();this.size=0};U.prototype.has=function(T){return!!ea(this,T).entry};U.prototype.get=function(T){return(T=
ea(this,T).entry)&&T.value};U.prototype.entries=function(){return qa(this,function(T){return[T.key,T.value]})};U.prototype.keys=function(){return qa(this,function(T){return T.key})};U.prototype.values=function(){return qa(this,function(T){return T.value})};U.prototype.forEach=function(T,C){for(var la=this.entries(),Ba;!(Ba=la.next()).done;)Ba=Ba.value,T.call(C,Ba[1],Ba[0],this)};U.prototype[Symbol.iterator]=U.prototype.entries;var ea=function(T,C){var la=C&&typeof C;"object"==la||"function"==la?V.has(C)?
la=V.get(C):(la=""+ ++xa,V.set(C,la)):la="p_"+C;var Ba=T.data_[la];if(Ba&&$jscomp.owns(T.data_,la))for(T=0;T<Ba.length;T++){var sa=Ba[T];if(C!==C&&sa.key!==sa.key||C===sa.key)return{id:la,list:Ba,index:T,entry:sa}}return{id:la,list:Ba,index:-1,entry:void 0}},qa=function(T,C){var la=T.head_;return $jscomp.iteratorPrototype(function(){if(la){for(;la.head!=T.head_;)la=la.previous;for(;la.next!=la.head;)return la=la.next,{done:!1,value:C(la)};la=null}return{done:!0,value:void 0}})},da=function(){var T=
{};return T.previous=T.next=T.head=T},xa=0;return U},"es6","es3");
$jscomp.polyfill("Set",function(y){function R(){if($jscomp.ASSUME_NO_NATIVE_SET||!y||"function"!=typeof y||!y.prototype.entries||"function"!=typeof Object.seal)return!1;try{var U=Object.seal({x:4}),ea=new y($jscomp.makeIterator([U]));if(!ea.has(U)||1!=ea.size||ea.add(U)!=ea||1!=ea.size||ea.add({x:4})!=ea||2!=ea.size)return!1;var qa=ea.entries(),da=qa.next();if(da.done||da.value[0]!=U||da.value[1]!=U)return!1;da=qa.next();return da.done||da.value[0]==U||4!=da.value[0].x||da.value[1]!=da.value[0]?!1:
qa.next().done}catch(xa){return!1}}if($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS){if(y&&$jscomp.ES6_CONFORMANCE)return y}else if(R())return y;var V=function(U){this.map_=new Map;if(U){U=$jscomp.makeIterator(U);for(var ea;!(ea=U.next()).done;)this.add(ea.value)}this.size=this.map_.size};V.prototype.add=function(U){U=0===U?0:U;this.map_.set(U,U);this.size=this.map_.size;return this};V.prototype.delete=function(U){U=this.map_.delete(U);this.size=this.map_.size;return U};V.prototype.clear=function(){this.map_.clear();
this.size=0};V.prototype.has=function(U){return this.map_.has(U)};V.prototype.entries=function(){return this.map_.entries()};V.prototype.values=function(){return this.map_.values()};V.prototype.keys=V.prototype.values;V.prototype[Symbol.iterator]=V.prototype.values;V.prototype.forEach=function(U,ea){var qa=this;this.map_.forEach(function(da){return U.call(ea,da,da,qa)})};return V},"es6","es3");
$jscomp.polyfill("Object.is",function(y){return y?y:function(R,V){return R===V?0!==R||1/R===1/V:R!==R&&V!==V}},"es6","es3");$jscomp.polyfill("Array.prototype.includes",function(y){return y?y:function(R,V){var U=this;U instanceof String&&(U=String(U));var ea=U.length;V=V||0;for(0>V&&(V=Math.max(V+ea,0));V<ea;V++){var qa=U[V];if(qa===R||Object.is(qa,R))return!0}return!1}},"es7","es3");
$jscomp.checkStringArgs=function(y,R,V){if(null==y)throw new TypeError("The 'this' value for String.prototype."+V+" must not be null or undefined");if(R instanceof RegExp)throw new TypeError("First argument to String.prototype."+V+" must not be a regular expression");return y+""};$jscomp.polyfill("String.prototype.includes",function(y){return y?y:function(R,V){return-1!==$jscomp.checkStringArgs(this,R,"includes").indexOf(R,V||0)}},"es6","es3");
$jscomp.polyfill("Object.entries",function(y){return y?y:function(R){var V=[],U;for(U in R)$jscomp.owns(R,U)&&V.push([U,R[U]]);return V}},"es8","es3");$jscomp.polyfill("String.prototype.endsWith",function(y){return y?y:function(R,V){var U=$jscomp.checkStringArgs(this,R,"endsWith");R+="";void 0===V&&(V=U.length);V=Math.max(0,Math.min(V|0,U.length));for(var ea=R.length;0<ea&&0<V;)if(U[--V]!=R[--ea])return!1;return 0>=ea}},"es6","es3");
$jscomp.iteratorFromArray=function(y,R){y instanceof String&&(y+="");var V=0,U={next:function(){if(V<y.length){var ea=V++;return{value:R(ea,y[ea]),done:!1}}U.next=function(){return{done:!0,value:void 0}};return U.next()}};U[Symbol.iterator]=function(){return U};return U};$jscomp.polyfill("Array.prototype.keys",function(y){return y?y:function(){return $jscomp.iteratorFromArray(this,function(R){return R})}},"es6","es3");
$jscomp.findInternal=function(y,R,V){y instanceof String&&(y=String(y));for(var U=y.length,ea=0;ea<U;ea++){var qa=y[ea];if(R.call(V,qa,ea,y))return{i:ea,v:qa}}return{i:-1,v:void 0}};$jscomp.polyfill("Array.prototype.find",function(y){return y?y:function(R,V){return $jscomp.findInternal(this,R,V).v}},"es6","es3");
$jscomp.polyfill("Array.prototype.fill",function(y){return y?y:function(R,V,U){var ea=this.length||0;0>V&&(V=Math.max(0,ea+V));if(null==U||U>ea)U=ea;U=Number(U);0>U&&(U=Math.max(0,ea+U));for(V=Number(V||0);V<U;V++)this[V]=R;return this}},"es6","es3");$jscomp.typedArrayFill=function(y){return y?y:Array.prototype.fill};$jscomp.polyfill("Int8Array.prototype.fill",$jscomp.typedArrayFill,"es6","es5");$jscomp.polyfill("Uint8Array.prototype.fill",$jscomp.typedArrayFill,"es6","es5");
$jscomp.polyfill("Uint8ClampedArray.prototype.fill",$jscomp.typedArrayFill,"es6","es5");$jscomp.polyfill("Int16Array.prototype.fill",$jscomp.typedArrayFill,"es6","es5");$jscomp.polyfill("Uint16Array.prototype.fill",$jscomp.typedArrayFill,"es6","es5");$jscomp.polyfill("Int32Array.prototype.fill",$jscomp.typedArrayFill,"es6","es5");$jscomp.polyfill("Uint32Array.prototype.fill",$jscomp.typedArrayFill,"es6","es5");$jscomp.polyfill("Float32Array.prototype.fill",$jscomp.typedArrayFill,"es6","es5");
$jscomp.polyfill("Float64Array.prototype.fill",$jscomp.typedArrayFill,"es6","es5");$jscomp.polyfill("Array.prototype.flat",function(y){return y?y:function(R){R=void 0===R?1:R;for(var V=[],U=0;U<this.length;U++){var ea=this[U];Array.isArray(ea)&&0<R?(ea=Array.prototype.flat.call(ea,R-1),V.push.apply(V,ea)):V.push(ea)}return V}},"es9","es5");
$jscomp.polyfill("Object.fromEntries",function(y){return y?y:function(R){var V={};if(!(Symbol.iterator in R))throw new TypeError(""+R+" is not iterable");R=R[Symbol.iterator].call(R);for(var U=R.next();!U.done;U=R.next()){U=U.value;if(Object(U)!==U)throw new TypeError("iterable for fromEntries should yield objects");V[U[0]]=U[1]}return V}},"es_2019","es3");window.SVGFEFuncCMYKElement=!0;window===top&&(window.YSVGFEFuncCMYKElement=!0);
(function(y){var R={};(function(I){var D={};(function(F){"object"===typeof I&&"undefined"!==typeof module?module.exports=F():("undefined"!==typeof window?window:"undefined"!==typeof global?global:"undefined"!==typeof self?self:this).pako=F()})(function(){return function(){function F(x,w,q){function g(f,n){if(!w[f]){if(!x[f]){var e="function"==typeof require&&require;if(!n&&e)return e(f,!0);if(b)return b(f,!0);n=Error("Cannot find module '"+f+"'");throw n.code="MODULE_NOT_FOUND",n;}n=w[f]={exports:{}};
x[f][0].call(n.exports,function(l){return g(x[f][1][l]||l)},n,n.exports,F,x,w,q)}return w[f].exports}for(var b="function"==typeof require&&require,m=0;m<q.length;m++)g(q[m]);return g}return F}()({1:[function(F,x,w){function q(h){if(!(this instanceof q))return new q(h);h=this.options=m.assign({level:-1,method:8,chunkSize:16384,windowBits:15,memLevel:8,strategy:0,to:""},h||{});h.raw&&0<h.windowBits?h.windowBits=-h.windowBits:h.gzip&&0<h.windowBits&&16>h.windowBits&&(h.windowBits+=16);this.err=0;this.msg=
"";this.ended=!1;this.chunks=[];this.strm=new e;this.strm.avail_out=0;var u=b.deflateInit2(this.strm,h.level,h.method,h.windowBits,h.memLevel,h.strategy);if(0!==u)throw Error(n[u]);h.header&&b.deflateSetHeader(this.strm,h.header);if(h.dictionary){h="string"===typeof h.dictionary?f.string2buf(h.dictionary):"[object ArrayBuffer]"===l.call(h.dictionary)?new Uint8Array(h.dictionary):h.dictionary;u=b.deflateSetDictionary(this.strm,h);if(0!==u)throw Error(n[u]);this._dict_set=!0}}function g(h,u){u=new q(u);
u.push(h,!0);if(u.err)throw u.msg||n[u.err];return u.result}var b=F("./zlib/deflate"),m=F("./utils/common"),f=F("./utils/strings"),n=F("./zlib/messages"),e=F("./zlib/zstream"),l=Object.prototype.toString;q.prototype.push=function(h,u){var H=this.strm,P=this.options.chunkSize;if(this.ended)return!1;u=u===~~u?u:!0===u?4:0;"string"===typeof h?H.input=f.string2buf(h):"[object ArrayBuffer]"===l.call(h)?H.input=new Uint8Array(h):H.input=h;H.next_in=0;H.avail_in=H.input.length;do{0===H.avail_out&&(H.output=
new m.Buf8(P),H.next_out=0,H.avail_out=P);h=b.deflate(H,u);if(1!==h&&0!==h)return this.onEnd(h),this.ended=!0,!1;if(0===H.avail_out||0===H.avail_in&&(4===u||2===u))if("string"===this.options.to)this.onData(f.buf2binstring(m.shrinkBuf(H.output,H.next_out)));else this.onData(m.shrinkBuf(H.output,H.next_out))}while((0<H.avail_in||0===H.avail_out)&&1!==h);if(4===u)return h=b.deflateEnd(this.strm),this.onEnd(h),this.ended=!0,0===h;2===u&&(this.onEnd(0),H.avail_out=0);return!0};q.prototype.onData=function(h){this.chunks.push(h)};
q.prototype.onEnd=function(h){0===h&&(this.result="string"===this.options.to?this.chunks.join(""):m.flattenChunks(this.chunks));this.chunks=[];this.err=h;this.msg=this.strm.msg};w.Deflate=q;w.deflate=g;w.deflateRaw=function(h,u){u=u||{};u.raw=!0;return g(h,u)};w.gzip=function(h,u){u=u||{};u.gzip=!0;return g(h,u)}},{"./utils/common":3,"./utils/strings":4,"./zlib/deflate":8,"./zlib/messages":13,"./zlib/zstream":15}],2:[function(F,x,w){F("./utils/common");F("./utils/strings");F("./zlib/constants");F("./zlib/messages");
F("./zlib/zstream");F("./zlib/gzheader")},{"./utils/common":3,"./utils/strings":4,"./zlib/constants":6,"./zlib/gzheader":9,"./zlib/messages":13,"./zlib/zstream":15}],3:[function(F,x,w){F="undefined"!==typeof Uint8Array&&"undefined"!==typeof Uint16Array&&"undefined"!==typeof Int32Array;w.assign=function(b){for(var m=Array.prototype.slice.call(arguments,1);m.length;){var f=m.shift();if(f){if("object"!==typeof f)throw new TypeError(f+"must be non-object");for(var n in f)Object.prototype.hasOwnProperty.call(f,
n)&&(b[n]=f[n])}}return b};w.shrinkBuf=function(b,m){if(b.length===m)return b;if(b.subarray)return b.subarray(0,m);b.length=m;return b};var q={arraySet:function(b,m,f,n,e){if(m.subarray&&b.subarray)b.set(m.subarray(f,f+n),e);else for(var l=0;l<n;l++)b[e+l]=m[f+l]},flattenChunks:function(b){var m,f;var n=f=0;for(m=b.length;n<m;n++)f+=b[n].length;var e=new Uint8Array(f);n=f=0;for(m=b.length;n<m;n++){var l=b[n];e.set(l,f);f+=l.length}return e}},g={arraySet:function(b,m,f,n,e){for(var l=0;l<n;l++)b[e+
l]=m[f+l]},flattenChunks:function(b){return[].concat.apply([],b)}};w.setTyped=function(b){b?(w.Buf8=Uint8Array,w.Buf16=Uint16Array,w.Buf32=Int32Array,w.assign(w,q)):(w.Buf8=Array,w.Buf16=Array,w.Buf32=Array,w.assign(w,g))};w.setTyped(F)},{}],4:[function(F,x,w){var q=F("./common"),g=!0,b=!0;try{String.fromCharCode.apply(null,[0])}catch(f){g=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(f){b=!1}var m=new q.Buf8(256);for(F=0;256>F;F++)m[F]=252<=F?6:248<=F?5:240<=F?4:224<=F?3:192<=F?
2:1;m[254]=m[254]=1;w.string2buf=function(f){var n,e,l=f.length,h=0;for(n=0;n<l;n++){var u=f.charCodeAt(n);if(55296===(u&64512)&&n+1<l){var H=f.charCodeAt(n+1);56320===(H&64512)&&(u=65536+(u-55296<<10)+(H-56320),n++)}h+=128>u?1:2048>u?2:65536>u?3:4}var P=new q.Buf8(h);for(n=e=0;e<h;n++)u=f.charCodeAt(n),55296===(u&64512)&&n+1<l&&(H=f.charCodeAt(n+1),56320===(H&64512)&&(u=65536+(u-55296<<10)+(H-56320),n++)),128>u?P[e++]=u:(2048>u?P[e++]=192|u>>>6:(65536>u?P[e++]=224|u>>>12:(P[e++]=240|u>>>18,P[e++]=
128|u>>>12&63),P[e++]=128|u>>>6&63),P[e++]=128|u&63);return P};w.buf2binstring=function(f){var n=f.length;if(65534>n&&(f.subarray&&b||!f.subarray&&g))f=String.fromCharCode.apply(null,q.shrinkBuf(f,n));else{for(var e="",l=0;l<n;l++)e+=String.fromCharCode(f[l]);f=e}return f};w.binstring2buf=function(f){for(var n=new q.Buf8(f.length),e=0,l=n.length;e<l;e++)n[e]=f.charCodeAt(e);return n};w.utf8border=function(f,n){var e;n=n||f.length;n>f.length&&(n=f.length);for(e=n-1;0<=e&&128===(f[e]&192);)e--;return 0>
e||0===e?n:e+m[f[e]]>n?e:n}},{"./common":3}],5:[function(F,x,w){x.exports=function(q,g,b,m){var f=q&65535|0;q=q>>>16&65535|0;for(var n;0!==b;){n=2E3<b?2E3:b;b-=n;do f=f+g[m++]|0,q=q+f|0;while(--n);f%=65521;q%=65521}return f|q<<16|0}},{}],6:[function(F,x,w){x.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,
Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],7:[function(F,x,w){var q=function(){for(var g,b=[],m=0;256>m;m++){g=m;for(var f=0;8>f;f++)g=g&1?3988292384^g>>>1:g>>>1;b[m]=g}return b}();x.exports=function(g,b,m,f){m=f+m;for(g^=-1;f<m;f++)g=g>>>8^q[(g^b[f])&255];return g^-1}},{}],8:[function(F,x,w){function q(a,A){a.msg=E[A];return A}function g(a){for(var A=a.length;0<=--A;)a[A]=0}function b(a){var A=a.state,
k=A.pending;k>a.avail_out&&(k=a.avail_out);0!==k&&(z.arraySet(a.output,A.pending_buf,A.pending_out,k,a.next_out),a.next_out+=k,A.pending_out+=k,a.total_out+=k,a.avail_out-=k,A.pending-=k,0===A.pending&&(A.pending_out=0))}function m(a,A){L._tr_flush_block(a,0<=a.block_start?a.block_start:-1,a.strstart-a.block_start,A);a.block_start=a.strstart;b(a.strm)}function f(a,A){a.pending_buf[a.pending++]=A}function n(a,A){a.pending_buf[a.pending++]=A>>>8&255;a.pending_buf[a.pending++]=A&255}function e(a,A){var k=
a.max_chain_length,K=a.strstart,X=a.prev_length,ka=a.nice_match,ya=a.strstart>a.w_size-262?a.strstart-(a.w_size-262):0,ha=a.window,Ha=a.w_mask,Na=a.prev,r=a.strstart+258,W=ha[K+X-1],p=ha[K+X];a.prev_length>=a.good_match&&(k>>=2);ka>a.lookahead&&(ka=a.lookahead);do{var v=A;if(ha[v+X]===p&&ha[v+X-1]===W&&ha[v]===ha[K]&&ha[++v]===ha[K+1]){K+=2;for(v++;ha[++K]===ha[++v]&&ha[++K]===ha[++v]&&ha[++K]===ha[++v]&&ha[++K]===ha[++v]&&ha[++K]===ha[++v]&&ha[++K]===ha[++v]&&ha[++K]===ha[++v]&&ha[++K]===ha[++v]&&
K<r;);v=258-(r-K);K=r-258;if(v>X){a.match_start=A;X=v;if(v>=ka)break;W=ha[K+X-1];p=ha[K+X]}}}while((A=Na[A&Ha])>ya&&0!==--k);return X<=a.lookahead?X:a.lookahead}function l(a){var A=a.w_size,k;do{var K=a.window_size-a.lookahead-a.strstart;if(a.strstart>=A+(A-262)){z.arraySet(a.window,a.window,A,A,0);a.match_start-=A;a.strstart-=A;a.block_start-=A;var X=k=a.hash_size;do{var ka=a.head[--X];a.head[X]=ka>=A?ka-A:0}while(--k);X=k=A;do ka=a.prev[--X],a.prev[X]=ka>=A?ka-A:0;while(--k);K+=A}if(0===a.strm.avail_in)break;
X=a.strm;k=a.window;ka=a.strstart+a.lookahead;var ya=X.avail_in;ya>K&&(ya=K);0===ya?k=0:(X.avail_in-=ya,z.arraySet(k,X.input,X.next_in,ya,ka),1===X.state.wrap?X.adler=N(X.adler,k,ya,ka):2===X.state.wrap&&(X.adler=ca(X.adler,k,ya,ka)),X.next_in+=ya,X.total_in+=ya,k=ya);a.lookahead+=k;if(3<=a.lookahead+a.insert)for(K=a.strstart-a.insert,a.ins_h=a.window[K],a.ins_h=(a.ins_h<<a.hash_shift^a.window[K+1])&a.hash_mask;a.insert&&!(a.ins_h=(a.ins_h<<a.hash_shift^a.window[K+3-1])&a.hash_mask,a.prev[K&a.w_mask]=
a.head[a.ins_h],a.head[a.ins_h]=K,K++,a.insert--,3>a.lookahead+a.insert););}while(262>a.lookahead&&0!==a.strm.avail_in)}function h(a,A){for(var k;;){if(262>a.lookahead){l(a);if(262>a.lookahead&&0===A)return 1;if(0===a.lookahead)break}k=0;3<=a.lookahead&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+3-1])&a.hash_mask,k=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);0!==k&&a.strstart-k<=a.w_size-262&&(a.match_length=e(a,k));if(3<=a.match_length)if(k=L._tr_tally(a,a.strstart-
a.match_start,a.match_length-3),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&3<=a.lookahead){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+3-1])&a.hash_mask,a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else k=L._tr_tally(a,0,a.window[a.strstart]),
a.lookahead--,a.strstart++;if(k&&(m(a,!1),0===a.strm.avail_out))return 1}a.insert=2>a.strstart?a.strstart:2;return 4===A?(m(a,!0),0===a.strm.avail_out?3:4):a.last_lit&&(m(a,!1),0===a.strm.avail_out)?1:2}function u(a,A){for(var k,K;;){if(262>a.lookahead){l(a);if(262>a.lookahead&&0===A)return 1;if(0===a.lookahead)break}k=0;3<=a.lookahead&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+3-1])&a.hash_mask,k=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);a.prev_length=a.match_length;
a.prev_match=a.match_start;a.match_length=2;0!==k&&a.prev_length<a.max_lazy_match&&a.strstart-k<=a.w_size-262&&(a.match_length=e(a,k),5>=a.match_length&&(1===a.strategy||3===a.match_length&&4096<a.strstart-a.match_start)&&(a.match_length=2));if(3<=a.prev_length&&a.match_length<=a.prev_length){K=a.strstart+a.lookahead-3;k=L._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-3);a.lookahead-=a.prev_length-1;a.prev_length-=2;do++a.strstart<=K&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+3-1])&
a.hash_mask,a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);a.match_available=0;a.match_length=2;a.strstart++;if(k&&(m(a,!1),0===a.strm.avail_out))return 1}else if(a.match_available){if((k=L._tr_tally(a,0,a.window[a.strstart-1]))&&m(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return 1}else a.match_available=1,a.strstart++,a.lookahead--}a.match_available&&(L._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0);a.insert=2>a.strstart?
a.strstart:2;return 4===A?(m(a,!0),0===a.strm.avail_out?3:4):a.last_lit&&(m(a,!1),0===a.strm.avail_out)?1:2}function H(a,A){for(var k,K,X,ka=a.window;;){if(258>=a.lookahead){l(a);if(258>=a.lookahead&&0===A)return 1;if(0===a.lookahead)break}a.match_length=0;if(3<=a.lookahead&&0<a.strstart&&(K=a.strstart-1,k=ka[K],k===ka[++K]&&k===ka[++K]&&k===ka[++K])){for(X=a.strstart+258;k===ka[++K]&&k===ka[++K]&&k===ka[++K]&&k===ka[++K]&&k===ka[++K]&&k===ka[++K]&&k===ka[++K]&&k===ka[++K]&&K<X;);a.match_length=258-
(X-K);a.match_length>a.lookahead&&(a.match_length=a.lookahead)}3<=a.match_length?(k=L._tr_tally(a,1,a.match_length-3),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(k=L._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++);if(k&&(m(a,!1),0===a.strm.avail_out))return 1}a.insert=0;return 4===A?(m(a,!0),0===a.strm.avail_out?3:4):a.last_lit&&(m(a,!1),0===a.strm.avail_out)?1:2}function P(a,A){for(var k;;){if(0===a.lookahead&&(l(a),0===a.lookahead)){if(0===A)return 1;
break}a.match_length=0;k=L._tr_tally(a,0,a.window[a.strstart]);a.lookahead--;a.strstart++;if(k&&(m(a,!1),0===a.strm.avail_out))return 1}a.insert=0;return 4===A?(m(a,!0),0===a.strm.avail_out?3:4):a.last_lit&&(m(a,!1),0===a.strm.avail_out)?1:2}function Q(a,A,k,K,X){this.good_length=a;this.max_lazy=A;this.nice_length=k;this.max_chain=K;this.func=X}function G(){this.strm=null;this.status=0;this.pending_buf=null;this.wrap=this.pending=this.pending_out=this.pending_buf_size=0;this.gzhead=null;this.gzindex=
0;this.method=8;this.last_flush=-1;this.w_mask=this.w_bits=this.w_size=0;this.window=null;this.window_size=0;this.head=this.prev=null;this.nice_match=this.good_match=this.strategy=this.level=this.max_lazy_match=this.max_chain_length=this.prev_length=this.lookahead=this.match_start=this.strstart=this.match_available=this.prev_match=this.match_length=this.block_start=this.hash_shift=this.hash_mask=this.hash_bits=this.hash_size=this.ins_h=0;this.dyn_ltree=new z.Buf16(1146);this.dyn_dtree=new z.Buf16(122);
this.bl_tree=new z.Buf16(78);g(this.dyn_ltree);g(this.dyn_dtree);g(this.bl_tree);this.bl_desc=this.d_desc=this.l_desc=null;this.bl_count=new z.Buf16(16);this.heap=new z.Buf16(573);g(this.heap);this.heap_max=this.heap_len=0;this.depth=new z.Buf16(573);g(this.depth);this.bi_valid=this.bi_buf=this.insert=this.matches=this.static_len=this.opt_len=this.d_buf=this.last_lit=this.lit_bufsize=this.l_buf=0}function c(a){if(!a||!a.state)return q(a,-2);a.total_in=a.total_out=0;a.data_type=2;var A=a.state;A.pending=
0;A.pending_out=0;0>A.wrap&&(A.wrap=-A.wrap);A.status=A.wrap?42:113;a.adler=2===A.wrap?0:1;A.last_flush=0;L._tr_init(A);return 0}function d(a){var A=c(a);0===A&&(a=a.state,a.window_size=2*a.w_size,g(a.head),a.max_lazy_match=M[a.level].max_lazy,a.good_match=M[a.level].good_length,a.nice_match=M[a.level].nice_length,a.max_chain_length=M[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=2,a.match_available=0,a.ins_h=0);return A}function t(a,A,k,K,X,
ka){if(!a)return-2;var ya=1;-1===A&&(A=6);0>K?(ya=0,K=-K):15<K&&(ya=2,K-=16);if(1>X||9<X||8!==k||8>K||15<K||0>A||9<A||0>ka||4<ka)return q(a,-2);8===K&&(K=9);var ha=new G;a.state=ha;ha.strm=a;ha.wrap=ya;ha.gzhead=null;ha.w_bits=K;ha.w_size=1<<ha.w_bits;ha.w_mask=ha.w_size-1;ha.hash_bits=X+7;ha.hash_size=1<<ha.hash_bits;ha.hash_mask=ha.hash_size-1;ha.hash_shift=~~((ha.hash_bits+3-1)/3);ha.window=new z.Buf8(2*ha.w_size);ha.head=new z.Buf16(ha.hash_size);ha.prev=new z.Buf16(ha.w_size);ha.lit_bufsize=
1<<X+6;ha.pending_buf_size=4*ha.lit_bufsize;ha.pending_buf=new z.Buf8(ha.pending_buf_size);ha.d_buf=1*ha.lit_bufsize;ha.l_buf=3*ha.lit_bufsize;ha.level=A;ha.strategy=ka;ha.method=k;return d(a)}var z=F("../utils/common"),L=F("./trees"),N=F("./adler32"),ca=F("./crc32"),E=F("./messages");var M=[new Q(0,0,0,0,function(a,A){var k=65535;for(k>a.pending_buf_size-5&&(k=a.pending_buf_size-5);;){if(1>=a.lookahead){l(a);if(0===a.lookahead&&0===A)return 1;if(0===a.lookahead)break}a.strstart+=a.lookahead;a.lookahead=
0;var K=a.block_start+k;if(0===a.strstart||a.strstart>=K)if(a.lookahead=a.strstart-K,a.strstart=K,m(a,!1),0===a.strm.avail_out)return 1;if(a.strstart-a.block_start>=a.w_size-262&&(m(a,!1),0===a.strm.avail_out))return 1}a.insert=0;if(4===A)return m(a,!0),0===a.strm.avail_out?3:4;a.strstart>a.block_start&&m(a,!1);return 1}),new Q(4,4,8,4,h),new Q(4,5,16,8,h),new Q(4,6,32,32,h),new Q(4,4,16,16,u),new Q(8,16,32,32,u),new Q(8,16,128,128,u),new Q(8,32,128,256,u),new Q(32,128,258,1024,u),new Q(32,258,258,
4096,u)];w.deflateInit=function(a,A){return t(a,A,8,15,8,0)};w.deflateInit2=t;w.deflateReset=d;w.deflateResetKeep=c;w.deflateSetHeader=function(a,A){if(!a||!a.state||2!==a.state.wrap)return-2;a.state.gzhead=A;return 0};w.deflate=function(a,A){if(!a||!a.state||5<A||0>A)return a?q(a,-2):-2;var k=a.state;if(!a.output||!a.input&&0!==a.avail_in||666===k.status&&4!==A)return q(a,0===a.avail_out?-5:-2);k.strm=a;var K=k.last_flush;k.last_flush=A;if(42===k.status)if(2===k.wrap)a.adler=0,f(k,31),f(k,139),f(k,
8),k.gzhead?(f(k,(k.gzhead.text?1:0)+(k.gzhead.hcrc?2:0)+(k.gzhead.extra?4:0)+(k.gzhead.name?8:0)+(k.gzhead.comment?16:0)),f(k,k.gzhead.time&255),f(k,k.gzhead.time>>8&255),f(k,k.gzhead.time>>16&255),f(k,k.gzhead.time>>24&255),f(k,9===k.level?2:2<=k.strategy||2>k.level?4:0),f(k,k.gzhead.os&255),k.gzhead.extra&&k.gzhead.extra.length&&(f(k,k.gzhead.extra.length&255),f(k,k.gzhead.extra.length>>8&255)),k.gzhead.hcrc&&(a.adler=ca(a.adler,k.pending_buf,k.pending,0)),k.gzindex=0,k.status=69):(f(k,0),f(k,
0),f(k,0),f(k,0),f(k,0),f(k,9===k.level?2:2<=k.strategy||2>k.level?4:0),f(k,3),k.status=113);else{var X=8+(k.w_bits-8<<4)<<8;X|=(2<=k.strategy||2>k.level?0:6>k.level?1:6===k.level?2:3)<<6;0!==k.strstart&&(X|=32);k.status=113;n(k,X+(31-X%31));0!==k.strstart&&(n(k,a.adler>>>16),n(k,a.adler&65535));a.adler=1}if(69===k.status)if(k.gzhead.extra){for(X=k.pending;k.gzindex<(k.gzhead.extra.length&65535)&&(k.pending!==k.pending_buf_size||(k.gzhead.hcrc&&k.pending>X&&(a.adler=ca(a.adler,k.pending_buf,k.pending-
X,X)),b(a),X=k.pending,k.pending!==k.pending_buf_size));)f(k,k.gzhead.extra[k.gzindex]&255),k.gzindex++;k.gzhead.hcrc&&k.pending>X&&(a.adler=ca(a.adler,k.pending_buf,k.pending-X,X));k.gzindex===k.gzhead.extra.length&&(k.gzindex=0,k.status=73)}else k.status=73;if(73===k.status)if(k.gzhead.name){X=k.pending;do{if(k.pending===k.pending_buf_size&&(k.gzhead.hcrc&&k.pending>X&&(a.adler=ca(a.adler,k.pending_buf,k.pending-X,X)),b(a),X=k.pending,k.pending===k.pending_buf_size)){var ka=1;break}ka=k.gzindex<
k.gzhead.name.length?k.gzhead.name.charCodeAt(k.gzindex++)&255:0;f(k,ka)}while(0!==ka);k.gzhead.hcrc&&k.pending>X&&(a.adler=ca(a.adler,k.pending_buf,k.pending-X,X));0===ka&&(k.gzindex=0,k.status=91)}else k.status=91;if(91===k.status)if(k.gzhead.comment){X=k.pending;do{if(k.pending===k.pending_buf_size&&(k.gzhead.hcrc&&k.pending>X&&(a.adler=ca(a.adler,k.pending_buf,k.pending-X,X)),b(a),X=k.pending,k.pending===k.pending_buf_size)){ka=1;break}ka=k.gzindex<k.gzhead.comment.length?k.gzhead.comment.charCodeAt(k.gzindex++)&
255:0;f(k,ka)}while(0!==ka);k.gzhead.hcrc&&k.pending>X&&(a.adler=ca(a.adler,k.pending_buf,k.pending-X,X));0===ka&&(k.status=103)}else k.status=103;103===k.status&&(k.gzhead.hcrc?(k.pending+2>k.pending_buf_size&&b(a),k.pending+2<=k.pending_buf_size&&(f(k,a.adler&255),f(k,a.adler>>8&255),a.adler=0,k.status=113)):k.status=113);if(0!==k.pending){if(b(a),0===a.avail_out)return k.last_flush=-1,0}else if(0===a.avail_in&&(A<<1)-(4<A?9:0)<=(K<<1)-(4<K?9:0)&&4!==A)return q(a,-5);if(666===k.status&&0!==a.avail_in)return q(a,
-5);if(0!==a.avail_in||0!==k.lookahead||0!==A&&666!==k.status){K=2===k.strategy?P(k,A):3===k.strategy?H(k,A):M[k.level].func(k,A);if(3===K||4===K)k.status=666;if(1===K||3===K)return 0===a.avail_out&&(k.last_flush=-1),0;if(2===K&&(1===A?L._tr_align(k):5!==A&&(L._tr_stored_block(k,0,0,!1),3===A&&(g(k.head),0===k.lookahead&&(k.strstart=0,k.block_start=0,k.insert=0))),b(a),0===a.avail_out))return k.last_flush=-1,0}if(4!==A)return 0;if(0>=k.wrap)return 1;2===k.wrap?(f(k,a.adler&255),f(k,a.adler>>8&255),
f(k,a.adler>>16&255),f(k,a.adler>>24&255),f(k,a.total_in&255),f(k,a.total_in>>8&255),f(k,a.total_in>>16&255),f(k,a.total_in>>24&255)):(n(k,a.adler>>>16),n(k,a.adler&65535));b(a);0<k.wrap&&(k.wrap=-k.wrap);return 0!==k.pending?0:1};w.deflateEnd=function(a){if(!a||!a.state)return-2;var A=a.state.status;if(42!==A&&69!==A&&73!==A&&91!==A&&103!==A&&113!==A&&666!==A)return q(a,-2);a.state=null;return 113===A?q(a,-3):0};w.deflateSetDictionary=function(a,A){var k=A.length;if(!a||!a.state)return-2;var K=a.state;
var X=K.wrap;if(2===X||1===X&&42!==K.status||K.lookahead)return-2;1===X&&(a.adler=N(a.adler,A,k,0));K.wrap=0;if(k>=K.w_size){0===X&&(g(K.head),K.strstart=0,K.block_start=0,K.insert=0);var ka=new z.Buf8(K.w_size);z.arraySet(ka,A,k-K.w_size,K.w_size,0);A=ka;k=K.w_size}ka=a.avail_in;var ya=a.next_in;var ha=a.input;a.avail_in=k;a.next_in=0;a.input=A;for(l(K);3<=K.lookahead;){A=K.strstart;k=K.lookahead-2;do K.ins_h=(K.ins_h<<K.hash_shift^K.window[A+3-1])&K.hash_mask,K.prev[A&K.w_mask]=K.head[K.ins_h],
K.head[K.ins_h]=A,A++;while(--k);K.strstart=A;K.lookahead=2;l(K)}K.strstart+=K.lookahead;K.block_start=K.strstart;K.insert=K.lookahead;K.lookahead=0;K.match_length=K.prev_length=2;K.match_available=0;a.next_in=ya;a.input=ha;a.avail_in=ka;K.wrap=X;return 0};w.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":3,"./adler32":5,"./crc32":7,"./messages":13,"./trees":14}],9:[function(F,x,w){x.exports=function(){this.os=this.xflags=this.time=this.text=0;this.extra=null;this.extra_len=0;
this.comment=this.name="";this.hcrc=0;this.done=!1}},{}],10:[function(F,x,w){x.exports=function(q,g){var b=q.state;var m=q.next_in;var f=q.input;var n=m+(q.avail_in-5);var e=q.next_out;var l=q.output;g=e-(g-q.avail_out);var h=e+(q.avail_out-257);var u=b.dmax;var H=b.wsize;var P=b.whave;var Q=b.wnext;var G=b.window;var c=b.hold;var d=b.bits;var t=b.lencode;var z=b.distcode;var L=(1<<b.lenbits)-1;var N=(1<<b.distbits)-1;a:do{15>d&&(c+=f[m++]<<d,d+=8,c+=f[m++]<<d,d+=8);var ca=t[c&L];b:for(;;){var E=
ca>>>24;c>>>=E;d-=E;E=ca>>>16&255;if(0===E)l[e++]=ca&65535;else if(E&16){var M=ca&65535;if(E&=15)d<E&&(c+=f[m++]<<d,d+=8),M+=c&(1<<E)-1,c>>>=E,d-=E;15>d&&(c+=f[m++]<<d,d+=8,c+=f[m++]<<d,d+=8);ca=z[c&N];c:for(;;){E=ca>>>24;c>>>=E;d-=E;E=ca>>>16&255;if(E&16){ca&=65535;E&=15;d<E&&(c+=f[m++]<<d,d+=8,d<E&&(c+=f[m++]<<d,d+=8));ca+=c&(1<<E)-1;if(ca>u){q.msg="invalid distance too far back";b.mode=30;break a}c>>>=E;d-=E;E=e-g;if(ca>E){E=ca-E;if(E>P&&b.sane){q.msg="invalid distance too far back";b.mode=30;
break a}var a=0;var A=G;if(0===Q){if(a+=H-E,E<M){M-=E;do l[e++]=G[a++];while(--E);a=e-ca;A=l}}else if(Q<E){if(a+=H+Q-E,E-=Q,E<M){M-=E;do l[e++]=G[a++];while(--E);a=0;if(Q<M){E=Q;M-=E;do l[e++]=G[a++];while(--E);a=e-ca;A=l}}}else if(a+=Q-E,E<M){M-=E;do l[e++]=G[a++];while(--E);a=e-ca;A=l}for(;2<M;)l[e++]=A[a++],l[e++]=A[a++],l[e++]=A[a++],M-=3;M&&(l[e++]=A[a++],1<M&&(l[e++]=A[a++]))}else{a=e-ca;do l[e++]=l[a++],l[e++]=l[a++],l[e++]=l[a++],M-=3;while(2<M);M&&(l[e++]=l[a++],1<M&&(l[e++]=l[a++]))}}else if(0===
(E&64)){ca=z[(ca&65535)+(c&(1<<E)-1)];continue c}else{q.msg="invalid distance code";b.mode=30;break a}break}}else if(0===(E&64)){ca=t[(ca&65535)+(c&(1<<E)-1)];continue b}else{E&32?b.mode=12:(q.msg="invalid literal/length code",b.mode=30);break a}break}}while(m<n&&e<h);M=d>>3;m-=M;d-=M<<3;q.next_in=m;q.next_out=e;q.avail_in=m<n?5+(n-m):5-(m-n);q.avail_out=e<h?257+(h-e):257-(e-h);b.hold=c&(1<<d)-1;b.bits=d}},{}],11:[function(F,x,w){F("../utils/common");F("./adler32");F("./crc32");F("./inffast");F("./inftrees")},
{"../utils/common":3,"./adler32":5,"./crc32":7,"./inffast":10,"./inftrees":12}],12:[function(F,x,w){var q=F("../utils/common"),g=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],b=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],f=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,
25,25,26,26,27,27,28,28,29,29,64,64];x.exports=function(n,e,l,h,u,H,P,Q){var G=Q.bits,c,d,t,z,L,N,ca=0,E=new q.Buf16(16);var M=new q.Buf16(16);var a,A=0;for(c=0;15>=c;c++)E[c]=0;for(d=0;d<h;d++)E[e[l+d]]++;var k=G;for(t=15;1<=t&&0===E[t];t--);k>t&&(k=t);if(0===t)return u[H++]=20971520,u[H++]=20971520,Q.bits=1,0;for(G=1;G<t&&0===E[G];G++);k<G&&(k=G);for(c=z=1;15>=c;c++)if(z<<=1,z-=E[c],0>z)return-1;if(0<z&&(0===n||1!==t))return-1;M[1]=0;for(c=1;15>c;c++)M[c+1]=M[c]+E[c];for(d=0;d<h;d++)0!==e[l+d]&&
(P[M[e[l+d]]++]=d);if(0===n){var K=a=P;var X=19}else 1===n?(K=g,ca-=257,a=b,A-=257,X=256):(K=m,a=f,X=-1);d=L=0;c=G;var ka=H;h=k;M=0;var ya=-1;var ha=1<<k;var Ha=ha-1;if(1===n&&852<ha||2===n&&592<ha)return 1;for(;;){var Na=c-M;if(P[d]<X){var r=0;var W=P[d]}else P[d]>X?(r=a[A+P[d]],W=K[ca+P[d]]):(r=96,W=0);z=1<<c-M;G=N=1<<h;do N-=z,u[ka+(L>>M)+N]=Na<<24|r<<16|W|0;while(0!==N);for(z=1<<c-1;L&z;)z>>=1;0!==z?(L&=z-1,L+=z):L=0;d++;if(0===--E[c]){if(c===t)break;c=e[l+P[d]]}if(c>k&&(L&Ha)!==ya){0===M&&(M=
k);ka+=G;h=c-M;for(z=1<<h;h+M<t;){z-=E[h+M];if(0>=z)break;h++;z<<=1}ha+=1<<h;if(1===n&&852<ha||2===n&&592<ha)return 1;ya=L&Ha;u[ya]=k<<24|h<<16|ka-H|0}}0!==L&&(u[ka+L]=c-M<<24|4194304);Q.bits=k;return 0}},{"../utils/common":3}],13:[function(F,x,w){x.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],14:[function(F,x,w){function q(r){for(var W=r.length;0<=--W;)r[W]=
0}function g(r,W,p,v,J){this.static_tree=r;this.extra_bits=W;this.extra_base=p;this.elems=v;this.max_length=J;this.has_stree=r&&r.length}function b(r,W){this.dyn_tree=r;this.max_code=0;this.stat_desc=W}function m(r,W){r.pending_buf[r.pending++]=W&255;r.pending_buf[r.pending++]=W>>>8&255}function f(r,W,p){r.bi_valid>16-p?(r.bi_buf|=W<<r.bi_valid&65535,m(r,r.bi_buf),r.bi_buf=W>>16-r.bi_valid,r.bi_valid+=p-16):(r.bi_buf|=W<<r.bi_valid&65535,r.bi_valid+=p)}function n(r,W,p){f(r,p[2*W],p[2*W+1])}function e(r,
W){var p=0;do p|=r&1,r>>>=1,p<<=1;while(0<--W);return p>>>1}function l(r,W,p){var v=Array(16),J=0,S;for(S=1;15>=S;S++)v[S]=J=J+p[S-1]<<1;for(p=0;p<=W;p++)J=r[2*p+1],0!==J&&(r[2*p]=e(v[J]++,J))}function h(r){var W;for(W=0;286>W;W++)r.dyn_ltree[2*W]=0;for(W=0;30>W;W++)r.dyn_dtree[2*W]=0;for(W=0;19>W;W++)r.bl_tree[2*W]=0;r.dyn_ltree[512]=1;r.opt_len=r.static_len=0;r.last_lit=r.matches=0}function u(r){8<r.bi_valid?m(r,r.bi_buf):0<r.bi_valid&&(r.pending_buf[r.pending++]=r.bi_buf);r.bi_buf=0;r.bi_valid=
0}function H(r,W,p,v){var J=2*W,S=2*p;return r[J]<r[S]||r[J]===r[S]&&v[W]<=v[p]}function P(r,W,p){for(var v=r.heap[p],J=p<<1;J<=r.heap_len;){J<r.heap_len&&H(W,r.heap[J+1],r.heap[J],r.depth)&&J++;if(H(W,v,r.heap[J],r.depth))break;r.heap[p]=r.heap[J];p=J;J<<=1}r.heap[p]=v}function Q(r,W,p){var v=0;if(0!==r.last_lit){do{var J=r.pending_buf[r.d_buf+2*v]<<8|r.pending_buf[r.d_buf+2*v+1];var S=r.pending_buf[r.l_buf+v];v++;if(0===J)n(r,S,W);else{var fa=K[S];n(r,fa+256+1,W);var ia=N[fa];0!==ia&&(S-=X[fa],
f(r,S,ia));J--;fa=256>J?k[J]:k[256+(J>>>7)];n(r,fa,p);ia=ca[fa];0!==ia&&(J-=ka[fa],f(r,J,ia))}}while(v<r.last_lit)}n(r,256,W)}function G(r,W){var p=W.dyn_tree,v=W.stat_desc.static_tree,J=W.stat_desc.has_stree,S=W.stat_desc.elems,fa,ia=-1;r.heap_len=0;r.heap_max=573;for(fa=0;fa<S;fa++)0!==p[2*fa]?(r.heap[++r.heap_len]=ia=fa,r.depth[fa]=0):p[2*fa+1]=0;for(;2>r.heap_len;){var pa=r.heap[++r.heap_len]=2>ia?++ia:0;p[2*pa]=1;r.depth[pa]=0;r.opt_len--;J&&(r.static_len-=v[2*pa+1])}W.max_code=ia;for(fa=r.heap_len>>
1;1<=fa;fa--)P(r,p,fa);pa=S;do fa=r.heap[1],r.heap[1]=r.heap[r.heap_len--],P(r,p,1),v=r.heap[1],r.heap[--r.heap_max]=fa,r.heap[--r.heap_max]=v,p[2*pa]=p[2*fa]+p[2*v],r.depth[pa]=(r.depth[fa]>=r.depth[v]?r.depth[fa]:r.depth[v])+1,p[2*fa+1]=p[2*v+1]=pa,r.heap[1]=pa++,P(r,p,1);while(2<=r.heap_len);r.heap[--r.heap_max]=r.heap[1];fa=W.dyn_tree;pa=W.max_code;v=W.stat_desc.static_tree;J=W.stat_desc.has_stree;S=W.stat_desc.extra_bits;var ua=W.stat_desc.extra_base,Pa=W.stat_desc.max_length,ta,Da=0;for(ta=
0;15>=ta;ta++)r.bl_count[ta]=0;fa[2*r.heap[r.heap_max]+1]=0;for(W=r.heap_max+1;573>W;W++){var Fa=r.heap[W];ta=fa[2*fa[2*Fa+1]+1]+1;ta>Pa&&(ta=Pa,Da++);fa[2*Fa+1]=ta;if(!(Fa>pa)){r.bl_count[ta]++;var Sa=0;Fa>=ua&&(Sa=S[Fa-ua]);var Wa=fa[2*Fa];r.opt_len+=Wa*(ta+Sa);J&&(r.static_len+=Wa*(v[2*Fa+1]+Sa))}}if(0!==Da){do{for(ta=Pa-1;0===r.bl_count[ta];)ta--;r.bl_count[ta]--;r.bl_count[ta+1]+=2;r.bl_count[Pa]--;Da-=2}while(0<Da);for(ta=Pa;0!==ta;ta--)for(Fa=r.bl_count[ta];0!==Fa;)v=r.heap[--W],v>pa||(fa[2*
v+1]!==ta&&(r.opt_len+=(ta-fa[2*v+1])*fa[2*v],fa[2*v+1]=ta),Fa--)}l(p,ia,r.bl_count)}function c(r,W,p){var v,J=-1,S=W[1],fa=0,ia=7,pa=4;0===S&&(ia=138,pa=3);W[2*(p+1)+1]=65535;for(v=0;v<=p;v++){var ua=S;S=W[2*(v+1)+1];++fa<ia&&ua===S||(fa<pa?r.bl_tree[2*ua]+=fa:0!==ua?(ua!==J&&r.bl_tree[2*ua]++,r.bl_tree[32]++):10>=fa?r.bl_tree[34]++:r.bl_tree[36]++,fa=0,J=ua,0===S?(ia=138,pa=3):ua===S?(ia=6,pa=3):(ia=7,pa=4))}}function d(r,W,p){var v,J=-1,S=W[1],fa=0,ia=7,pa=4;0===S&&(ia=138,pa=3);for(v=0;v<=p;v++){var ua=
S;S=W[2*(v+1)+1];if(!(++fa<ia&&ua===S)){if(fa<pa){do n(r,ua,r.bl_tree);while(0!==--fa)}else 0!==ua?(ua!==J&&(n(r,ua,r.bl_tree),fa--),n(r,16,r.bl_tree),f(r,fa-3,2)):10>=fa?(n(r,17,r.bl_tree),f(r,fa-3,3)):(n(r,18,r.bl_tree),f(r,fa-11,7));fa=0;J=ua;0===S?(ia=138,pa=3):ua===S?(ia=6,pa=3):(ia=7,pa=4)}}}function t(r){var W=4093624447,p;for(p=0;31>=p;p++,W>>>=1)if(W&1&&0!==r.dyn_ltree[2*p])return 0;if(0!==r.dyn_ltree[18]||0!==r.dyn_ltree[20]||0!==r.dyn_ltree[26])return 1;for(p=32;256>p;p++)if(0!==r.dyn_ltree[2*
p])return 1;return 0}function z(r,W,p,v){f(r,v?1:0,3);u(r);m(r,p);m(r,~p);L.arraySet(r.pending_buf,r.window,W,p,r.pending);r.pending+=p}var L=F("../utils/common"),N=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],E=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],M=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],a=Array(576);q(a);var A=Array(60);q(A);var k=Array(512);q(k);var K=Array(256);q(K);var X=Array(29);q(X);var ka=
Array(30);q(ka);var ya,ha,Ha,Na=!1;w._tr_init=function(r){if(!Na){var W,p,v,J=Array(16);for(v=p=0;28>v;v++)for(X[v]=p,W=0;W<1<<N[v];W++)K[p++]=v;K[p-1]=v;for(v=p=0;16>v;v++)for(ka[v]=p,W=0;W<1<<ca[v];W++)k[p++]=v;for(p>>=7;30>v;v++)for(ka[v]=p<<7,W=0;W<1<<ca[v]-7;W++)k[256+p++]=v;for(W=0;15>=W;W++)J[W]=0;for(W=0;143>=W;)a[2*W+1]=8,W++,J[8]++;for(;255>=W;)a[2*W+1]=9,W++,J[9]++;for(;279>=W;)a[2*W+1]=7,W++,J[7]++;for(;287>=W;)a[2*W+1]=8,W++,J[8]++;l(a,287,J);for(W=0;30>W;W++)A[2*W+1]=5,A[2*W]=e(W,5);
ya=new g(a,N,257,286,15);ha=new g(A,ca,0,30,15);Ha=new g([],E,0,19,7);Na=!0}r.l_desc=new b(r.dyn_ltree,ya);r.d_desc=new b(r.dyn_dtree,ha);r.bl_desc=new b(r.bl_tree,Ha);r.bi_buf=0;r.bi_valid=0;h(r)};w._tr_stored_block=z;w._tr_flush_block=function(r,W,p,v){var J=0;if(0<r.level){2===r.strm.data_type&&(r.strm.data_type=t(r));G(r,r.l_desc);G(r,r.d_desc);c(r,r.dyn_ltree,r.l_desc.max_code);c(r,r.dyn_dtree,r.d_desc.max_code);G(r,r.bl_desc);for(J=18;3<=J&&0===r.bl_tree[2*M[J]+1];J--);r.opt_len+=3*(J+1)+14;
var S=r.opt_len+3+7>>>3;var fa=r.static_len+3+7>>>3;fa<=S&&(S=fa)}else S=fa=p+5;if(p+4<=S&&-1!==W)z(r,W,p,v);else if(4===r.strategy||fa===S)f(r,2+(v?1:0),3),Q(r,a,A);else{f(r,4+(v?1:0),3);W=r.l_desc.max_code+1;p=r.d_desc.max_code+1;J+=1;f(r,W-257,5);f(r,p-1,5);f(r,J-4,4);for(S=0;S<J;S++)f(r,r.bl_tree[2*M[S]+1],3);d(r,r.dyn_ltree,W-1);d(r,r.dyn_dtree,p-1);Q(r,r.dyn_ltree,r.dyn_dtree)}h(r);v&&u(r)};w._tr_tally=function(r,W,p){r.pending_buf[r.d_buf+2*r.last_lit]=W>>>8&255;r.pending_buf[r.d_buf+2*r.last_lit+
1]=W&255;r.pending_buf[r.l_buf+r.last_lit]=p&255;r.last_lit++;0===W?r.dyn_ltree[2*p]++:(r.matches++,W--,r.dyn_ltree[2*(K[p]+256+1)]++,r.dyn_dtree[2*(256>W?k[W]:k[256+(W>>>7)])]++);return r.last_lit===r.lit_bufsize-1};w._tr_align=function(r){f(r,2,3);n(r,256,a);16===r.bi_valid?(m(r,r.bi_buf),r.bi_buf=0,r.bi_valid=0):8<=r.bi_valid&&(r.pending_buf[r.pending++]=r.bi_buf&255,r.bi_buf>>=8,r.bi_valid-=8)}},{"../utils/common":3}],15:[function(F,x,w){x.exports=function(){this.input=null;this.total_in=this.avail_in=
this.next_in=0;this.output=null;this.total_out=this.avail_out=this.next_out=0;this.msg="";this.state=null;this.data_type=2;this.adler=0}},{}],"/":[function(F,x,w){x=F("./lib/utils/common").assign;w=F("./lib/deflate");F=F("./lib/zlib/constants");D.pako={};x(D.pako,w,F)},{"./lib/deflate":1,"./lib/utils/common":3,"./lib/zlib/constants":6}]},{},[])("/")});I.compress=D.pako.deflate})(R);var V={};(function(I){I.hashString=function(D){for(var F=D.length,x=5381,w=52711;F--;){var q=D.charCodeAt(F);x=33*x^
q;w=33*w^q}return 4096*(x>>>0)+(w>>>0)}})(V);(function(I){I.crypt=function(D,F){var x=new Uint8Array(F),w=new ArrayBuffer(F.byteLength);w=new Uint8Array(w);for(var q=0;q<F.byteLength;q++)w[q]=x[q]^D.charCodeAt(q%D.length);return w.buffer}})({});var U={};(function(I){I.onDomLoaded=function(D){if("complete"===document.readyState||"loaded"===document.readyState||"interactive"===document.readyState)D();else{var F=!1;document.addEventListener("DOMContentLoaded",function(){F||(F=!0,D())},!1);window.addEventListener("load",
function(){F||(F=!0,D())})}};I.onScroll=function(D){window.addEventListener("scroll",function(F){D()})};I.onBlur=function(D){window.addEventListener("blur",function(F){D()})};I.onFocus=function(D){window.addEventListener("focus",function(F){D()})}})(U);(function(I){I.encode=function(D){D=new Uint8Array(D);for(var F="",x=0;x<D.length;x++)F+=String.fromCharCode(D[x]);return btoa(F)};I.decode=function(D){D=atob(D);for(var F=new Uint8Array(D.length),x=0;x<D.length;x++)F[x]=D.charCodeAt(x);return F.buffer}})({});
var ea={};(function(I){I.sum32a=function(D){D=new Uint8Array(D);for(var F=2166136261,x=0;x<D.byteLength;++x)F^=D[x],F+=(F<<1)+(F<<4)+(F<<7)+(F<<8)+(F<<24);return F>>>0}})(ea);var qa={};(function(I){var D=!1,F=!1,x=!(!window.console||!window.console.info);try{F=0<=window.location.href.indexOf("bt_debug=true")||"true"===window.localStorage.bt_debug}catch(z){F=!1}var w={0:"DFT",1:"DBG",2:"INF",3:"NTC",4:"WRN",5:"ERR",6:"CRT",7:"ALR",8:"EMR"},q={0:"#F5F5F5",1:"#BBDEFB",2:"#B3E5FC",3:"#DCEDC8",4:"#FFE0B2",
5:"#FFCCBC",6:"#E57373",7:"#F06292",8:"#BA68C8"},g="#B71C1C #880E4F #4A148C #311B92 #1A237E #0D47A1 #01579B #006064 #004D40 #1B5E20 #33691E #827717 #F57F17 #FF6F00 #E65100 #BF360C #3E2723 #37474F".split(" "),b=function(z){z=z?z.id||null:null;if(!z)return"#000000";for(var L=2166136261,N=0;N<z.length;++N)L^=z.charCodeAt(N),L+=(L<<1)+(L<<4)+(L<<7)+(L<<8)+(L<<24);return g[(L>>>0)%g.length]},m=(new Date).getTime(),f=function(){return(new Date).getTime()-m},n=function(){this.tag="Blockthrough";this.prefix=
"";this.level=0;this.filters=[]};n.prototype.setPrefix=function(z){this.prefix=z};n.prototype.setLevel=function(z){this.level="number"!==typeof z||0>z||8<z?0:z};n.prototype.setFilter=function(z){for(var L=[],N=0;N<arguments.length;N++){if(!(arguments[N]instanceof RegExp))throw new TypeError;L[N]=arguments[N]}this.filters=L};n.prototype.log=function(z,L,N,ca){if(F){if(3>arguments.length)throw new TypeError;if("number"!==typeof z||0>z||8<z)throw new TypeError;if("object"!==typeof L)throw new TypeError;
if("string"!==typeof N)throw new TypeError;if(!(z<this.level)||D){for(var E=0;E<this.filters.length;E++)if(null!==N.match(this.filters[E]))return;E=f();var M=L?L.id||null:null;var a="%c["+this.tag+" - "+w[z]+"]%c";a+="%c[%s]%c ";M&&(a+="%c["+M+"]%c ");this.prefix&&(a+=this.prefix);var A=[];A.push(a+N);A.push("color: #000000; background-color: "+q[z]);A.push("background-color: inherit");A.push("color: #757575;");A.push(1E3>E?Math.round(E).toString()+"ms":(E/1E3).toFixed(2)+"s");A.push("background-color: inherit");
M&&(A.push("color: "+b(L)),A.push("color: inherit"));A=A.concat(Array.prototype.slice.call(arguments,3));x&&console.info.apply(console,A)}}};n.prototype.debugf=function(z,L,N){this.log.apply(this,[1].concat(Array.prototype.slice.call(arguments)))};n.prototype.infof=function(z,L,N){this.log.apply(this,[2].concat(Array.prototype.slice.call(arguments)))};n.prototype.noticef=function(z,L,N){this.log.apply(this,[3].concat(Array.prototype.slice.call(arguments)))};n.prototype.warningf=function(z,L,N){this.log.apply(this,
[4].concat(Array.prototype.slice.call(arguments)))};n.prototype.errorf=function(z,L,N){this.log.apply(this,[5].concat(Array.prototype.slice.call(arguments)))};n.prototype.criticalf=function(z,L,N){this.log.apply(this,[6].concat(Array.prototype.slice.call(arguments)))};n.prototype.alertf=function(z,L,N){this.log.apply(this,[7].concat(Array.prototype.slice.call(arguments)))};n.prototype.emergencyf=function(z,L,N){this.log.apply(this,[8].concat(Array.prototype.slice.call(arguments)))};var e=new n,l=
e.setPrefix.bind(e),h=e.setLevel.bind(e),u=e.setFilter.bind(e),H=e.debugf.bind(e),P=e.infof.bind(e),Q=e.noticef.bind(e),G=e.warningf.bind(e),c=e.errorf.bind(e),d=e.criticalf.bind(e),t=e.alertf.bind(e);e=e.emergencyf.bind(e);I.DEFAULT=0;I.DEBUG=1;I.INFO=2;I.NOTICE=3;I.WARNING=4;I.ERROR=5;I.CRITICAL=6;I.ALERT=7;I.EMERGENCY=8;I.new=function(){return new n};I.newContext=function(z,L){var N={},ca;for(ca in z)z.hasOwnProperty(ca)&&(N[ca]=z[ca]);N.id=L;return N};I.timestamp=f;I.debugf=H;I.infof=P;I.noticef=
Q;I.warningf=G;I.errorf=c;I.criticalf=d;I.alertf=t;I.emergencyf=e;I.setPrefix=l;I.setLevel=h;I.setFilter=u;I.setVerbose=function(z){D=z};I.setOutputEnabled=function(z){F=z}})(qa);window.__upo_d=window.__upo_d||{};var da={};(function(I){var D=new function(){this.events={};this.addEventListener=function(x,w){this.events.hasOwnProperty(x)?this.events[x].push(w):this.events[x]=[w]};this.removeEventListener=function(x,w){this.events.hasOwnProperty(x)&&(w=this.events[x].indexOf(w),-1!=w&&this.events[x].splice(w,
1))};this.fireEvent=function(x,w,q,g){if(this.events.hasOwnProperty(x)){w=new F(x,w);x=this.events[x];g=x.length;for(var b=0;b<g;b++){try{var m=x[b].call(q,w)}catch(f){}if(void 0!=m)return m;if(w.shouldStop)break}}}},F=function(x,w){this.name=x;this.data=w;this.shouldStop=!1};I.CustomEvents=D})(da);(function(I){var D=function(F,x,w,q){x=Error(x,w,q);x.type=F;Object.setPrototypeOf(x,Object.getPrototypeOf(this));Error.captureStackTrace&&Error.captureStackTrace(x,D);return x};D.prototype=Object.create(Error.prototype,
{constructor:{value:Error,enumerable:!1,writable:!0,configurable:!0}});Object.setPrototypeOf?Object.setPrototypeOf(D,Error):D.__proto__=Error;I.CustomError=D})({});var xa={};(function(I){function D(b){return b.map(function(m){if("fluid"===m)return"fluid";var f=$jscomp.makeIterator(m.split("x").map(function(n){return parseInt(n,10)}));m=f.next().value;f=f.next().value;return isNaN(m)||isNaN(f)?null:{width:m,height:f}}).filter(function(m){return null!==m})}function F(b,m,f,n){switch(b){case "equals":return n===
m;case "startsWith":case "endsWith":case "includes":return n[b](m);case "equalsOneOf":return f.includes(n);case "startsWithOneOf":case "endsWithOneOf":case "includesOneOf":var e=b.split("OneOf")[0];return f.some(function(l){return n[e](l)})}}function x(b){b=void 0===b?{}:b;var m=void 0===b.forAllAdUnits?[]:b.forAllAdUnits,f=void 0===b.forAdUnits?[]:b.forAdUnits;if(0<m.length||0<f.length)return function(n){var e=[];m.forEach(function(l){var h=void 0===l.bidders?[]:l.bidders;g(l.whenDevice)&&e.push.apply(e,
h)});f.forEach(function(l){var h=l.code,u=l.codeList,H=l.whenCode,P=void 0===l.bidders?[]:l.bidders;g(l.whenDevice)&&q(H,h,u,n.code)&&e.push.apply(e,P)});n.bids=n.bids.filter(function(l){return!e.includes(l.bidder)});return n}}function w(b){return function(m){return b.some(function(f){var n=f.code,e=f.codeList,l=f.whenCode;if(g(f.whenDevice))return q(l,n,e,m.code)})}}function q(b,m,f,n){switch(b){case "equals":return n===m;case "startsWith":case "endsWith":case "includes":return n[b](m);case "equalsOneOf":return f.includes(n);
case "startsWithOneOf":case "endsWithOneOf":case "includesOneOf":var e=b.split("OneOf")[0];return f.some(function(l){return n[e](l)})}}function g(b){var m=$a.isMobile();switch(b){case "mobile":return m;case "desktop":return!m;default:return!0}}I.enableLegacySizesReplacer={hookName:"enableLegacySizesReplacer",handler:function(b){return b}};I.hideDOMElementsViaCSS={parseSettingValue:function(b){var m=void 0===b.org?[]:b.org,f=void 0===b.website?[]:b.website;return b.websiteOverridesOrg?f:[].concat($jscomp.arrayFromIterable(m),
$jscomp.arrayFromIterable(f))},handler:function(b){var m=[];b.forEach(function(f){var n=f.selectors;g(f.whenDevice)&&m.push.apply(m,$jscomp.arrayFromIterable(n))});0<m.length&&(b=document.createElement("style"),b.textContent=m.join(", ")+" { display: none !important; }",(document.head||document.body||document.documentElement).appendChild(b))}};I.insertCustomCSS={parseSettingValue:function(b){var m=void 0===b.org?[]:b.org,f=void 0===b.website?[]:b.website;return b.websiteOverridesOrg?f:[].concat($jscomp.arrayFromIterable(m),
$jscomp.arrayFromIterable(f))},handler:function(b){var m="";b.forEach(function(f){var n=void 0===f.customCSS?"":f.customCSS;g(f.whenDevice)&&(m=m+"\n"+n)});""!==m&&(b=document.createElement("style"),b.textContent=m,(document.head||document.body||document.documentElement).appendChild(b))}};I.prebidConfig={hookName:"prebidDoneInit",parseSettingValue:function(b){var m=void 0===b.org?{}:b.org,f=void 0===b.website?{}:b.website;return b.websiteOverridesOrg?f:Object.assign({},m,f)},handler:function(b,m){var f=
m.data.cpbjs;f.que.push(function(){f.setConfig(b)})}};I.removeSizes={hookName:"sizesToRemoveBySpace",parseSettingValue:function(b){var m=b.websiteOverridesOrg,f=void 0===b.org?{}:b.org,n=void 0===f.forAllSpaces?[]:f.forAllSpaces;f=void 0===f.forSpaces?[]:f.forSpaces;var e=void 0===b.website?{}:b.website;b=void 0===e.forAllSpaces?[]:e.forAllSpaces;e=void 0===e.forSpaces?[]:e.forSpaces;n=m?b:[].concat($jscomp.arrayFromIterable(n),$jscomp.arrayFromIterable(b));m=m?e:[].concat($jscomp.arrayFromIterable(f),
$jscomp.arrayFromIterable(e));return{forAllSpaces:n,forSpaces:m}},handler:function(b,m){var f=b.forAllSpaces;b=b.forSpaces;var n=m.data.spaceName,e=new Set;f.forEach(function(l){var h=void 0===l.sizes?[]:l.sizes;g(l.whenDevice)&&h.forEach(function(u){e.add(u)})});b.forEach(function(l){var h=l.name,u=l.nameList,H=l.whenName,P=void 0===l.sizes?[]:l.sizes;g(l.whenDevice)&&F(H,h,u,n)&&P.forEach(function(Q){e.add(Q)})});return D([].concat($jscomp.arrayFromIterable(e)))}};I.rewriteGAMSlots={hookName:"rewriteGAMSlots",
handler:function(b,m){m=b.rewritePathData;var f;switch(b.rewritePathMethod){case "insertBTAdUnit":b=m||{};var n=b.btUnitName,e=b.insertionDepth,l=b.maxDepth;e&&(f=function(h){var u=h.getAdUnitPath();"/"!==u[0]&&(u="/"+u);h=n||"Blockthrough";u=u.split("/");u.splice(e,0,h);l&&0<l&&(u=u.slice(0,l+1));return u.join("/")})}if(f)return{parseSlotAdUnitPath:f,shouldCopyTargeting:!0}}};I.scrapeGAMSlots={hookName:"scrapeGoogletagSlots",handler:function(b){return b}};I.scrapePrebid={hookName:"scrapePrebidAdUnits",
parseSettingValue:function(b){var m=void 0===b.org?{}:b.org,f=void 0===b.website?{}:b.website;if(b.websiteOverridesOrg)return f;b={};b.adUnitsVar=m.adUnitsVar||f.adUnitsVar;var n=(m.parse||{}).removeBidders,e=(f.parse||{}).removeBidders;if(n||e)b.parse={},b.parse.removeBidders=n&&e?{forAllAdUnits:[].concat($jscomp.arrayFromIterable(n.forAllAdUnits||[]),$jscomp.arrayFromIterable(e.forAllAdUnits||[])),forAdUnits:[].concat($jscomp.arrayFromIterable(n.forAdUnits||[]),$jscomp.arrayFromIterable(e.forAdUnits||
[]))}:n||e;m=(m.filterOut||{}).adUnits;f=(f.filterOut||{}).adUnits;if(m||f)b.filterOut={},b.filterOut.adUnits=m&&f?[].concat($jscomp.arrayFromIterable(m),$jscomp.arrayFromIterable(f)):m||f;return b},handler:function(b,m){var f=b.adUnitsVar,n=b.parse,e=b.filterOut;if(b.dontScrape)b=!1;else{b=m.hookFileData||{};f&&(b.getAdUnits=function(){return va.extractVariableFromString(window,f)});if(n){var l=n.removeBidders?x(n.removeBidders):null,h=b.parseAdUnit;l&&(b.parseAdUnit=h?function(P){return l(h(P))}:
l)}if(e){var u=e.adUnits?w(e.adUnits):null,H=b.filterOutAdUnit;u&&(b.filterOutAdUnit=H?function(P){return H(P)||u(P)}:u)}}return b}}})(xa);var T={};(function(I){I.consts={selectorPosition:{APPEND_CHILD:0,INSERT_BEFORE:1},complianceStatus:{UNKNOWN:0,COMPLIANT:1,INCOMPLIANT:2,ERROR:3,PENDING:4},acceptableStandardScreenSize:{width:1366,height:768},headerBiddingType:{prebid:1},refreshType:{UNKNOWN:0,ALL:1,VISIBLE:2,HIDDEN:3}};I.cpbjs=void 0;I.upoSettings={acceptableURLParam:"upapi=true",timeout:3E3,refreshTimeout:3E3,
staticDomain:"static.btloader.com",whitelistedFrameSettings:{url:"//static.btloader.com/safeFrame.html?upapi=true",laterSrcModification:void 0,isOurOriginSafeFrame:!0},minTimeBetweenRefreshes:3E4};var D=new function(){this.data={};this.setItem=function(F,x){this.data[F]=x};this.getItem=function(F){return this.data[F]};this.removeItem=function(F){delete this.data[F]};this.clearSharedObject=function(){this.data={}}};I.SharedObject=D;I.uGoogletag=void 0;I.whitelistedFrame=void 0})(T);var C={};(function(I){var D=
function(x,w,q){for(var g=[],b=0;b<x.length;b++)w.call(q,x[b],b,x)&&g.push(x[b]);return g},F=function(x){return"[object Array]"===Object.prototype.toString.call(x)};I.map=function(x,w){for(var q=[],g=0;g<x.length;g++)q.push(w(x[g],g,x));return q};I.filter=D;I.reject=function(x,w,q){for(var g=[],b=0;b<x.length;b++)w.call(q,x[b],b,x)||g.push(x[b]);return g};I.forEach=function(x,w){if(x)for(var q=0;q<x.length;q++)w(x[q],q,x)};I.find=function(x,w){for(var q=0;q<x.length;q++){var g=x[q];if(w(g,q,x))return g}};
I.flat=function(x){for(var w=[],q=0;q<x.length;q++){var g=x[q];if(F(g))for(var b=0;b<g.length;b++)w.push(g[b]);else w.push(g)}return w};I.isArray=F;I.distinct=function(x){return D(x,function(w,q,g){return g.indexOf(w)===q})};I.reduce=function(x,w){if(null===x)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!==typeof w)throw new TypeError(w+" is not a function");var q=Object(x),g=q.length>>>0,b=0;if(3<=arguments.length)var m=arguments[2];else{for(;b<g&&!(b in
q);)b++;if(b>=g)throw new TypeError("Reduce of empty array with no initial value");m=q[b++]}for(;b<g;)b in q&&(m=w(m,q[b],b,q)),b++;return m};I.CDefer=function(){this.fate="unresolved";this.state="pending";var x,w;this.promise=new Promise(function(q,g){x=q;w=g});this.promise.then(function(q){this.state="fulfilled";return q},function(q){this.state="rejected";return q});this.resolve=function(q){if("resolved"===this.fate)throw"Deferred cannot be resolved twice";this.fate="resolved";x(q)};this.reject=
function(q){if("resolved"===this.fate)throw"Deferred cannot be resolved twice";this.fate="resolved";w(q)};this.isResolved=function(){return"resolved"===this.fate};this.isPending=function(){return"pending"===this.state};this.isFulfilled=function(){return"fulfilled"===this.state};this.isRejected=function(){return"rejected"===this.state}};I.addClass=function(x,w){if(w&&x){var q=w.className;-1==q.indexOf(x)&&(""!=q&&(x=" "+x),w.className=q+x)}};I.removeClass=function(x,w){if(w&&x){var q=w.className;q=
q.replace(new RegExp("\\b"+x+"\\b","g"),"");w.className=q}};I.hasClass=function(x,w){if(x&&w)return-1<(" "+x.className+" ").indexOf(" "+w+" ")};I.objectAssign=function(x,w){if(null===x||void 0===x)throw new TypeError("Cannot convert undefined or null to object");for(var q=Object(x),g=1;g<arguments.length;g++){var b=arguments[g];if(null!==b&&void 0!==b)for(var m in b)Object.prototype.hasOwnProperty.call(b,m)&&(q[m]=b[m])}return q}})(C);var la={};(function(I){var D=function(q,g,b){if(!q||"number"!==
typeof g||"number"!==typeof b||0>=g||0>=b||g>b)throw new TypeError;g=Math.floor(Math.random()*(b+1-g))+g;b="";for(var m=0;m<g;m++)b+=q.charAt(Math.floor(Math.random()*q.length));return b},F=function(q,g){return D("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",q,g)},x=function(q,g){return D("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",q,g)},w=function(q,g){return D("0123456789",q,g)};I.stringRange=F;I.string=function(q){return F(q,q)};I.lettersRange=x;I.letters=function(q){return x(q,
q)};I.digitsRange=w;I.digits=function(q){return w(q,q)}})(la);var Ba={};(function(I){var D=qa.new();D.setPrefix("utf8: ");I.encode=function(F){try{if(window.TextEncoder)return(new window.TextEncoder("utf-8")).encode(F).buffer}catch(q){D.debugf(null,"TextEncoder %o",q)}F=unescape(encodeURIComponent(F));for(var x=new Uint8Array(F.length),w=0;w<F.length;w++)x[w]=F.charCodeAt(w);return x.buffer};I.decode=function(F){try{if(window.TextDecoder)return(new window.TextDecoder("utf-8")).decode(new Uint8Array(F))}catch(g){D.debugf(null,
"TextDecoder %o",g)}var x="";F=new Uint8Array(F);for(var w=F.byteLength,q=0;q<w;q++)x+=String.fromCharCode(F[q]);return decodeURIComponent(escape(x))}})(Ba);var sa={};(function(I){var D=da.CustomEvents,F=new function(){this.Types={XHR_OPEN_PRE:"xhropenpre",FETCH_PRE:"fetchpre",REMOVE_CHILD_PRE:"removechildpre",INSERT_BEFORE_PRE:"insertbeforepre",APPEND_CHILD_PRE:"appendchildpre",APPEND_CHILD_POST:"appendchildpost",IMG_SET_ATTRIBUTE_PRE:"imgsetattributepre",SET_ATTRIBUTE_PRE:"setattributepre",WIN_OPEN_PRE:"winopenpre",
HTML_SRC_PROP_PRE:"htmlsrcproppre",HTML_ELEMENT_INNERHTML_PRE:"htmlelementinnerhtmlpre",HTML_ELEMENT_INNERHTML_POST:"htmlelementinnerhtmlpost",HTML_ELEMENT_HAS_CHILD_NODES_PRE:"htmlelementhaschildnodespre",HTML_ELEMENT_TEXTCONTENT_PRE:"htmlelementtextcontentpre"};var x=["xhrThwartOpen","fetchThwartOpen"];this.hookFunction=function(w,q,g,b,m){var f=w[q];f&&(w[q]=function(){var n=Array.prototype.slice.call(arguments);if(window.__bt_intrnl.stopFlag)return f.apply(this,n);if(g)try{var e=D.fireEvent(g,
n,this);if(void 0!=e)return e}catch(l){if(!m)throw l;if(0<=x.indexOf(l.type))throw l;}e=f.apply(this,n);if(b)try{D.fireEvent(b,e,this)}catch(l){if(!m)throw l;if(0<=x.indexOf(l.type))throw l;}return e})};this.hookPropertySetter=function(w,q,g,b,m){var f=w.__lookupGetter__(q),n=w.__lookupSetter__(q);f&&(w.__defineSetter__(q,function(){var e=Array.prototype.slice.call(arguments);if(window.__bt_intrnl.stopFlag)return n.apply(this,e);if(g)try{var l=D.fireEvent(g,e,this);if(void 0!=l)return l}catch(h){if(!m)throw h;
if(0<=x.indexOf(h.type))throw h;}l=n.apply(this,e);if(b)try{D.fireEvent(b,l,this)}catch(h){if(!m)throw h;if(0<=x.indexOf(h.type))throw h;}return l}),w.__defineGetter__(q,function(){try{return f.apply(this)}catch(e){}}))};this.addEventListener=function(w,q){D.addEventListener(w,q)}};I.Hooks=F})(sa);var eb={};(function(I){var D=da.CustomEvents,F={},x=Object.entries(F).reduce(function(w,q){q=$jscomp.makeIterator(q);var g=q.next().value;q=q.next().value;q._enabled&&(g.endsWith("__org")?
(g=g.split("__org")[0],w[g]=w[g]||{},w[g].org=q.value):g.endsWith("__website")?(g=g.split("__website")[0],w[g]=w[g]||{},w[g].websiteOverridesOrg=!!q._overrides_org,w[g].website=q.value):w[g]=q.value);return w},{});I.settings={rawSettings:F,parsed:x};I.loadSettings=function(){Object.entries(x).forEach(function(w){var q=$jscomp.makeIterator(w);w=q.next().value;q=q.next().value;if(xa[w]){var g=xa[w],b=g.hookName,m=g.parseSettingValue,f=g.handler,n=m?m(q):q;b?D.addEventListener(b,function(e){return f(n,
e)}):(f(n),qa.infof(null,"scriptsettings: loadSettings: "+w+" (no associated hook): Setting applied."))}else qa.errorf(null,"scriptsettings: loadSettings: No setting handler found for %o (setting will not be applied).",w)})}})(eb);var nb={};(function(I){var D=da.CustomEvents,F=function(){var x="push";window.googletag.cmd.unshift&&(x="unshift");window.googletag.cmd[x](function(){window.__cmp&&window.__cmp("getVendorConsents",null,function(w){!w||!w.gdprApplies||w.purposeConsents&&w.purposeConsents[1]&&
w.purposeConsents[2]&&w.purposeConsents[3]&&w.purposeConsents[4]&&w.purposeConsents[5]||window.googletag.pubads().setRequestNonPersonalizedAds(1)});D.fireEvent("skipDisableInitialLoad")||window.googletag.pubads().disableInitialLoad();D.fireEvent("disableSingleRequest")||window.googletag.pubads().enableSingleRequest();D.fireEvent("collapseEmptyDivs")&&window.googletag.pubads().collapseEmptyDivs(!0);window.googletag.pubads().enableAsyncRendering();window.googletag.enableServices()})};I.presetProvider=
function(x){switch(x){case "dfp":return F}}})(nb);var ib={};(function(I){var D=qa.new();D.setPrefix("visibiliy: ");var F=[],x=function(g){g=g.getBoundingClientRect();return document.hasFocus()&&0<=g.top&&0<=g.left&&g.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&g.right<=(window.innerWidth||document.documentElement.clientWidth)},w=function(){for(var g=[],b=0;b<F.length;b++){var m=F[b][0];if(m&&m.parentElement){var f=F[b][1];x(m)?f():g.push([m,f])}}F=g};U.onFocus(function(){w()});
U.onScroll(function(){w()});var q=function(g){if(g){var b=g.getBoundingClientRect();return b.width||b.height?(g=document.documentElement,{top:b.top+window.pageYOffset-g.clientTop,left:b.left+window.pageXOffset-g.clientLeft}):b}};I.onVisible=function(g,b){g&&g.parentElement&&(x(g)?b():F.push([g,b]))};I.calculateElementOffset=q;I.isElementVisible=function(g){var b=!1;try{var m=document.querySelector(g)}catch(Q){D.errorf(null,"document.querySelector:%o - error:%o",g,Q)}if(!m)return!1;if("none"===window.getComputedStyle(m).display){var f=
m.style.getPropertyValue("display");var n=m.style.getPropertyPriority("display");m.style.setProperty("display","block","important");b=!0}g=q(m);var e=document.documentElement.scrollLeft||window.scrollX,l=document.documentElement.scrollTop||window.scrollY,h=window.innerHeight,u=window.innerWidth,H=m.offsetHeight,P=m.offsetWidth;g=g.left>=e&&g.top>=l&&P+g.left<=e+u&&H+g.top<=l+h?!0:(g.left<=e&&g.left+P>e||g.left>=e&&g.left<=e+u)&&(g.top<=l&&g.top+H>l||g.top>=l&&g.top<=l+h)?!0:!1;"hidden"===document.visibilityState&&
(g=!1);b&&m.style.setProperty("display",f,n);return g}})(ib);var $a={};(function(I){I.PlatformUnknown="unknown";I.PlatformAndroid="android";I.PlatformIOS="ios";I.PlatformWindows="windows";I.PlatformLinux="linux";I.PlatformOSX="osx";I.BrowserUnknown="unknown";I.BrowserChrome="chrome";I.BrowserFirefox="firefox";I.BrowserIE="ie";I.BrowserEdge="edge";I.BrowserOpera="opera";I.BrowserSafari="safari";I.BrowserUCBrowser="uc";I.DeviceUnknown="unknown";I.DeviceHighEndPhone="highendphone";I.DeviceTablet="tablet";
I.DevicePersonalComputer="pc";I.DeviceConnectedTV="tv";I.DeviceGameConsole="console";I.browser=function(){var D=navigator.userAgent;return/edge/i.test(D)?"edge":/opera/i.test(D)||/opr|opios/i.test(D)?"opera":/chrome|chromium/i.test(D)?"chrome":/firefox|iceweasel|fxios/i.test(D)?"firefox":/msie|trident/i.test(D)?"ie":/^((?!chrome|android).)*safari/i.test(D)?"safari":/ucbrowser/i.test(D)?"uc":window.chrome?"chrome":"undefined"!==typeof InstallTrigger?"firefox":eval("/*@cc_on!@*/false")||document.documentMode?
"ie":window.StyleMedia?"edge":"unknown"};I.platform=function(){var D=navigator.userAgent;return/windows|win32/i.test(D)?"windows":/ipod|iphone|ipad/i.test(D)?"ios":/android/i.test(D)?"android":/macintosh|mac os x/i.test(D)?"osx":/linux/i.test(D)?"linux":/windows phone/i.test(D)?"windowsphone":"unknown"};I.device=function(){var D=navigator.userAgent;return/tablet|ipad/i.test(D)?"tablet":/mobile/i.test(D)||/android|webos|iphone|ipod|blackberry|iemobile|windows phone|opera mini/i.test(D)||/ucbrowser/i.test(D)&&
window.ucweb?"highendphone":"pc"};I.isMobile=function(){return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(navigator.userAgent||navigator.vendor||window.opera)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test((navigator.userAgent||
navigator.vendor||window.opera).substr(0,4))}})($a);var sb={};(function(I){I.set=function(D,F){if(!window.localStorage&&!window.sessionStorage)return qa.errorf(null,"no Storage implementations"),!1;var x=!1;if(window.localStorage)try{window.localStorage.setItem(D,F),x=!0}catch(w){qa.errorf(null,"webstore: set: localStorage(%s): %o",D,w)}if(window.sessionStorage)try{window.sessionStorage.setItem(D,F),x=!0}catch(w){qa.errorf(null,"webstore: set: sessionStorage(%s): %o",D,w)}return x};I.get=function(D){return window.localStorage?
window.localStorage.getItem(D):window.sessionStorage?window.sessionStorage.getItem(D):null};I.remove=function(D){var F=null;if(window.localStorage)try{window.localStorage.removeItem(D)}catch(x){qa.errorf(null,"webstore: remove: localStorage(%s): %o",D,x),F=x}if(window.sessionStorage)try{window.sessionStorage.removeItem(D)}catch(x){qa.errorf(null,"webstore: remove: sessionStorage(%s): %o",D,x),F=x}return null!=F?!1:!0}})(sb);var va={};(function(I){function D(c,d){return d?"\x00"===c?"\ufffd":c.slice(0,
-1)+"\\"+c.charCodeAt(c.length-1).toString(16)+" ":"\\"+c}function F(c){var d=c.charAt(0);return"#"===d||"."===d?d+c.substring(1).replace(q,D):c}function x(c){return Math.floor(Math.random()*Math.floor(c))}I.addAcceptableParam=function(c){if(-1<c.indexOf(T.upoSettings.acceptableURLParam))return c;c=-1<c.indexOf("?")?c+"&"+T.upoSettings.acceptableURLParam:c+"?"+T.upoSettings.acceptableURLParam;return c=c.replace("&&upapi=true","&upapi=true")};var w=function(c){if(!c)return c;var d=[Number,String,Boolean];
try{if(C.forEach(d,function(L){c instanceof L&&(t=L(c))}),"undefined"==typeof t)if("[object Array]"===Object.prototype.toString.call(c)){var t=[];C.forEach(c,function(L,N,ca){t[N]=w(L)})}else if("object"==typeof c)if(c.nodeType&&"function"==typeof c.cloneNode)t=c.cloneNode(!0);else if(c.prototype)t=c;else if(c instanceof Date)t=new Date(c);else{t={};for(var z in c)t[z]=w(c[z])}else t=c}catch(L){t=c}return t},q=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,g=function(c){try{if(c){try{var d=document.querySelector(F(c))}catch(N){}if(d){c=
!1;if("none"===window.getComputedStyle(d).display){var t=d.style.getPropertyValue("display");var z=d.style.getPropertyPriority("display");d.style.setProperty("display","block","important");c=!0}var L=d.getBoundingClientRect().top+window.scrollY;c&&d.style.setProperty("display",t,z);return L<=T.consts.acceptableStandardScreenSize.height}}}catch(N){}};I.deepClone=w;I.isNil=function(c){return null==c};I.escapeSelector=F;I.isFirstViewPortElement=g;I.extractQueryParamFromUrl=function(c,d){c=c.replace(/[\[\]]/g,
"\\$&");return(c=(new RegExp("[?&]"+c+"(=([^&#]*)|&|#|$)")).exec(d))?c[2]?decodeURIComponent(c[2].replace(/\+/g," ")):"":null};I.doesBrowserSupportDocOpen=function(){var c=$a.browser();return!("edge"===c||"ie"===c)};I.getTopmostAccessibleWindow=function(){var c=window;try{for(;c!==c.parent;)c.parent.document,c=c.parent}catch(d){}return c};I.extractVariableFromString=function(c,d){if(c){d=d.split(".");for(var t=0;t<d.length;t++){var z=d[t];if(!c[z])return;c=c[z]}return c}};I.getRandomInt=x;I.getTrueByProbability=
function(c){return x(100)<c};I.truncateString=function(c,d){return c.length>d?c.substring(0,d):c};var b=new function(){this.insertElement=function(c,d,t){switch(t){case "appendChild":d.appendChild(c);break;case "insertBefore":d.parentElement.insertBefore(c,d);break;case "insertAfter":d.nextElementSibling?this.insertElement(c,d.nextElementSibling,"insertBefore"):this.insertElement(c,d.parentElement,"appendChild")}}};I.ElementInsertion=b;var m=function(c){var d=c.width,t=16<=d*c.height/(T.consts.acceptableStandardScreenSize.width*
T.consts.acceptableStandardScreenSize.height)*100;return 2==(350<c.width?1:2)?t||350<d:t||200<c.height},f=function(c,d){var t=c&&document.querySelector(F(c)),z=350<d.width?1:2,L=!1,N=!1,ca=d.height,E=d.width;if(t){if("none"===window.getComputedStyle(t).display){var M=t.style.getPropertyValue("display");var a=t.style.getPropertyPriority("display");t.style.setProperty("display","block","important");L=!0}ca=t.getBoundingClientRect().top;ca=(N=ca+d.height>T.consts.acceptableStandardScreenSize.height)?
T.consts.acceptableStandardScreenSize.height-ca:d.height}c=2==z&&N?f(c,{width:E,height:ca})&&n(d):m(d);L&&t.style.setProperty("display",M,a);return c},n=function(c){var d=350<c.width?1:2;return 26<=c.width*c.height/(T.consts.acceptableStandardScreenSize.width*T.consts.acceptableStandardScreenSize.height)*100||1==d&&400<c.height},e=function(c,d){return c&&document.querySelector(F(c))&&!g(c)?n(d):f(c,d)};I.isUnacceptable=e;var l=da.CustomEvents,h=[{width:300,height:250},{width:336,height:280},{width:300,
height:600},{width:160,height:600},{width:120,height:600},{width:120,height:240},{width:250,height:250},{width:200,height:200},{width:180,height:150},{width:125,height:125},{width:728,height:90},{width:970,height:90},{width:970,height:250},{width:468,height:60},{width:234,height:60}],u=function(c,d){return C.filter(c,function(t){return(350<t.width?1:2)==d})},H=function(c,d){c=u(h,c);return c=C.filter(c,function(t){return m(t)?!d:!0})},P=function(c,d,t){for(var z,L,N=L=z=0;N<c.length;N++){var ca=c[N];
ca&&ca.width&&ca.height&&(ca.width>z&&(z=ca.width),ca.height>L&&(L=ca.height))}d=H(350<d.width?1:2,t);for(t=0;t<d.length;t++)if(N=d[t],N.width<=z&&N.height<=L){ca=!0;for(var E=0;E<c.length;E++){var M=c[E];if(M&&M.width==N.width&&M.height==N.height){ca=!1;break}}if(ca)return N}};I.sizesRemover=function(c,d){var t=[],z=l.fireEvent("enableLegacySizesReplacer");C.forEach(d,function(ca){ca.width&&ca.height&&t.push({width:ca.width,height:ca.height})});for(d=0;d<t.length;d++){var L=t[d];if(e(c,L))if(z){var N=
g(c);t[d]=P(t,L,N)}else t.splice(d,1)}return t};I.SubscriptionLayer=function(){var c={};this.subscribeForEvent=function(d,t){c[d]=c[d]||[];0>c[d].indexOf(t)&&c[d].push(t)};this.invokeEventCallbacks=function(d,t){C.forEach(c[d]||[],function(z){z.call(void 0,t)})}};var Q=function(c){var d=document.createElement("a");d.setAttribute("href",c);return d},G=function(c,d){if(c&&0<c.length)for(var t=0;t<c.length;t++){for(var z=c[t],L=!0,N=0;N<z.length;N++){var ca=z[N];if(0>d[ca.type].indexOf(ca.string)){L=
!1;break}}if(L)return!0}};I.isSyncUrl=function(c,d){if("IMG"!==d)return!1;c=Q(c);d=[[{string:"/sync",type:"pathname"}],[{string:"/cookiesync",type:"pathname"}],[{string:"/rset",type:"pathname"}],[{string:"/getuid",type:"pathname"}],[{string:"/track",type:"pathname"}],[{string:"/pixel",type:"pathname"}],[{string:"/Pixel",type:"pathname"}],[{string:".pixel",type:"pathname"}],[{string:"pixel.",type:"pathname"}],[{string:"/match",type:"pathname"}],[{string:"/partner",type:"pathname"}],[{string:"/visitormatch",
type:"pathname"}],[{string:"/ping_match",type:"pathname"}],[{string:"/ImgSync",type:"pathname"}],[{string:"/identify",type:"pathname"}],[{string:"/usync/",type:"pathname"}],[{string:"/usersync",type:"pathname"}],[{string:"/user-sync",type:"pathname"}],[{string:"/ddm/trackimp",type:"pathname"}],[{string:"/user_sync.php",type:"pathname"}],[{string:"/bh/rtset",type:"pathname"}],[{string:"%2Fsync",type:"pathname"}],[{string:"cksync.php",type:"pathname"}],[{string:".sync",type:"hostname"}],[{string:"sync-",
type:"hostname"}],[{string:"storygize.net",type:"hostname"},{string:"/ccm",type:"href"}],[{string:"geo-um.btrll.com",type:"hostname"}],[{string:"nexac.com",type:"hostname"},{string:"/e/sr",type:"href"}],[{string:"api.bttrack.com",type:"hostname"}],[{string:"postrelease.com",type:"hostname"}],[{string:"sitescout.com",type:"hostname"}],[{string:"criteo.net",type:"hostname"}],[{string:"3lift.com",type:"hostname"},{string:"/sync",type:"href"}]];for(var t=0;t<d.length;t++){for(var z=d[t],L=!0,N=0;N<z.length;N++){var ca=
z[N];if(0>c[ca.type].indexOf(ca.string)){L=!1;break}}if(L)return!0}return!1};I.isWhitelistURL=function(c,d){c=Q(c);return G({SCRIPT:[[{string:"3lift.com",type:"hostname"},{string:"/header",type:"href"}]]}[d],c)?!1:G({IMG:[[{string:"adsafeprotected.com",type:"hostname"}],[{string:"doubleclick.net",type:"hostname"}],[{string:"moatads.com",type:"hostname"}],[{string:"postrelease.com",type:"hostname"}],[{string:"mynativeplatform.com",type:"hostname"}],[{string:"360yield.com",type:"hostname"}],[{string:"sharethrough.com",
type:"hostname"}],[{string:"doubleverify.com",type:"hostname"}],[{string:"zemanta.com",type:"hostname"}],[{string:"adnxs.com",type:"hostname"}],[{string:"sonobi.com",type:"hostname"}],[{string:"insight.adsrvr.org",type:"hostname"}],[{string:"serving-sys.com",type:"hostname"}],[{string:"advertising.com",type:"hostname"}],[{string:"openx.net",type:"hostname"}],[{string:"3lift.com",type:"hostname"}],[{string:"flashtalking.com",type:"hostname"},{string:"/imp",type:"href"}],[{string:"adroll.com",type:"hostname"}],
[{string:"33across.com",type:"hostname"},{string:"/ps",type:"href"}],[{string:"adsrvr.org/bid",type:"href"}],[{string:"imrworldwide.com",type:"hostname"}],[{string:"criteo.com",type:"hostname"},{string:"/delivery",type:"href"}],[{string:"ad_overlays",type:"pathname"}]],IFRAME:[[{string:"googlesyndication.com/safeframe",type:"href"}],[{string:"ad.doubleclick.net/ddm",type:"hostname"}],[{string:"rubiconproject.com",type:"hostname"},{string:"multi-sync.html",type:"href"}],[{string:"3lift.com",type:"hostname"},
{string:"sync?",type:"href"}],[{string:"ca-pub-15988",type:"href"}],[{string:"ff.doubleclick.net",type:"hostname"}]],SCRIPT:[[{string:"adnxs.com",type:"hostname"},{string:"trk.js",type:"href"}],[{string:"/sync",type:"pathname"}],[{string:"pagead2.googlesyndication.com",type:"hostname"}],[{string:"adservice.google.",type:"hostname"}],[{string:"doubleclick.net/gpt/pubads_impl_",type:"href"}],[{string:"native.sharethrough.com/assets/sfp.js",type:"href"}],[{string:"sharethrough.com/api",type:"href"}],
[{string:"moatads.com",type:"hostname"}],[{string:"3lift.com",type:"hostname"}],[{string:"adsafeprotected.com",type:"hostname"}],[{string:"doubleverify.com",type:"hostname"}],[{string:"match.adsrvr.org",type:"hostname"}],[{string:".adnxs.com/getuidp",type:"href"}],[{string:"pubads_impl_rendering_",type:"href"}],[{string:"cdn.ampproject.org",type:"href"}]],LINK:[[{string:"//tpc.googlesyndication.com/safeframe",type:"href"}],[{string:"ntv.io",type:"hostname"}],[{string:"moatads.com",type:"hostname"}],
[{string:"adservice.google.",type:"hostname"}]]}[d],c)?!0:!1}})(va);(function(I){var D="0",F=function(){var e=f(D);return e?(e=JSON.parse(e),"object"!=typeof e?{}:e):{}},x=function(e){return(e=JSON.stringify(e))?m(D,e):!1},w=function(e){return null==e?!1:0>e-(new Date).getTime()},q=function(e){var l=F();delete l[e];return x(l)};I.setFlag=function(e,l,h){var u=F();u[e]={v:l,e:h};return x(u)};I.getFlag=function(e){var l=F();return void 0==l[e]?null:w(l[e].e)?(q(e),null):l[e].v};I.removeFlag=q;I.clearFlags=
function(e){return n(D)};I.expireFlags=function(){var e=F(),l=[],h;for(h in e)w(e[h].e)&&l.push(h);if(0!=l.length){for(h in l)delete e[h];x(e)}};var g=0,b=function(e){return ea.sum32a(Ba.encode(g.toString()+"___"+e)).toString()},m=function(e,l){e=b(e);return sb.set(e,btoa(l))},f=function(e){e=b(e);return(e=sb.get(e))?atob(e):null},n=function(e){e=b(e);return sb.remove(e)};I.setSeed=function(e){g=e;D=b("opt_"+e.toString())};I.set=m;I.get=f;I.remove=n})({});var vb={};(function(I){function D(b){try{return document.querySelector(b)}catch(m){F.errorf(null,
"document.querySelector:%o - error:%o",b,m)}}var F=qa.new();F.setPrefix("utils: ");I.refreshTypeDecoder=function(b){switch(b){case "ALL":return T.consts.refreshType.ALL;case "VISIBLE":return T.consts.refreshType.VISIBLE;case "HIDDEN":return T.consts.refreshType.HIDDEN;default:return T.consts.refreshType.UNKNOWN}};I.getElementWithSelector=D;I.getSpaceElement=function(b){return b&&b.selector?D(b.selector.value):null};var x=new function(){var b=[],m=[];this.setMovePositionRules=function(n){b=n||[]};
this.dispatch=function(n){try{if(!(!b||0>=b.length||!(n=C.filter(n,function(l){return 0>m.indexOf(l)}))||0>=n.length)){var e=function(l,h){if(!(l>h)){for(var u=0;u<n.length;u++){for(var H=n[u],P=[],Q=0;Q<b.length;Q++){var G=b[Q];f(G,{space:H})&&(m.push(H),G.stayLive||P.push(G))}b=0<P.length?C.filter(b,function(c){return 0>P.indexOf(c)}):b}0<b.length&&setTimeout(function(){e(l+1,h)},100)}};e(0,20)}}catch(l){}};var f=function(n,e){var l=n.elementToMove(e);e=n.relativeElement(e);return l&&e&&!l.__upo_moved?
(va.ElementInsertion.insertElement(l,e,n.htmlElementInsertionType),l.__upo_moved=!0):!1}};I.movePositionService=x;var w={},q=function(b,m){try{b.addEventListenerOrginal=b.addEventListener,b.addEventListener=function(){var f=Array.prototype.slice.call(arguments);if("load"==f[0])w[m]=w[m]||[],w[m].push(f[1]);else return b.addEventListenerOrginal.apply(this,f)},b.removeEventListenerOrginal=b.removeEventListener,b.removeEventListener=function(){var f=Array.prototype.slice.call(arguments);if("load"==f[0])w[m]&&
(w[m]=C.filter(w[m],function(n){return n!=f[1]}));else return b.removeEventListenerOrginal.apply(this,f)}}catch(f){}},g=function(b){b=b.contentWindow;var m=function(G){0==G.indexOf("//")&&(G=va.getTopmostAccessibleWindow().location.protocol+G);return G},f=function(G,c){if(G&&""==G.src&&G.outerHTML){var d=(new RegExp(c+'="([^"]+)"',"g")).exec(G.outerHTML);d&&d[1]&&(G[c]=m(d[1]))}},n=b.XMLHttpRequest.prototype.open;b.XMLHttpRequest.prototype.open=function(){try{var G=Array.prototype.slice.call(arguments);
G[1]=m(G[1])}catch(c){}return n.apply(this,G)};var e=b.open;b.open=function(){try{var G=Array.prototype.slice.call(arguments);G[0]=m(G[0])}catch(c){}return e.apply(this,G)};var l=b.HTMLElement.prototype.insertBefore;b.HTMLElement.prototype.insertBefore=function(){try{var G=Array.prototype.slice.call(arguments),c=l.apply(this,G);-1<["SCRIPT","IFRAME"].indexOf(G[0].tagName)&&f(G[0],"src");"LINK"===G[0].tagName&&f(G[0],"href")}catch(d){}return c};var h=b.HTMLElement.prototype.appendChild;b.HTMLElement.prototype.appendChild=
function(){try{var G=Array.prototype.slice.call(arguments),c=h.apply(this,G);-1<["SCRIPT","IFRAME"].indexOf(G[0].tagName)&&f(G[0],"src");"LINK"===G[0].tagName&&f(G[0],"href")}catch(d){}return c};var u=b.HTMLElement.prototype.__lookupGetter__("innerHTML"),H=b.HTMLElement.prototype.__lookupSetter__("innerHTML");b.HTMLElement.prototype.__defineSetter__("innerHTML",function(){try{var G=Array.prototype.slice.call(arguments),c=H.apply(this,G);f(this.firstChild,"src")}catch(d){}return c});b.HTMLElement.prototype.__defineGetter__("innerHTML",
function(){try{return u.apply(this)}catch(G){}});for(var P="HTMLScriptElement HTMLElement HTMLVideoElement HTMLAudioElement HTMLHtmlElement HTMLHeadElement HTMLLinkElement HTMLStyleElement HTMLBodyElement HTMLFormElement HTMLSelectElement HTMLOptionElement HTMLInputElement HTMLTextAreaElement HTMLButtonElement HTMLLabelElement HTMLFieldSetElement HTMLLegendElement HTMLUListElement HTMLOListElement HTMLDListElement HTMLDirectoryElement HTMLMenuElement HTMLLIElement HTMLDivElement HTMLParagraphElement HTMLHeadingElement HTMLQuoteElement HTMLPreElement HTMLBRElement HTMLFontElement HTMLHRElement HTMLAnchorElement HTMLImageElement HTMLObjectElement HTMLParamElement HTMLMapElement HTMLModElement HTMLAreaElement HTMLTableElement HTMLTableCaptionElement HTMLTableColElement HTMLTableSectionElement HTMLTableRowElement HTMLTableCellElement HTMLFrameSetElement HTMLFrameElement HTMLIFrameElement".split(" "),
Q=0;Q<P.length;Q++)b[P[Q]]&&function(G){G=G.prototype;var c=G.__lookupGetter__("src"),d=G.__lookupSetter__("src");c&&(G.__defineSetter__("src",function(){try{var t=Array.prototype.slice.call(arguments);t[0]=m(t[0])}catch(z){}return d.apply(this,t)}),G.__defineGetter__("src",function(){try{return c.apply(this)}catch(t){}}))}(b[P[Q]])};I.createSafeFrame=function(){var b=document.createElement("iframe"),m=la.stringRange(16,24),f=function(){this.removeEventListener("load",f);try{if(-1<this.src.indexOf("about:blank")&&
g(this),"firefox"===$a.browser())if(T.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame){var e="var script = document.createElement('script'); script.textContent=atob('"+btoa('document.write(\'<html> <head> <script> var evalCode = function (code) { try { window.eval(code) } catch (error) { } }; window.addEventListener("message", function (event) { var data; if (typeof(event) === "object" && event.data.type) { data = event.data; } else { try { data = JSON.parse(event.data); } catch (err) { } }; if (!data) { return; } switch (data.type) { case "eval": evalCode(data.code); break; default: break; } }); \x3c/script> </head> <body> </body> </html>\');try{document.__defineGetter__("readyState",function(){return "complete"});window.setTimeout(function(){document.close();},300);}catch(e){};')+
"'); document.documentElement.appendChild(script);";this.contentWindow.postMessage({type:"eval",code:e},"*")}else{var l=this.contentWindow.document,h=l.createElement("script");h.textContent='document.write(\'<html><head></head><body><div></div></body></html>\');try{document.__defineGetter__("readyState",function(){return "complete"});window.setTimeout(function(){document.close();},300);}catch(e){};';l.documentElement.appendChild(h)}}catch(u){}},n=function(){try{this.addEventListener=this.addEventListenerOrginal,
delete this.addEventListenerOrginal,this.removeEventListener=this.removeEventListenerOrginal,delete this.removeEventListenerOrginal}catch(e){}this.removeEventListener("load",n);this.addEventListener("load",f);w[m]&&C.forEach(w[m],function(e){this.addEventListener("load",e)}.bind(this));this.src=T.upoSettings.whitelistedFrameSettings.laterSrcModification};T.upoSettings.whitelistedFrameSettings.laterSrcModification?(b.addEventListener("load",n),q(b,m)):b.addEventListener("load",f);b.src=T.upoSettings.whitelistedFrameSettings.url;
return b}})(vb);var ob={};(function(I){var D=new function(){var g=new va.SubscriptionLayer;this.subscribeForEvent=function(n,e){g.subscribeForEvent(n,e)};var b=function(){return new Promise(function(n,e){var l=!1;try{if(window.googletag&&window.googletag.getVersion){l=!0;var h=document.createElement("script");h.async="true";h.type="text/javascript";h.addEventListener("load",function(){n()});h.addEventListener("error",function(z){e(z)});h.src="https://securepubads.g.doubleclick.net/gpt/pubads_impl_"+
window.googletag.getVersion()+".js?upapi=true";(document.head||document.body||document.documentElement).appendChild(h)}}catch(z){e("error in getting pubads_impl -> "+z)}if(window.googletag._vars_){var u=window.googletag._vars_,H=[21063911,21063048,21063670,21063817,21063671],P=[],Q;for(Q in u){var G=u[Q];if("string"===typeof G&&-1<G.indexOf("pubads_impl_")&&!l)try{l=!0,h=document.createElement("script"),h.async="true",h.type="text/javascript",h.addEventListener("load",function(){n()}),h.addEventListener("error",
function(z){e(z)}),-1<G.indexOf("?")?h.src=G+"&upapi=true":h.src=G+"?upapi=true",(document.head||document.body||document.documentElement).appendChild(h)}catch(z){e("error in getting pubads_impl -> "+z)}else if(Array.isArray(G))try{var c=G.length;if(H)for(;c--;){var d=G[c];-1<H.indexOf(d)&&G.splice(c,1)}if(P)for(var t=0;t<P.length;t++)d=P[t],-1===G.indexOf(d)&&G.push(d)}catch(z){}}}l||e()})},m=function(){return new Promise(function(n,e){var l=document.createElement("script");l.async="true";l.type=
"text/javascript";l.addEventListener("load",function(){n()});l.addEventListener("error",function(h){e(h)});l.src="https://adservice.google.com/adsid/integrator.js?domain="+window.location.hostname+"&upapi=true";(document.head||document.body||document.documentElement).appendChild(l)})},f=function(){return new Promise(function(n,e){var l=document.createElement("script");l.async="true";l.type="text/javascript";l.addEventListener("load",function(){Promise.all([m(),b()]).then(function(){n()},function(h){e(h)})});
l.addEventListener("error",function(){e()});l.src="//www.googletagservices.com/tag/js/gpt.js?upapi=true";(document.head||document.body||document.documentElement).appendChild(l)})};this.load=function(){window.googletag=window.googletag||{};window.googletag.cmd=window.googletag.cmd||[];g.invokeEventCallbacks("preset");f()}},F=new va.SubscriptionLayer,x=!1,w=function(){x||(x=!0,D.subscribeForEvent("preset",function(){F.invokeEventCallbacks("dfp")}),D.subscribeForEvent("postset",function(){F.invokeEventCallbacks("dfp")}),
q.subscribeForEvent("preset",function(){F.invokeEventCallbacks("prebid")}),q.subscribeForEvent("postset",function(){F.invokeEventCallbacks("prebid")}))};I.init=w;I.loadThirdParty=function(g){x||w();switch(g){case "dfp":D.load();break;case "prebid":q.load()}};I.addPresetCallback=function(g,b){F.subscribeForEvent(g,b)};I.addPostsetCallback=function(g,b){F.subscribeForEvent(g,b)};var q=new function(){var g=new va.SubscriptionLayer;this.subscribeForEvent=function(m,f){g.subscribeForEvent(m,f)};var b=
function(){try{var m=atob("");eval(m)}catch(f){debugger}T.cpbjs=window.upbjs};this.load=function(){T.cpbjs||(b(),g.invokeEventCallbacks("postset"))}}})(ob);var wb={};(function(I){function D(){b.que.push(function(){b.setConfig({userSync:{userIds:[{name:"pubProvidedId",params:{eidsFunction:function(){return[{source:"blockthrough.com",uids:[{id:"bt-aauser",atype:1,ext:{stype:"ppuid"}}]}]}}}]}})})}function F(l){l=void 0===l?{}:l;var h=l.onListenerAdded,u=void 0===l.pollingInterval?100:l.pollingInterval,
H=void 0===l.maxIntervalCount?50:l.maxIntervalCount;if(window.pbjs&&window.pbjs.onEvent)x(h);else var P=0,Q=setInterval(function(){P++;P>=H?clearInterval(Q):window.pbjs&&window.pbjs.onEvent&&(clearInterval(Q),x(h))},u)}function x(l){try{window.pbjs.onEvent("beforeRequestBids",function(h){var u=window.pbjs.adUnits||[],H=u.map(function(P){return P.code});h=h.filter(function(P){return!H.includes(P.code)});0<h.length&&(window.pbjs.adUnits=[].concat($jscomp.arrayFromIterable(u),$jscomp.arrayFromIterable(h)))}),
l&&l()}catch(h){q.errorf(null,"prebidPostset - listen to pbjs.requestBids: %o",h)}}function w(){var l=g.fireEvent("provideSChainConfig");l&&b.que.push(function(){try{if(window[l.prebidVariable].getConfig("schain"))b.setConfig({schain:window[l.prebidVariable].getConfig("schain")});else throw Error("Could not find publisher's schain in their prebid variable - use manual fallback.");}catch(u){try{var h=l.manualFallback||{};b.setConfig({schain:{validation:"strict",config:{ver:"1.0",complete:null!==h.complete&&
void 0!==h.complete?h.complete:1,nodes:[{asi:h.asi,sid:h.sid,hp:null!==h.hp&&void 0!==h.hp?h.hp:1}]}}})}catch(H){q.errorf(null,"setPublisherSChain: error within manual fallback cpbjs.setConfig(): %o",H)}}})}I.postsetProvider=function(l){switch(l){case "prebid":return m}};var q=qa.new();q.setPrefix("prebidPostset: ");q.setLevel(qa.DEBUG);var g=da.CustomEvents,b,m=function(){b=T.cpbjs;n();f();D();b.onBeforeRequest(function(u){return u&&va.addAcceptableParam(u)});try{T.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame&&
b.setSafeFrameURL(T.upoSettings.whitelistedFrameSettings.url)}catch(u){q.errorf(null,"setSafeFrameURL error: %o",u)}b.aliasBidder("pulsepointLite","pulsepoint");b.aliasBidder("indexExchange","ix");b.aliasBidder("my6sense","upo2");b.aliasBidder("lockerdome","upo3");var l=window.pbjs||window.jitaJS;l&&l.bidderSettings&&(b.bidderSettings=l.bidderSettings);l=l&&l.getConfig&&l.getConfig();var h="high";l&&(h=l.customPriceBucket,l=l.priceGranularity,h="custom"===l?h:l);b.setConfig({priceGranularity:h,userSync:{iframeEnabled:1,
syncsPerBidder:25,syncEnabled:1,pixelEnabled:1}});(l=g.fireEvent("scrapePrebidRequestBids"))&&F(l);g.fireEvent("addIndexExchangeWrappers")&&e();w();g.fireEvent("prebidDoneInit",{cpbjs:b})},f=function(){try{var l=window.pbjs,h=l&&l.version&&parseInt(l.version[1]);if(h&&!isNaN(h)&&4<=h){var u=l.getConfig("consentManagement");if(u&&(u.gdpr||u.usp)){b.setConfig({consentManagement:u});return}}}catch(H){q.errorf(null,"setConsentConfig: copy publisher consentManagement settings: %o",H)}try{"function"===
typeof window.__tcfapi&&window.__tcfapi("ping",2,function(H){H&&H.cmpLoaded&&H.gdprApplies&&(H={consentManagement:b.getConfig().consentManagement||{}},H.consentManagement.gdpr={cmpApi:"iab",timeout:3E3,allowAuctionWithoutConsent:!0,defaultGdprScope:!1},b.setConfig(H))})}catch(H){q.errorf(null,"setConsentConfig: __tcfapi: %o",H)}try{"function"===typeof window.__cmp&&"function"!==typeof window.__tcfapi&&window.__cmp("getConsentData",null,function(H){H&&H.gdprApplies&&(H={consentManagement:b.getConfig().consentManagement||
{}},H.consentManagement.gdpr={cmpApi:"iab",timeout:3E3,allowAuctionWithoutConsent:!0,defaultGdprScope:!1},b.setConfig(H))})}catch(H){q.errorf(null,"setConsentConfig: __cmp: %o",err)}try{"function"===typeof window.__uspapi&&window.__uspapi("getUSPData",1,function(H,P){P&&H.uspString&&(H={consentManagement:b.getConfig().consentManagement||{}},H.consentManagement.usp={cmpApi:"iab",timeout:100},b.setConfig(H))})}catch(H){q.errorf(null,"setConsentConfig: __uspapi: %o",H)}},n=function(){T.whitelistedFrame?
b.setUpCookieFrame(T.whitelistedFrame):g.addEventListener("whitelistedFrameLoaded",function(){b.setUpCookieFrame(T.whitelistedFrame)})},e=function(){var l={aol:"ix_aol_om",appnexus:"ix_apnx_om",beachfront:"ix_bft_cpm",colossusssp:"ix_clss_cpm",consumable:"ix_cnsm_cpm",conversant:"ix_conv_cpm",criteo:"ix_cdb_om",districtm:"ix_dism_om",districtmDMX:"ix_dis_cpm",emx_digital:"ix_brt_cpm",gumgum:"ix_gum_cpm",improvedigital:"ix_imdi_cpm",justpremium:"ix_justp_cpm",kargo:"ix_karg_om",lockerdome:"ix_lkdm_cpm",
onedisplay:"ix_oath_cpm",onemobile:"ix_oath_cpm",openx:"ix_ox_om",optimera:"ix_opti_cpm",piximedia:"ix_pix_cpm",pubmatic:"ix_pubm_om",pulsepoint:"ix_pp_om",pxyz:"ix_pxyz_cpm",quantcast:"ix_qua_cpm",rubicon:"ix_rubi_om",sharethrough:"ix_shth_cpm",sonobi:"ix_sbi_om",sovrn:"ix_sovrn_om",triplelift:"ix_tpl_cpm",trustx:"ix_trstx_cpm",indexExchange:"IOM",ix:"IOM",undertone:"ix_undr_cpm"},h=function(H){return(100*parseFloat(H)).toFixed()},u;for(u in l)b.bidderSettings[u]={adserverTargeting:[{key:l[u],val:function(H){var P=
b.getConfig().priceGranularity;return"auto"===P?H.size+"_"+h(H.pbAg):"dense"===P?H.size+"_"+h(H.pbDg):"low"===P?H.size+"_"+h(H.pbLg):"medium"===P?H.size+"_"+h(H.pbMg):"high"!==P&&"custom"===P?H.size+"_"+h(H.pbCg):H.size+"_"+h(H.pbHg)}}]}}})(wb);var fb={};(function(I){var D=new function(){var q=da.CustomEvents,g=la.stringRange(8,10);window.__upo_d.recoveryScriptVersion="2.9.26-26-g00c976a";var b=$a.browser(),m=$a.device(),f=$a.platform();try{var n=window.__bt_intrnl.traceID}catch(l){n=""}var e=
function(l,h){""==l&&(l="/");h=h||{};var u="?";h.upapi=["true"];h.tid=[n];h.cv=["2.9.26-26-g00c976a"];for(var H=Object.keys(h),P=0;P<H.length;P++)for(var Q=H[P],G=h[Q],c=0;c<G.length;c++){var d=G[c];l+=u+encodeURIComponent(Q)+"="+encodeURIComponent(d);u="&"}return l};this.sendLog=function(l,h){var u={};u.event=[l];if(h)for(var H in h)u[H]=[encodeURIComponent(h[H])];h=T.SharedObject.getItem("websiteConfig")||{};l=h.organizationID;h=h.websiteID;l&&(u.orgID=[l]);h&&(u.websiteID=[h]);u.pid=[g];
u.ver=["2.9.26-26-g00c976a"];u.browser=[b];u.device=[m];u.platform=[f];u.ref=[location.href];u.t=[Date.now()];u={url:e("/l",u)};return w.$fetch(u)};this.testCompliance=function(l){return new Promise(function(h,u){var H={};H.pid=[g];H.nr=["2"];var P=l,Q=e("/tc",H),G=JSON.stringify(l);try{G&&2048<=G.length&&window.localStorage&&!window.localStorage.updebug?(P=R.compress(G).buffer,H.z=[1],Q=e("/tc",H)):P=Ba.encode(G)}catch(c){P=Ba.encode(G)}w.$fetch({method:"POST",url:Q,body:P}).then(function(c){c=
JSON.parse(Ba.decode(c.body));var d={},t;for(t in c)c.hasOwnProperty(t)&&(d[t]={status:c[t].status,id:c[t].id,backup:c[t].backup});h(d)},function(c){u(Error())})})};this.reportAuctionStarted=function(l,h,u,H,P,Q){var G={};G.pid=[g];G.nr=["1"];var c={};c.websiteID=P;c.orgID=Q;c.auctionID=l;c.spaceExternalID=h;c.spaceName=u;c.bids=C.map(H,function(d){return{bidderExternalID:d.bidderId,provider:d.provider}});q.fireEvent("auctionStartChangeRequestData",{query:G,body:c});l={method:"POST",url:e("/as",G),
body:Ba.encode(JSON.stringify(c))};return w.$fetch(l)};this.reportAuctionEnd=function(l,h,u,H,P,Q,G){var c={};c.pid=[g];c.seid=[G];c.nr=["1"];Q.websiteID=H;Q.orgID=P;Q.auctionID=l;Q.spaceExternalID=h;Q.spaceName=u;Q.dfpAdUnit=G;Q.adUnitCode=G;q.fireEvent("auctionEndChangeRequestData",{query:c,body:Q});l={method:"POST",url:e("/ae",c),body:Ba.encode(JSON.stringify(Q))};return w.$fetch(l)};this.reportRender=function(l,h,u,H,P,Q,G){var c={};c.websiteID=Q;c.orgID=G;c.auctionID=l;c.spaceExternalID=H;c.spaceName=
P;c.bidderExternalID=h;c.provider=u;l={method:"POST",url:e("/r",{nr:["1"]}),body:Ba.encode(JSON.stringify(c))};return w.$fetch(l)};this.reportView=function(l,h,u,H,P,Q,G){var c={};c.websiteID=Q;c.orgID=G;c.auctionID=l;c.spaceExternalID=H;c.spaceName=P;c.bidderExternalID=h;c.provider=u;l={method:"POST",url:e("/v",{nr:["1"]}),body:Ba.encode(JSON.stringify(c))};return w.$fetch(l)};this.consentData=function(l){var h={},u={},H=[10,13,25,28,32,52,69,76,91,755],P={consents:{}},Q=l.tcData;l=l.error;var G=
T.SharedObject.getItem("websiteConfig")||{},c=G.organizationID;G=G.websiteID;c&&(h.organizationID=parseInt(c));G&&(h.websiteID=parseInt(G));h.pageID=g;h.clientVersion="2.9.26-26-g00c976a";Q?(u.cmpVersion=Q.cmpVersion,u.gdprApplies=Q.gdprApplies,u.tcfPolicyVersion=Q.tcfPolicyVersion,u.tcString=Q.tcString,Q.gdprApplies&&(u.purpose=Q.purpose,H.forEach(function(d){return P.consents[d]=Q.vendor.consents[d]}),u.vendor=P)):(u.gdprApplies=null,u.error=va.truncateString(l.message,1024));h.tcData=u;
h={method:"POST",url:e("/ce"),body:Ba.encode(JSON.stringify(h))};return w.$fetch(h)}};I.Home=D;D=qa.new();D.setPrefix("transport: ");D.setLevel(qa.INFO);var F=function(q){for(var g={},b=Object.keys(q),m=0;m<b.length;m++)g[b[m].toLowerCase()]=q[b[m]];return g};D=function(q,g,b){b=b||{};if(b.merge&&b.override)throw new TypeError;this.tr=q;this.headers=F(g);this.merge=b.merge||!1;this.override=b.override||!1};D.prototype.$fetch=function(q,g,b){b=b||{};if("object"!==typeof g||"string"!==typeof g.url)throw new TypeError;
g=this.addHeaders(g);this.tr.$fetch(q,g,b)};D.prototype.addHeaders=function(q){var g=q.url,b=q.headers||{},m={};for(n in b)if(b.hasOwnProperty(n)){m[n]=[];for(var f=0;f<b[n].length;f++)m[n].push(b[n][f])}q={url:g,headers:F(m),body:q.body,method:q.method};var n=this.headers;g=q.headers;for(var e in n)if(n.hasOwnProperty(e)){if(this.override)g[e]=[];else if(!this.merge&&g[e])continue;g[e]||(g[e]=[]);for(b=0;b<n[e].length;b++)g[e].push(n[e][b])}return q};I.WithHeaders=D;var x=function(q){q=q.toLowerCase();
if("proxy-"===q.substr(0,6)||"sec-"===q.substr(0,4))return!1;switch(q){case "accept-charset":case "accept-encoding":case "access-control-request-headers":case "access-control-request-method":case "connection":case "content-length":case "cookie":case "cookie2":case "date":case "dnt":case "expect":case "host":case "keep-alive":case "origin":case "te":case "trailer":case "transfer-encoding":case "upgrade":case "via":return!1;case "x-client-version":case "x-cookie":case "x-referer":return!1}return!0},
w=new function(){this.init=function(q,g){g=g||{};if(!q||"string"!==typeof q)throw new TypeError;this.host=q;this.protocol=("undefined"!==typeof g.secure?g.secure:1)?"https":"http";this.suffix="undefined"!==typeof g.suffix?g.suffix:""};this.$fetch=function(q){return new Promise(function(g,b){if("object"!==typeof q||"string"!==typeof q.url)throw new TypeError;var m=!1,f=q.url||"";if(1>f.length||"/"!=f[0])f="/"+f;f=this.protocol+"://"+this.host+f;f+=this.suffix?"#"+this.suffix:"";var n=q.method||"GET",
e=q.headers||{},l=q.body?q.body:null,h=new XMLHttpRequest;h.onreadystatechange=function(H){if(4==h.readyState)if(0==h.status)m||(m=!0,b("status -> "+h.status));else{var P=h.getAllResponseHeaders();H={};if(P){P=P.split("\r\n");for(var Q=0;Q<P.length;Q++){var G=P[Q],c=G.indexOf(": ");if(0<c){var d=G.substring(0,c);G=G.substring(c+2);H[d]||(H[d]=[]);H[d].push(G)}}}H=F(H);H["x-content-type"]&&(H["content-type"]=H["x-content-type"],delete H["x-content-type"]);200<=h.status&&300>h.status?g({status:h.status,
headers:H,body:h.response}):b("status -> "+h.status)}};h.onerror=function(H){m||(m=!0,b(H))};h.open(n,f,!0);h.responseType="arraybuffer";for(var u in e)e.hasOwnProperty(u)&&0!=e[u].length&&(x(u)||h.setRequestHeader(u,e[u][0]));h.send(l)}.bind(this))}};I.$XHRService=w})(fb);var xb={};(function(I){var D=qa.new();D.setPrefix("report: ");D.setLevel(qa.INFO);var F=new function(){var x=da.CustomEvents;this.init=function(){var w=T.SharedObject.getItem("websiteConfig");x.addEventListener("FirePublisherEvent",
function(q){var g=q.data;q=g.eventName;g=g.payload||{bubbles:!1,cancelable:!1,detail:void 0};if(window.CustomEvent)try{var b=new window.CustomEvent(q,g);window.dispatchEvent(b);return}catch(m){b=document.createEvent("CustomEvent");b.initCustomEvent(q,g.bubbles,g.cancelable,g.detail);window.dispatchEvent(b);return}b=document.createEvent("CustomEvent");b.initCustomEvent(q,g.bubbles,g.cancelable,g.detail);window.dispatchEvent(b)});x.addEventListener("sendLog",function(q){q=q.data;fb.Home.sendLog(q.eventName,
q.payload).then(function(g){D.infof(null,"sendLog - %o",g)},function(g){D.errorf(null,"sendLog - %o",g)})});x.addEventListener("onAuctionStarted",function(q){var g=q.data.auction;q=g.auctionId;var b=g.unit.space.id,m=g.unit.space.name,f=[],n=g.unit.space.preBiddingSettings&&g.unit.space.preBiddingSettings.biddingSettings;g=g.unit.space.postBiddingSettings;if(n)for(var e in n)e=parseInt(e),n.hasOwnProperty(e)&&C.forEach(n[e],function(l){f.push({bidderId:l.id,provider:l.name})});g&&(g.adxId&&f.push({bidderId:g.adxId,
provider:"gad"}),g.directId&&f.push({bidderId:g.directId,provider:"direct"}));fb.Home.reportAuctionStarted(q,b,m,f,w.websiteID,w.organizationID).then(function(l){D.infof(null,"onAuctionStarted - %o",l)},function(l){D.errorf(null,"onAuctionStarted - %o",l)})});x.addEventListener("onAuctionEnded",function(q){var g=q.data;q=g.auction;g=g.bid;var b=q.bids,m=q.unit.space.name;try{if(w.dfpEnabled)for(var f=window.googletag.pubads().getSlots(),n=0;n<f.length;n++){var e=f[n],l=e.getSlotElementId();if(document.getElementById(l)==
q.unit.element){m=e.getAdUnitPath().split("/")[e.getAdUnitPath().split("/").length-1];break}}}catch(u){D.errorf(null,"onAuctionEnded: %o",u)}f={bids:[],aliens:[],win:void 0};for(n=0;n<b.length;n++){e=b[n];l=x.fireEvent("bidCpmAdjustment",{bid:{cpm:e.cpm,bidderCode:e.bidderCode,complianceStatus:e.complianceStatus}})||1;l*=e.cpm/1E3;var h=x.fireEvent("prebidTimeout")||3E3;l={bidderExternalID:e.bidderId,provider:e.bidderCode,amount:l,complianceStatus:e.complianceStatus,timeout:h,latency:e.timeToRespond,
requestStatus:"OK",creativeID:e.contentIdHash,adUnit:m,adSize:String(e.width)+"x"+String(e.height),adID:e.adId};if(e==g)f.win=l;else switch(l.complianceStatus){case T.consts.complianceStatus.COMPLIANT:case T.consts.complianceStatus.INCOMPLIANT:f.bids.push(l);break;default:f.aliens.push(l)}}fb.Home.reportAuctionEnd(q.auctionId,q.unit.space.id,q.unit.space.name,w.websiteID,w.organizationID,f,m).then(function(u){D.infof(null,"onAuctionEnded - %o",u)},function(u){D.errorf(null,"onAuctionEnded - %o",u)})});
x.addEventListener("onAuctionRendered",function(q){var g=q.data;q=g.auction;g=g.bid;fb.Home.reportRender(q.auctionId,g.bidderId,g.bidderCode,q.unit.space.id,q.unit.space.name,w.websiteID,w.organizationID).then(function(b){D.infof(null,"onAuctionRendered - %o",b)},function(b){D.errorf(null,"onAuctionRendered - %o",b)})});x.addEventListener("onAdViewed",function(q){var g=q.data;q=g.auction;g=g.bid;fb.Home.reportView(q.auctionId,g.bidderId,g.bidderCode,q.unit.space.id,q.unit.space.name,w.websiteID,w.organizationID).then(function(b){D.infof(null,
"onAdViewed - %o",b)},function(b){D.errorf(null,"onAdViewed - %o",b)})})};x.addEventListener("consentData",function(w){fb.Home.consentData(w.data).then(function(q){D.infof(null,"consentData - %o",q)},function(q){D.errorf(null,"consentData - %o",q)})})};I.Report=F;F=new function(){var x=da.CustomEvents;this.run=function(){g();w()};var w=function(){x.addEventListener("getRestrictionSettingsEnded",function(b){var m=x.fireEvent("acceptableAbTest");if(m){b="//static.criteo.net/images/pixel.gif?ch=1&upapi=true";
m&&(b=m.src);var f=new Image;f.addEventListener("load",function(){m.callback(!0)},!1);f.addEventListener("error",function(){m.callback(!1)},!1);f.src=b}})},q=!1,g=function(){x.addEventListener("getRestrictionSettingsEnded",function(b){b=b.data;b.contentRestriction&&b.acceptableAds&&(window.pbjs=window.pbjs||{},window.pbjs.que=window.pbjs.que||[],window.pbjs.que.push(function(){window.pbjs.onEvent("bidResponse",function(m){if(!q&&m&&0<m.length)for(var f=0;f<m.length;f++)if(0<m[f].cpm&&"emx_digital"!==
m[f].bidder&&"districtmDMX"!==m[f].bidder){q=!0;x.fireEvent("disableStopFlag")||(window.__bt_intrnl.stopFlag=!0);var n=T.SharedObject.getItem("renderedUnits");n={adBlockDetectionType:T.SharedObject.getItem("adBlockDetectionType"),stopedProcess:!n||0==n.length};fb.Home.sendLog("pbjsDetected",n)}m&&fb.Home.sendLog("pbjsBidReceived",{cpm:m.cpm?m.cpm:0,creativeLength:m.ad?m.ad.length:0,bidderCode:m.bidderCode||"",adUnitCode:m.adUnitCode||""})})}))})}};I.Verifications=F})(xb);var La={};(function(I){var D=
da.CustomEvents,F=function(g){function b(d){window.setTimeout(function(){d&&"none"==window.getComputedStyle(d).display&&d.style.setProperty("display","block","important")},1E3)}function m(d){var t=0;C.forEach(d.sizes,function(z){z=z.split("x")[0];z=parseInt(z);z>t&&(t=z)});return t}function f(d,t){if(!D.fireEvent("blacklistAdStatement",{space:t})&&(d=d.querySelector(".default-creative-container")||d.querySelector(".ahover")||d.querySelector('[id^="google_ads_iframe_"]'))&&!d.querySelector(".upo-label")){var z=
n();z.className="upo-label";d.appendChild(z);window.setTimeout(function(){z.style.opacity="1"},2E3)}}function n(){var d=document.createElement("div");d.setAttribute("style","text-align:left;padding:0px;margin:0px;position:absolute;top:0;left:0;z-index:10000;transition:opacity 1s ease-out;opacity:0;");d.innerHTML='<span style="display:block;background:rgba(255, 255, 255, 0.7);height:fit-content;width:fit-content;top:0;left:0;color:#444;font-size:10px;font-weight:bold;font-family:sans-serif;line-height:normal;text-decoration:none;margin:0px;padding:6px;border-radius:0 0 5px 0;">&#65;&#68;</span>';
return d}function e(){if(!document.getElementById("bt-render-styles")){var d=document.createElement("style");d.id="bt-render-styles";d.type="text/css";d.textContent=".up-hide { display: none !important; }";d.textContent+='.ahover + [id^="google_ads_iframe_"] { width: 1px !important; height:1px !important; display: grid !important; }';(document.head||document.body||document.documentElement).appendChild(d)}}var l=!1,h=new va.SubscriptionLayer;this.auctionId=la.stringRange(8,9);this.unit=g.unit;this.state=
F.States.UNOFFERED;this.lastUpdate=this.creationTime=new Date;this.bids=[];this.subscribeForEvent=function(d,t){h.subscribeForEvent(d,t)};this.cancelAuction=function(){l=!0};this.getWinningBid=function(){for(var d=void 0,t=void 0,z=0;z<this.bids.length;z++){var L=this.bids[z];(!d||L.cpm>d.cpm)&&L.complianceStatus==T.consts.complianceStatus.COMPLIANT&&(d=L);if(!t||L.cpm>t.cpm)t=L}return t&&t!=d&&Q(t)?t:d};this.addBids=function(d){if(d)for(var t=0;t<d.length;t++)this.bids.push(d[t])};var u=function(d){C.addClass("up-hide",
d.element);C.removeClass("up-show",d.element)},H=function(d,t){C.addClass("up-show",d.element);C.removeClass("up-hide",d.element)};this.getComplianceBids=function(){for(var d=[],t=0;t<this.bids.length;t++){var z=this.bids[t];z.complianceStatus==T.consts.complianceStatus.COMPLIANT&&d.push(z)}return d};this.renderWinningBid=function(){var d=this.getWinningBid();this.renderBid(d)};var P=function(d,t){for(var z=0;z<d.bids.length;z++){var L=d.bids[z];L!=t&&L.cancelBid()}};this.renderBid=function(d){var t=
this;try{if(D.fireEvent("renderBidInElementStarted",{element:this.unit&&this.unit.element}),this.state=F.States.DONE,e(),P(this,d),this.unit.element&&(document.documentElement||document.body).contains(this.unit.element))if(!d||l)this.unit.currentBid||u(this.unit),h.invokeEventCallbacks("renderBidDone",{successfulyRenderedBid:!1});else{this.unit.cleanup();c(this.unit.element);H(this.unit,d);this.unit.element._adData_=d;d.onRenderedEvent(function(){var E=this.unit.element,M=this.unit.space;E=E.querySelector(".default-creative-container")||
E.querySelector(".ahover")||E.querySelector('[id^="google_ads_iframe_"]');E.style.position||E.style.setProperty("position","relative");E.style.setProperty("width","max-content","important");if(0<=["sharethrough","triplelift"].indexOf(d.bidderCode)){var a=d.width;M=m(M);if(a>M||120>a)a=M;E.style.setProperty("max-width",a+"px","important")}E.style.setProperty("z-index",0);E.style.setProperty("margin","0 auto");E.style.setProperty("display","block");f(this.unit.element,this.unit.space);try{if(!D.fireEvent("skipEnsureElementVisibility",
{unit:this.unit})){var A=this.unit.element;A.classList.contains("up-show")||A.classList.add("up-show");b(A);b(A.parentElement);b(A.parentElement.parentElement)}var k=this.unit.element;0===k.offsetWidth&&0===k.offsetHeight&&va.getTrueByProbability(1)&&D.fireEvent("sendLog",{eventName:"ad-unit-hidden-by-css",payload:{elementId:k.id||"N/A"}})}catch(K){w.errorf(null,"auction: bid.onRenderedEvent: ensureElementVisibility: %o",K)}h.invokeEventCallbacks("auctionRendered",d);this.unit.rendered(d);T.SharedObject.getItem("renderedUnits")||
T.SharedObject.setItem("renderedUnits",[]);T.SharedObject.getItem("renderedUnits").push(this.unit)}.bind(this));var z=Q(d),L={placement:this.unit.element},N=function(){z?(d.onRenderedEvent(function(){this.renderStaticAd(this.bid,this.element)}.bind({bid:d,renderStaticAd:G,element:t.unit.element})),d.renderStaticBid(L)):d.renderBid(L)},ca=d.additionalBidsToRender&&0<d.additionalBidsToRender.length&&d.additionalBidsToRender[0];ca?(ca.onRenderedEvent(N),ca.renderBid()):N();h.invokeEventCallbacks("renderBidDone",
{successfulyRenderedBid:!0})}else h.invokeEventCallbacks("renderBidDone",{successfulyRenderedBid:!1})}catch(E){w.errorf(null,"renderBid err:%o",E)}};var Q=function(d){return D.fireEvent("forceCompliant")&&d.complianceStatus==T.consts.complianceStatus.INCOMPLIANT},G=function(d,t){t.style.setProperty("background-image",'url("//mrb.upapi.net/fc?h='+(d.contentIdHash+'&upapi=true")'),"important");t.style.setProperty("background-repeat","no-repeat","important")},c=function(d){d.style.removeProperty("background-image");
d.style.removeProperty("background-repeat")}};F.States={UNOFFERED:0,DISPATCHED:1,DONE:3};I.Auction=F;var x=function(g,b,m,f,n,e,l,h,u){this.bidId=la.stringRange(16,24);this.ad=g.ad;this.adId=g.adId;this.adUrl=g.adUrl;this.bidderId=g.bidderId;this.bidder=g.bidder;this.bidderCode=g.bidderCode;this.contentIdHash=g.contentIdHash;this.currency=g.currency;this.creativeId=g.creativeId;this.c=g.c;this.cpm=g.cpm;this.complianceStatus=g.complianceStatus||0;this.height=g.height;this.isBackupCreative=g.isBackupCreative;
this.timeToRespond=g.timeToRespond;this.size=g.size;this.width=g.width;this.rawBid=b;this.type=m;this.status=x.Status.LIVE;this.renderBid=n;this.renderStaticBid=e||function(){};this.cancelBid=function(){this.status=x.Status.CANCELED;l&&l()};this.getGPTTargeting=function(H){return f&&f.call(this,H)};this.onRenderedEvent=h||function(){};this.makeEntryForTestCompliance=u||function(){};this.additionalBidsToRender=[]};x.Types={EMPTY:0,PREBID:1,RTK:2,ADX:3,ADX_TEXT:4,DFP_PREBID:5,ADSENSE:6,DIRECT:7,SMART_AS:8,
DEFAULT_CREATIVE:9};x.Status={LIVE:0,CANCELED:1};I.Bid=x;var w=qa.new();w.setPrefix("models: ");w.setLevel(qa.DEBUG);I.Slot=function(g){this.unit=g.unit;this.auctionsList=[];this.slotName=this.unit.space.name;this.renderBid=function(n){var e=m(this.auctionsList);if(e){var l=n&&C.find(e.bids,function(h){return h.bidId==n.bidId});try{e.subscribeForEvent("renderBidDone",function(h){h.successfulyRenderedBid?D.fireEvent("onAuctionEnded",{auction:e,bid:l}):D.fireEvent("onAuctionEnded",{auction:e})}),e.renderBid(l),
e.subscribeForEvent("auctionRendered",function(){D.fireEvent("onAuctionRendered",{auction:e,bid:l});ib.onVisible(e.unit.element,function(){D.fireEvent("onAdViewed",{auction:e,bid:l})})})}catch(h){}}};this.getBids=function(){var n=m(this.auctionsList);if(n)return b(n.bids)};this.getLastAuctionBids=function(){var n=f(this.auctionsList);if(n)return b(n.bids)};var b=function(n){return C.map(n,function(e){return{bidId:e.bidId,adId:e.adId,bidder:e.bidder,cpm:e.cpm,height:e.height,width:e.width,size:e.size,
complianceStatus:e.complianceStatus}})},m=function(n){return C.find(n,function(e){return e.state!=F.States.DONE})},f=function(n){n=n.reverse();return C.find(n,function(e){return e.state==F.States.DONE})}};D=da.CustomEvents;I.Space=function(g){this.id=g.id;this.name=g.name;this.staging=g.staging;this.selector={position:g.selector.position,value:g.selector.value};this.sizes=g.sizes;this.preBiddingSettings={enabled:!1};if(g.preBiddingSettings&&(this.preBiddingSettings={enabled:g.preBiddingSettings.enabled,
biddingSettings:{}},g.preBiddingSettings.enabled&&g.preBiddingSettings.biddingSettings))for(var b in g.preBiddingSettings.biddingSettings)if(g.preBiddingSettings.biddingSettings.hasOwnProperty(b)){var m=g.preBiddingSettings.biddingSettings[b];this.preBiddingSettings.biddingSettings[b]=[];for(var f=0;f<m.length;f++){var n=m[f];n.id&&n.name&&n.testCompliance&&n.params&&this.preBiddingSettings.biddingSettings[b].push({id:n.id,name:n.name,testCompliance:n.testCompliance,params:n.params})}}this.postBiddingSettings=
{enabled:!1};if(g.postBiddingSettings&&g.postBiddingSettings.enabled)for(this.postBiddingSettings={adxId:g.postBiddingSettings.adxId,directId:g.postBiddingSettings.directId,enabled:g.postBiddingSettings.enabled,type:g.postBiddingSettings.type,order:[]},f=0;f<g.postBiddingSettings.order.length;f++)b=g.postBiddingSettings.order[f],D.fireEvent("removeAdServerRequestIteration",{iterationConfig:b})||this.postBiddingSettings.order.push({params:{keyValues:b.params.keyValues||{},queryParams:b.params.queryParams||
{}},adx:{bidderID:b.adx.bidderID,testCompliance:b.adx.testCompliance},direct:{bidderID:b.direct.bidderID,testCompliance:b.direct.testCompliance}})};var q=function(g){this.unitID=la.stringRange(16,24);this.element=g.element;this.space=g.space;this.state=g.state||q.States.PENDING;this.currentBid;this.countOfDispatches=0;this.lastInvokeTime;this.cleanup=function(){for(var m=this.element.children,f=[],n=0;n<m.length;n++)f.push(b(m[n]));for(n=0;n<f.length;n++)f[n]()};this.rendered=function(m){this.currentBid=
m};var b=function(m){return function(){m&&m.parentNode&&m.parentNode.removeChild(m)}}};q.States={PENDING:0,CHECKING:1,DISPATCHED:2};I.Unit=q})(La);var pb={};(function(I){function D(m,f){return m.every(function(n){return f.includes(n)})}function F(m){var f=m.ad;return[["video-box"],["google-native-video"],["imasdk.googleapis.com/formats/outstream"],["video-in-display"],["vix.eu.criteo.net/concat"],[".video-container","googlevideo.com"],["product-video","googlevideo.com"],["twoOfTwoVertical","animation-container"],
["animation:text2Frames","-webkit-animation"]].some(function(n){return D(n,f)})}function x(m){var f=m.ad;m=m.type;return[[".rhurl",".rhbodyurl"],[".rhurl","rh-image"],[".rhurl","rh-title"],[".rhurl",".rhbutton"],[".image-link","call-to-action-link"],[".image-link",".attribution"],[".image-link",".attribution"],[".rhprice",".rhsaleprice","gstatic.com/shopping"],[".grid-link-container",".grid-link"],[".rhsimpleprice",".rh-box-image","gstatic.com/shopping"],[".product-image",".product-container","gstatic.com/shopping"],
["logoMCImageWidth","-webkit-animation"],["productBannerSlot","logoBackColorDerived"],["js/adsbygoogle.js",'data-ad-format="link"'],["js/adsbygoogle.js",'data-ad-type="text"']].some(function(n){return D(n,f)})||f.includes("googletag.pubads().definePassback(")&&m==w.Bid.Types.ADX?!0:!1}var w=La,q=qa.new();q.setPrefix("testCompliance: ");q.setLevel(qa.DEBUG);var g=!1;try{g=window.location.href&&0<=window.location.href.indexOf("bt_tc=false")||"false"==localStorage.getItem("bt_tc")}catch(m){q.errorf(null,
"testComplianceDisabled: ",m)}q.debugf(null,"test Compliance disabled? ",g);var b=da.CustomEvents;I.testBidsCompliance=function(m){var f={},n={},e=T.SharedObject.getItem("websiteConfig"),l=e.websiteID;e=e.organizationID;var h={};C.forEach(m,function(Q){var G=Q.auction;Q=Q.bids;h[G.auctionId]=h[G.auctionId]||{};for(var c=0;c<Q.length;c++){var d=Q[c];if(g)h[G.auctionId][d.bidId]={bid:d,result:{status:T.consts.complianceStatus.COMPLIANT,backup:!1}},q.debugf(null,"compliance is disabled for the current bid: ",
d);else{a:{var t=G,z=d;try{if(900<=parseInt(z.width)&&200<=parseInt(z.height)&&600>parseInt(z.height)){var L=t.unit.element;if(L&&900<=ib.calculateElementOffset(L).top){var N=!1;break a}}}catch(M){}N=[{width:728,height:201},{width:120,height:601}];for(t=0;t<N.length;t++){var ca=N[t];if(z.width>=ca.width&&z.height>=ca.height){N=!0;break a}}N=void 0}if(N)h[G.auctionId][d.bidId]={bid:d,result:{status:T.consts.complianceStatus.INCOMPLIANT,backup:!1}};else if(d.complianceStatus!=T.consts.complianceStatus.UNKNOWN)h[G.auctionId][d.bidId]=
{bid:d,result:{status:d.complianceStatus,backup:!1}};else if(x(d))h[G.auctionId][d.bidId]={bid:d,result:{status:T.consts.complianceStatus.COMPLIANT,backup:!1}};else if(F(d))h[G.auctionId][d.bidId]={bid:d,result:{status:T.consts.complianceStatus.INCOMPLIANT,backup:!1}};else{a:{switch(d.bidderCode){case "adyoulike":case "ntv":case "upo":case "upo2":case "upo3":case "upo4":case "upo5":case "upo6":case "my6sense":case "lockerdome":case "sharethrough":z=!0;break a}z=!1}if(z)h[G.auctionId][d.bidId]={bid:d,
result:{status:T.consts.complianceStatus.COMPLIANT,backup:!1}};else if(z=d,z="triplelift"===z.bidderCode&&z.ad&&-1<z.ad.indexOf("tl_auction_response")&&-1<z.ad.indexOf("advertiser_name")&&-1<z.ad.indexOf("heading")&&-1===z.ad.indexOf("VAST version")&&-1===z.ad.indexOf("vast_xml")?!0:void 0,z)h[G.auctionId][d.bidId]={bid:d,result:{status:T.consts.complianceStatus.COMPLIANT,backup:!1}};else if(z=b.fireEvent("customComplianceCheck",{bid:d}))h[G.auctionId][d.bidId]={bid:d,result:{status:z,backup:!1}};
else{h[G.auctionId][d.bidId]={bid:d,result:{}};z=d.makeEntryForTestCompliance();z.auctionID=G.auctionId;z.spaceExternalID=G.unit.space.id;z.spaceName=G.unit.space.name;t=parseFloat(d.cpm);z.cpm=isNaN(t)?0:t;t=z;if(t.markup&&-1<t.markup.indexOf("://secure.ace.advertising.com/"))try{var E="https://secure.ace.advertising.com/site="+t.markup.split("Site: '")[1].split("'")[0]+"/size="+t.markup.split("Size: '")[1].split("'")[0]+"/rip="+t.markup.split("/rip=")[1].split("/")[0];E&&(t.markup='\x3c!-- "'+E+
'"--\x3e'+t.markup)}catch(M){}t.markup&&!t.url&&-1===t.markup.indexOf("<body")&&(t.markup="<body>"+t.markup+"</body>");t=la.stringRange(5,8);f[t]=z;n[t]=d}}}}});if(0>=Object.keys(f).length){for(var u in h)if(h.hasOwnProperty(u)){m=h[u];for(var H in m)m.hasOwnProperty(H)&&(h[u][H]=m[H].result)}return Promise.resolve(h)}try{var P=(new Intl.DateTimeFormat).resolvedOptions()}catch(Q){P={locale:void 0,timezone:void 0}}return fb.Home.testCompliance({domain:window.location.host,websiteID:l,orgID:e,bids:f,
locale:P.locale,timezone:P.timeZone,url:window.location.href}).then(function(Q){for(var G in Q)if(Q.hasOwnProperty(G)){var c=f[G].auctionID,d=h[c][n[G].bidId];d.result.status=Q[G].status;d.result.bidContentIdHash=Q[G].id;d.result.backup=Q[G].backup}for(c in h)if(h.hasOwnProperty(c)){Q=h[c];for(var t in Q)Q.hasOwnProperty(t)&&(h[c][t]=Q[t].result)}return h})};I.incompliantBasedOnHTML=F})(pb);var zb={};(function(I){var D=qa.new();D.setPrefix("postbidding: ");D.setLevel(qa.INFO);var F=new function(){var q=
!1,g=new va.SubscriptionLayer,b=function(){q||(q=!0,w.subscribeForEvent("refresh",function(m){g.invokeEventCallbacks("refresh",m)}),w.subscribeForEvent("bidReceived",function(m){g.invokeEventCallbacks("bidReceived",m)}))};this.subscribeForEvent=function(m,f){g.subscribeForEvent(m,f)};this.dispatch=function(m,f){b();var n=[];C.forEach(m,function(P){n.push({asAdUnit:P,promise:void 0})});for(var e={},l=0;l<m.length;l++){var h=m[l];e[h.type]=e[h.type]||[];e[h.type].push(h)}for(var u in e)if(u=parseInt(u),
e.hasOwnProperty(u)){var H=e[u];m=f&&f[u];a:{switch(u){case F.Types.DFP:m=w.dispatch(H,m);break a}m=void 0}C.forEach(m,function(P,Q){var G=H[Q];C.find(n,function(c){return c.asAdUnit==G}).promise=P})}return C.map(n,function(P){return P.promise})}};F.Types={UNKNOWN:0,DFP:1,SMART_AS:2};I.AdServer=F;D=qa.new();D.setPrefix("dfpAdapter: ");D.setLevel(qa.DEBUG);var x=da.CustomEvents,w=new function(){function q(B){var O=0;B.forEach(function(Z){Z=Z.getTargetingMap();Object.entries(Z).forEach(function(Y){O+=
(Y[0]?Y[0].length:0)+(Y[1]&&Y[1][0]?Y[1][0].length:0)})});return 6E3<=O}function g(B){switch(B){case La.Bid.Types.ADX:return"gad";case La.Bid.Types.ADX_TEXT:return"gad_text";case La.Bid.Types.DIRECT:return"gad_dfp_direct"}}function b(B){B=l[B];B.deferred.resolve({auctionId:B.asAdUnit.auctionId,bids:[]})}function m(B,O,Z){return"fluid"===B&&Z?!0:O.some(function(Y){return Y.width===B.width&&Y.height===B.height})}function f(B){if(B=ya("fluid",B))return B=B.split(","),B=B.map(function(O){return isNaN(O)?
O:parseInt(O)})}function n(B,O,Z,Y){var ma=f(B);if(!ma&&0===O.length)return B;var ra=0;Y=Array(Y).fill(0).map(function(za,wa){return Z.includes(wa)?O[ra++]:ma[wa]||0}).join(",");return ma?ka(B,"fluid",Y):B+"&fluid="+encodeURIComponent(Y)}var e=!1,l={},h={},u={},H=[],P=[],Q=new va.SubscriptionLayer,G={_height_:5,_width_:6,_empty_:7,_is_afc_:8,_fluid_:9,_creative_ids_:14,_adgroup2_ids_:15};this.init=function(){if(!e&&(e=!0,gb(),!document.getElementById("up-gpt-stylesheet"))){var B=document.createElement("style");
B.id="up-gpt-stylesheet";B.type="text/css";B.textContent=".up-gpt-static { opacity: 0.001 !important; }";(document.head||document.body||document.documentElement).appendChild(B)}};this.dispatch=function(B,O){try{this.init();var Z=[];x.fireEvent("onBeforeDfpRefreshDispatch");x.fireEvent("tryDisableGoogletagLazyLoad")&&c();C.forEach(B,function(Y){var ma=new C.CDefer;Z.push(ma.promise);l[Y.slotElementId]={asAdUnit:Y,deferred:ma};ma=new C.CDefer;h[Y.slotElementId]=ma});window.googletag.cmd.push(function(){try{D.debugf(null,
"onAdsRequestPrepareStarted");var Y=window.googletag.pubads().getSlots(),ma=[];C.forEach(Y,function(za){C.forEach(B,function(wa,Ga){Ga=za.getSlotElementId();if(Ga===wa.slotElementId){ma.push(za);var Ka=la.stringRange(16,24);u[Ka]=Ga;za.setTargeting("uponitSlotIterationId",Ka);x.fireEvent("preTargetingSetting",{dfpSlot:za,ASAdUnit:wa});Ga=wa.params.keyValuesParams.toRemove;for(Ka=0;Ka<Ga.length;Ka++)za.clearTargeting(Ga[Ka]);za.__up_display||(za.__up_display=!0,window.googletag.display(wa.slotElementId));
Ga=wa.params.keyValuesParams.toAdd;for(var Ma in Ga)Ga.hasOwnProperty(Ma)&&za.setTargeting(Ma,Ga[Ma]);if(window.uponit&&window.uponit.modifiers&&window.uponit.modifiers.dfpTargeting&&0<window.uponit.modifiers.dfpTargeting.length)try{var Oa=window.uponit.modifiers.dfpTargeting;for(Ma=0;Ma<Oa.length;Ma++){var Aa=za.getTargetingMap();Ga={};for(var Ea in Aa)Ga[Ea]=Aa[Ea];Ka=null;!wa||void 0==wa.floorPrice&&null==wa.floorPrice||(Ka=wa.floorPrice);var Qa=Oa[Ma](Ga,za,Ka);if(Qa)for(Ea in Qa)Aa[Ea]&&Aa[Ea]===
Qa[Ea]||za.setTargeting(Ea,Qa[Ea])}}catch(Ta){D.errorf(null,"dispatch: uponit-modifiers: %o",Ta)}za.setForceSafeFrame(!0);za.setCollapseEmptyDiv(!1)}})});D.debugf(null,"onAdsRequestSlotsPrepare - slots: %o",z(ma));d(ma);var ra=googletag.pubads().isSRA()&&q(ma);if(x.fireEvent("forceNotSingleRequestRefresh")||ra)for(Y={},ra=0;ra<ma.length;Y={$jscomp$loop$prop$slot$75:Y.$jscomp$loop$prop$slot$75},ra++)Y.$jscomp$loop$prop$slot$75=ma[ra],setTimeout(function(za){return function(){window.googletag.pubads().refresh([za.$jscomp$loop$prop$slot$75],
void 0,!0)}}(Y),0);else setTimeout(function(){window.googletag.pubads().refresh(ma,void 0,!0)},0)}catch(za){D.errorf(null,"dispatch: %o",za)}});return Z}catch(Y){qa.criticalf("google cmd function failed: %o",Y)}};var c=function(){window.googletag.cmd.push(function(){window.googletag.pubads().enableLazyLoad({fetchMarginPercent:-1,renderMarginPercent:-1})})},d=function(B){C.forEach(B,function(O){O.setTargeting("upstdfp",!0)})},t=function(B){var O=[];try{for(var Z=0;Z<B.length;Z++){var Y=B[Z];"fluid"===
Y?O.push(Y):O.push([Y.getWidth(),Y.getHeight()])}}catch(ma){D.errorf(null,"getNormalizedDfpSizes errored - %o",ma)}return O},z=function(B){var O=[];try{for(var Z=0;Z<B.length;Z++){var Y=B[Z];O.push({elementId:Y.getSlotElementId(),dfpAdUnitPath:Y.getAdUnitPath(),sizes:t(Y.getSizes()),targetingMap:Y.getTargetingMap()})}}catch(ma){D.errorf(null,"getNormalizedDFPAdSlots errored - %o",ma)}return O},L=function(B){C.forEach(B,function(O){O.clearTargeting("upstdfp")})},N=function(B,O){if(-1<O.indexOf("fluid")){var Z=
C.map(O,function(ra){return"fluid"!=ra&&ra.getWidth()});O=C.map(O,function(ra){return"fluid"!=ra&&ra.getHeight()});Z=C.filter(Z,function(ra){return void 0!=ra});O=C.filter(O,function(ra){return void 0!=ra});Z=C.reduce(Z,function(ra,za){return Math.max(ra,za)});O=C.reduce(O,function(ra,za){return Math.max(ra,za)});return!(B._width_<=Z&&B._height_<=O)}Z=B._width_;B=B._height_;for(var Y=0;Y<O.length;Y++){var ma=O[Y];if(ma.getWidth()==Z&&ma.getHeight()==B)return!1}return!0},ca=function(B){if(!B)return!1;
var O=x.fireEvent("isPrebidResponse",{str:B});return void 0!=O?O:/\.(renderAd|renderAdNew)\(document,(\s+)?['"][a-zA-Z0-9\-_]+['"]/gm.test(B)||/apstag\.renderImp\(document,/gm.test(B)||/"hb_adid":[\s\r\n\t]{0,9}?\["[a-z-A-Z0-9\-_]+"\]/gm.test(B)||/ucTagData\.ad[Ii]d(:?\s+)?=(:?\s+)?['"]([a-zA-Z0-9\-_]+)['"]/gm.test(B)||-1<B.indexOf("districtm_adslot = ")?!0:!1},E=function(B,O,Z,Y){B&&B._html_&&-1<B._html_.indexOf("googletag.pubads().definePassback(")&&(B._html_=B._html_.replace(").setTargeting('",
").setTargeting('up_recovery','true').setTargeting('"),B._html_=B._html_.replace(').setTargeting("',').setTargeting("up_recovery","true").setTargeting("'));B&&B._html_&&-1===B._html_.indexOf("ca-pub-15988")&&(B._html_=B._html_.replace("data-ad-slot=",'data-ad-type="text" data-ad-slot=').replace("data-ad-client\\x3d","data-ad-type\\x3d\\x22text\\x22 data-ad-client\\x3d").replace('google_ad_client = "ca-pub','google_ad_type = "text";google_ad_client = "ca-pub'));(O=x.fireEvent("dfpResponseCustomReplace",
{googleReponse:B,googleFrame:Y,googleSlot:O}))&&(B=O);if(!(B._fluid_||B._height_&&B._width_)&&0<Z.length)for(O=0;O<Z.length;O++)if(Y=Z[O],"fluid"!=Y&&120<=Y.getWidth()){B._width_=parseInt(Y.getWidth());B._height_=parseInt(Y.getHeight());break}},M=function(B,O){var Z=B._html_;return B._empty_?La.Bid.Types.EMPTY:ca(Z)?La.Bid.Types.DFP_PREBID:B._is_afc_?"text"===Ha([O]).ad_type?La.Bid.Types.ADX_TEXT:La.Bid.Types.ADX:-1<Z.indexOf("js/adsbygoogle.js")||-1<Z.indexOf("pagead/show_ads.js")?La.Bid.Types.ADSENSE:
La.Bid.Types.DIRECT},a=function(B,O){switch(B){case La.Bid.Types.ADSENSE:case La.Bid.Types.ADX:case La.Bid.Types.ADX_TEXT:return O.adxBidderId;case La.Bid.Types.DIRECT:return O.directBidderId}},A=function(B,O){H.push(O);B._html_=x.fireEvent("CustomPrebidHTMLModification",B._html_)||B._html_.replace(/w=w.parent/gm,"w=window").replace(/w = w.parent/gm,"w = window").replace(/pbjs/gm,"upbjs").replace(/renderAd/gm,"renderAdNew")},k=function(B){var O=B.getSlotElementId();O=va.escapeSelector("#"+O);O=document.querySelector(O+
' [id^="google_ads_iframe_"]');return O=x.fireEvent("customInnerContainer",{googleSlot:B})||O},K=function(B,O){try{if(B){for(var Z={},Y=[],ma=0;ma<B.length;ma++){var ra=B[ma].response.parsedData,za=B[ma].response.rawResponse,wa=B[ma].slot;if(wa){var Ga=O[ma],Ka=wa.getSlotElementId(),Ma=new C.CDefer;Z[Ka]=Ma;Y.push(Ma.promise);var Oa=l[Ka],Aa=k(wa);E(ra,wa,Ga,Aa);if(X(ra,wa,Ga))Z[Ka].resolve({injectToDom:!1}),b(Ka);else{ca(ra._html_)&&A(ra,Ka);var Ea=M(ra,wa),Qa=x.fireEvent("forceCompliant"),Ta=ra._html_,
Ua=g(Ea),ab=a(Ea,Oa.asAdUnit.params),Ya=g(Ea);a:{try{if(Qa&&Ea==La.Bid.Types.DIRECT&&ra._adgroup2_ids_&&ra._adgroup2_ids_[0]&&ra._creative_ids_&&ra._creative_ids_[0]){var tb=ra._adgroup2_ids_[0].toString()+"_"+ra._creative_ids_[0].toString();break a}}catch(Va){D.errorf(null,"getCreativeId: %o",Va)}tb=void 0}var qb=new La.Bid({ad:Ta,adId:null,bidder:Ua,bidderId:ab,bidderCode:Ya,creativeId:tb,width:ra._width_,height:ra._height_,cpm:Oa.asAdUnit.floorPrice+.01},za,Ea,void 0,function(Va){return function(){var Xa=
Z[Va];this.onRenderedEvent(function(){var db=document.getElementById(Va).querySelector('div[id^="google_ads_"]');C.removeClass("up-gpt-static",db)});"unresolved"==Xa.fate&&Xa.resolve({injectToDom:!0})}}(Ka),function(Va){return function(){var Xa=Z[Va];this.onRenderedEvent(function(){var db=document.getElementById(Va).querySelector('div[id^="google_ads_"]');C.addClass("up-gpt-static",db)});"unresolved"==Xa.fate&&Xa.resolve({injectToDom:!0})}}(Ka),function(Va){return function(){var Xa=Z[Va];"unresolved"==
Xa.fate&&Xa.resolve({injectToDom:!1})}}(Ka),function(Va){return function(Xa){h[Va].promise.then(function(){Xa()})}}(Ka),function(){return{bidderExternalID:this.bidderId,url:this.adUrl,hint:{provider:this.type==La.Bid.Types.DIRECT?"dfp_direct":this.bidderCode,uid:this.creativeId},width:parseInt(this.width),height:parseInt(this.height),markup:this.ad.replace(/\\(n|r|\\)/g,function(Va,Xa){return"n"==Xa?"\n":"r"==Xa?"\r":"\\"})}});Oa.deferred.resolve({auctionId:Oa.asAdUnit.auctionId,bids:[qb]});Q.invokeEventCallbacks("bidReceived",
{auctionId:Oa.asAdUnit.auctionId,bid:qb})}}else Y.push(Promise.resolve({injectToDom:!1}))}return Promise.all(Y).then(function(Va){try{for(var Xa=[],db=0;db<this.responsesWithSlots.length;db++){var aa=this.responsesWithSlots[db].response,ba=aa.parsedData,na=this.responsesWithSlots[db].slot,oa=na&&na.getSlotElementId();Va[db]&&!Va[db].injectToDom&&(oa&&P.push(oa),ba._html_="",ba._empty_=!0,ba._width_=1,ba._height_=1);Xa.push(aa)}return Xa}catch(ja){D.errorf(null,"handleDfpBidResponses: Promise.all: %o",
ja)}}.bind({responsesWithSlots:B,deferredsPromises:Y}))}}catch(Va){D.errorf(null,"handleDfpBidResponses: %o",Va)}},X=function(B,O,Z){if(!B||B&&!B._html_)return!0;var Y=Ha([O]),ma=B._empty_;Z="text"==Y.ad_type&&!ca(B._html_)&&N(B,Z);B=va.isUnacceptable("#"+O.getSlotElementId(),{width:B._width_,height:B._height_});return ma||Z||B},ka=function(B,O,Z){return B.replace(new RegExp("([?&]"+O+"=)([^&#]*)([&#$].*)","g"),"$1"+encodeURIComponent(Z)+"$3")},ya=function(B,O){B=B.replace(/[\[\]]/g,"\\$&");return(B=
(new RegExp("[?&]"+B+"(=([^&#]*)|&|#|$)")).exec(O))?B[2]?decodeURIComponent(B[2].replace(/\+/g," ")):"":null},ha=function(B,O){return(B=(new RegExp("(^|[&])"+B+"(=([^&#]*)|&|#|$)")).exec(O))?B[3]?decodeURIComponent(B[3].replace(/\+/g," ")):"":null},Ha=function(B){try{for(var O={},Z=0;Z<B.length;Z++){var Y=l[B[Z].getSlotElementId()].asAdUnit;if(Y&&Y.params&&Y.params.queryParams)for(var ma in Y.params.queryParams)Y.params.queryParams.hasOwnProperty(ma)&&(O[ma]=Y.params.queryParams[ma])}return O}catch(ra){D.errorf(null,
"getSlotsQueryParams: %o",ra)}},Na=function(B){B=B.split("\n");for(var O=[],Z=0;Z<B.length;Z++){var Y=B[Z];if(0===Z%2&&""!=Y){try{var ma=window.JSON.parse(Y)}catch(Ga){D.errorf(null,"parseGoogleExpandableResponse: 1 %o",Ga)}var ra=Object.keys(ma)[0];Y=ma[ra];ra={adUnitPath:ra,rawResponse:Y,parsedData:{}};try{for(var za in G)if(G.hasOwnProperty(za)){var wa=G[za];"undefined"!==typeof Y[wa]&&null!==Y[wa]&&(ra.parsedData[za]=Y[wa])}}catch(Ga){D.errorf(null,"parseGoogleExpandableResponse: 2 %o",err)}O.push(ra)}else 0!==
Z%2&&(O[O.length-1].parsedData._html_=Y)}return O},r=function(B,O){O.__defineGetter__("responseText",function(){return B});O.__defineGetter__("response",function(){return B});O.__defineGetter__("status",function(){return 200});O.__defineGetter__("readyState",function(){return 4})},W=function(B,O,Z,Y){try{var ma=C.map(O,function(za,wa){if(-1<Z.indexOf(wa))return O[wa]}),ra=C.map(B,function(za,wa){return{slot:ma[wa],response:za}});return K(ra,Y)}catch(za){D.errorf(null,"invokeMiddleware: %o",za)}},
p=function(B,O){if(O=Ha(O))for(var Z in O)if(O.hasOwnProperty(Z)){var Y=O[Z];0>B.indexOf("?")?B=B+"?"+Z+"="+Y:0>B.indexOf("&"+Z+"=")&&0>B.indexOf("?"+Z+"=")&&(B=B+"&"+Z+"="+Y)}return B},v=function(B){var O=[],Z=ya("scp",B);Z||(Z=ya("prev_scp",B));if(Z){B=Z.split("|");for(Z=0;Z<B.length;Z++){var Y=ha("uponitSlotIterationId",B[Z]);u[Y]&&O.push(u[Y])}return O}},J=function(B){for(var O=[],Z=window.googletag.pubads().getSlots(),Y=0;Y<Z.length;Y++)for(var ma=Z[Y],ra=0;ra<B.length;ra++){var za=B[ra];ma.getSlotElementId()==
za&&O.push(ma)}return O},S=function(B,O,Z,Y){D.debugf(null,"onAdsServerResponse - slots: %o, relevantIndexes: %o",z(O),Z);return new Promise(function(ma,ra){try{if(""===B.responseText)O.forEach(function(wa){return b(wa.getSlotElementId())}),ma();else{var za=Na(B.responseText);W(za,O,Z,Y).then(function(wa){for(var Ga="",Ka=0;Ka<wa.length;Ka++){var Ma=wa[Ka],Oa=Ma.parsedData,Aa=Oa._html_;delete Oa._html_;var Ea=Ma.rawResponse,Qa={};try{for(var Ta in G)G.hasOwnProperty(Ta)&&(Ea[G[Ta]]=1==Oa[Ta]?1:0==
Oa[Ta]?0:Oa[Ta]);Qa[Ma.adUnitPath]=Ea}catch(Ua){D.errorf(null,"stringifyResponse: RESPONSE_TYPES.arrayTypeExpandable: 1 %o",Ua)}try{Ga=Ga+JSON.stringify(Qa)+"\n"+Aa+"\n"}catch(Ua){D.errorf(null,"stringifyResponse: RESPONSE_TYPES.arrayTypeExpandable: 2 %o",Ua)}}r(Ga,B);ma()})}}catch(wa){qa.criticalf(null,"handleReponsesFromXHR errored: %o",wa)}})},fa=function(B){var O=[],Z=["21063911","21063048","21063670","21063817","21063671"],Y=ya("eid",B);if(!Y)return B;Y=Y.split(",");for(var ma=0;ma<Y.length;ma++){var ra=
Y[ma];0>Z.indexOf(ra)&&O.push(ra)}return B=ka(B,"eid",O.join(","))},ia=function(B){var O=ya("sz",B);O||(O=ya("prev_iu_szs",B));if(O)return B=O.split(","),B=C.map(B,function(Z){return Z.split("|")}),B=C.map(B,function(Z,Y){return C.map(Z,function(ma){ma=ma.split("x");return{width:parseInt(ma[0]),height:parseInt(ma[1])}})})},pa={width:320,height:50},ua=function(B){return C.map(B,function(O){var Z={getWidth:function(){return O.width},getHeight:function(){return O.height}};O.width==pa.width&&O.height==
pa.height&&(Z="fluid");return Z})},Pa=function(B,O,Z){function Y(){var Aa=x.fireEvent("removeSizesDfpConfig");if(Aa){var Ea=Aa.forAll||[];wa=C.map(wa,function(Qa,Ta){Ta=O[Ta].getSlotElementId();var Ua=(Aa[Ta]||[]).concat(Ea);Ua=C.map(Ua,function(ab){return"fluid"==ab?(B=B.replace(/fluid=(.*?)&/g,""),{width:pa.width,height:pa.height}):ab});return C.filter(Qa,function(ab){return!C.find(Ua,function(Ya){return Ya.width==ab.width&&Ya.height==ab.height})})})}}if(B)try{if(-1<B.indexOf("&sz="))var ma="sz";
else if(-1<B.indexOf("&prev_iu_szs="))ma="prev_iu_szs";else return;var ra=ia(B);if(ra){var za=ra.length;var wa=C.filter(ra,function(Aa,Ea){return-1<Z.indexOf(Ea)});var Ga=(f(B)||[]).filter(function(Aa,Ea){return Z.includes(Ea)});modifiedSizesPerSlot=[];modifiedSizesGoogletagFormat=[];Y();wa=C.map(wa,function(Aa,Ea){var Qa=O[Ea].getSlotElementId(),Ta=Ga[Ea],Ua=x.fireEvent("sizesToRemoveBySpace",{spaceName:l[Qa].asAdUnit.spaceName});if(!Ua)return Aa;Ua.includes("fluid")&&Ta&&(Ga[Ea]=0);return C.filter(Aa,
function(ab){return!C.find(Ua,function(Ya){return"fluid"===Ya?pa.width==ab.width&&pa.height==ab.height:Ya.width===ab.width&&Ya.height===ab.height})})});try{C.forEach(wa,function(Aa,Ea){var Qa=O[Ea].getSlotElementId(),Ta=Ga[Ea];Qa=x.fireEvent("sizesToAddBySpace",{ASAdUnit:l[Qa].asAdUnit});if(!Qa)return Aa;C.forEach(Qa,function(Ua){m(Ua,Aa,Ta)||("fluid"===Ua?(m(pa,Aa,Ta)||Aa.push({width:pa.width,height:pa.height}),Ga[Ea]="height"):Aa.push({width:Ua.width,height:Ua.height}))})})}catch(Aa){D.errorf(null,
"sizesToAddBySpace error - %o",Aa)}C.forEach(wa,function(Aa,Ea){Ea=O[Ea].getSlotElementId();Aa=va.sizesRemover("#"+Ea,Aa);Aa=C.filter(Aa,function(Qa){return!!Qa});0==Aa.length&&(Aa=[{width:2,height:3}]);modifiedSizesPerSlot.push(Aa);Aa=ua(Aa);modifiedSizesGoogletagFormat.push(Aa)});var Ka=0,Ma=C.map(ra,function(Aa,Ea){if(0>Z.indexOf(Ea))return Aa;Aa=modifiedSizesPerSlot[Ka];Ka++;return Aa});var Oa=C.map(Ma,function(Aa){return C.map(Aa,function(Ea){return Ea.width+"x"+Ea.height})});Oa=C.map(Oa,function(Aa){return Aa.join("|")});
Oa=Oa.join(",");B=ka(B,ma,Oa);B=n(B,Ga,Z,za);return{url:B,modifiedSizes:modifiedSizesGoogletagFormat}}}catch(Aa){return D.errorf(null,"modifySizesInUrl errored - %o",Aa),{url:B,modifiedSizes:C.map(O,function(Ea){return Ea.getSizes()})}}},ta=function(B){var O=[],Z=ya("scp",B);Z||(Z=ya("prev_scp",B));if(Z){B=ya("csp",B);if(B){var Y=ha("upstdfp",B);D.debugf(null,"onCommonSlotTargetDetected - upstdfp: %o",Y)}Z=Z.split("|");for(B=0;B<Z.length;B++){var ma=Z[B];(Y||ha("upstdfp",ma))&&O.push(B)}return O}},
Da=function(){sa.Hooks.addEventListener(sa.Hooks.Types.XHR_OPEN_PRE,function(B){try{var O=B.data;if(Fa(O[1])){var Z=v(O[1]),Y=J(Z),ma=ta(O[1]);L(Y);O[1]=va.addAcceptableParam(O[1]);O[1]=p(O[1],Y);sizeReplacmentObj=Pa(O[1],Y,ma);O[1]=sizeReplacmentObj.url;var ra=sizeReplacmentObj.modifiedSizes;O[1]=fa(O[1]);x.fireEvent("onBeforeDfpAdsRequest",{url:O[1]});D.debugf(null,"onDfpAdsRequest - url: %s, slots: %o, relevantIndexes: %o",O[1],z(Y),ma);var za=null,wa=null,Ga=this,Ka=!1;this.onload=function(){try{za&&
!Ka&&(Ka=!0,S(Ga,Y,ma,ra).then(function(){za.call(Ga)}))}catch(Ma){D.errorf(null,"addListenersOnHooks: onload: %o",Ma)}};this.onreadystatechange=function(Ma){try{wa&&!Ka&&4===this.readyState&&(200===this.status?(Ka=!0,S(Ga,Y,ma,ra).then(function(){wa.call(Ga,Ma)})):D.criticalf(null,"onDfpAdsRequestError, status: %s, responseText: %s",this.status,this.responseText))}catch(Oa){D.criticalf(null,"onReadyStateChangeError, err %o",Oa)}};this.__defineGetter__("onload",function(){return za});this.__defineSetter__("onload",
function(Ma){return za=Ma});this.__defineGetter__("onreadystatechange",function(){return wa});this.__defineSetter__("onreadystatechange",function(Ma){return wa=Ma})}}catch(Ma){D.errorf(null,"addListenersOnHooks: %o",Ma)}})},Fa=function(B){try{return B&&-1<B.indexOf("doubleclick.net/gampad/ads")&&-1<B.indexOf("upstdfp")}catch(O){debugger}};this.subscribeForEvent=function(B,O){Q.subscribeForEvent(B,O)};var Sa=function(){window.googletag.pubads().addEventListener("slotRenderEnded",function(B){var O=
B.slot;B=O.getSlotElementId();O=k(O);var Z=O.querySelector("iframe");if(0<=P.indexOf(B))P.splice(P.indexOf(B),1);else{var Y=h[B];Y&&"unresolved"==Y.fate&&Y.resolve();if(-1<H.indexOf(B)){H.splice(H.indexOf(B),1);try{O.style.width="1px",O.style.height="1px",O.querySelector("iframe").width="1",O.querySelector("iframe").height="1"}catch(ma){D.errorf(null,"setGoogletagEvents: %o",ma)}}"0"===Z.width&&Z.style.setProperty("width","max-content","important")}})},Wa=function(){var B=window.googletag.pubads().refresh;
window.googletag.pubads().refresh=function(O,Z,Y){D.debugf(null,"onGoogleTagRefreshInvoked - info: %o",{slots:O&&z(O),settings:Z,isRefreshInvokedByUs:Y});if(Y)return O?B(O,Z):B();O||(O=window.googletag.pubads().getSlots());Z=[];for(Y=0;Y<O.length;Y++)try{var ma=O[Y].getSlotElementId();ma&&Z.push(ma)}catch(ra){D.errorf(null,"wrapGoogleTagRefresh: refresh-invoked-by-the-publisher: %o",ra)}Q.invokeEventCallbacks("refresh",Z)}},gb=function(){var B="push";window.googletag.cmd.unshift&&(B="unshift");window.googletag.cmd[B](function(){x.fireEvent("shouldNotWrapGoogleTagRefresh")||
Wa();Sa();Da(window)})}};I.DfpAdapter=w})(zb);var Ab={};(function(I){var D=qa.new();D.setPrefix("prebidding: ");D.setLevel(qa.INFO);var F=new function(){var b=!1,m=new va.SubscriptionLayer,f=function(){b&&(b=!1);b=!0;w.subscribeForEvent("refresh",function(n){m.invokeEventCallbacks("refresh",n)});w.subscribeForEvent("bidReceived",function(n){m.invokeEventCallbacks("bidReceived",n)})};this.subscribeForEvent=function(n,e){m.subscribeForEvent(n,e)};this.dispatch=function(n,e){f();var l=[],h={};C.forEach(n,
function(P){l.push({hbAdUnit:P,promises:[]});var Q=P.biddingSettings;for(G in Q){var G=parseInt(G);if(Q.hasOwnProperty(G)){var c=Q[G];c&&0<c.length&&(h[G]=h[G]||[],h[G].push({biddersSettings:c,auctionId:P.auctionId,spaceName:P.spaceName,sizes:P.sizes,selector:P.selector}))}}});for(var u in h)if(u=parseInt(u),h.hasOwnProperty(u)){var H=h[u];n=e&&e[u];a:{switch(u){case F.Types.PREBID:n=w.dispatch(H,n);break a}n=void 0}C.forEach(n,function(P,Q){C.find(l,function(G){return G.hbAdUnit.auctionId==H[Q].auctionId}).promises.push(P)})}return C.map(l,
function(P){return Promise.all(P.promises).then(function(Q){Q=C.map(Q,function(G){return G.bids});return{auctionId:P.hbAdUnit.auctionId,bids:C.flat(Q)}})})}};F.Types={UNKNOWN:0,PREBID:1,RTK:2};I.HB=F;var x=da.CustomEvents,w=new function(){function b(E,M){return C.filter(E,function(a){return C.find(M,function(A){return a.width==A[0]&&a.height==A[1]})})}function m(E,M,a){if(!1!==E.isBackupCreative)if(a)M.contentWindow.postMessage({type:"eval",code:g},"*");else try{M.contentWindow.eval(atob(q))}catch(A){D.errorf(null,
"evalBackupCreativeScript: - %o",A)}}var f=!1,n={},e={},l=new va.SubscriptionLayer;this.subscribeForEvent=function(E,M){l.subscribeForEvent(E,M)};this.dispatch=function(E){try{f||(f=!0,n=T.cpbjs,d(),x.fireEvent("wrapPrebidRequestBids")&&z(),ca());var M={};C.forEach(E,function(K){M[K.spaceName]={hbAdUnit:K,deferred:new C.CDefer}});var a=P(E),A=x.fireEvent("prebidTimeout")||3E3;h();n.requestBids({timeout:A,adUnits:a,bidsBackHandler:function(K){try{for(var X in M)if(M.hasOwnProperty(X)){var ka=M[X],
ya=ka.hbAdUnit;if(K){var ha=K[X],Ha=[];if(ha){var Na=C.find(a,function(r){return r.code==X}).sizes;ha.bids=b(ha.bids,Na);Ha=G(ha.bids,ka.hbAdUnit)}ka.deferred.resolve({auctionId:ya.auctionId,bids:Ha});C.forEach(Ha,function(r){l.invokeEventCallbacks("bidReceived",{auctionId:ya.auctionId,bid:r})})}else ka.deferred.resolve({auctionId:ya.auctionId,bids:[]})}}catch(r){D.errorf(null,"prebidAdapter: dispatch: bidsBackHandler: - %o",r)}}});E=[];for(var k in M)M.hasOwnProperty(k)&&E.push(M[k].deferred.promise);
return E}catch(K){D.errorf(null,"prebidAdapter: dispatch: - %o",K)}};var h=function(){if(n.bidderSettings&&n.bidderSettings.standard&&n.bidderSettings.standard.adserverTargeting){var E=!!C.find(n.bidderSettings.standard.adserverTargeting,function(a){return"hb_pb_org"==a.key}),M=!!C.find(n.bidderSettings.standard.adserverTargeting,function(a){return"hb_pb"==a.key});!E&&M&&n.bidderSettings.standard.adserverTargeting.push({key:"hb_pb_org",val:function(a){var A=n.getConfig().priceGranularity;return"auto"===
A?a.pbAg:"dense"===A?a.pbDg:"low"===A?a.pbLg:"medium"===A?a.pbMg:"high"!==A&&"custom"===A?a.pbCg:a.pbHg}})}},u=function(E){var M=E.split("x");if(2!==M.length)throw Error();E=parseInt(M[0]);M=parseInt(M[1]);if(isNaN(E)||isNaN(M))throw Error();return{width:E,height:M}},H=function(E){for(var M=[],a=0;a<E.sizes.length;a++){var A=u(E.sizes[a]);M.push({width:A.width,height:A.height})}var k=x.fireEvent("sizesToReplaceBySpace",{spaceName:E.spaceName});k&&(M=C.map(M,function(X){var ka=C.find(k,function(ya){return ya.size.width==
X.width&&ya.size.height==X.height});return ka?{width:ka.replacement.width,height:ka.replacement.height}:X}));var K=x.fireEvent("sizesToRemoveBySpace",{spaceName:E.spaceName});K&&(M=C.filter(M,function(X){return!C.find(K,function(ka){return ka.width==X.width&&ka.height==X.height})}));E=va.sizesRemover(E.selector,M);E=C.filter(E,function(X){return!!X});return E=C.map(E,function(X){return[X.width,X.height]})},P=function(E){return C.map(E,function(M){var a=H(M),A=[];C.forEach(M.biddersSettings,function(k){A.push({bidder:k.name,
params:k.params})});return{code:M.spaceName,bids:A,sizes:a,mediaTypes:{banner:{sizes:a}}}})},Q=function(E,M){if(E.ad&&-1<E.ad.indexOf(atob("c2VydmluZy1zeXMuY29t"))&&-1<E.ad.indexOf(atob("QnVyc3RpbmdQaXBlL2FkU2VydmVyLmJz"))){var a=atob("PHNjcmlwdD53aW5kb3cuZWJDZmcgPSB7fTt3aW5kb3cuZWJDZmdfXyA9IHt9O3dpbmRvdy5fX2RlZmluZUdldHRlcl9fKCdlYkNmZycsZnVuY3Rpb24oYSl7cmV0dXJuIHdpbmRvdy5lYkNmZ19fO30pO3dpbmRvdy5fX2RlZmluZVNldHRlcl9fKCdlYkNmZycsZnVuY3Rpb24oYSl7YS5hZEh0bWxQYXRoPScnO3JldHVybiB3aW5kb3cuZWJDZmdfXz1hO30pOzwvc2NyaXB0Pg==");
-1<E.ad.indexOf("<body>")?E.ad=E.ad.replace("<body>",a):E.ad=a+E.ad}if("amazonAAX"===E.bidder)try{var A=JSON.parse(E.adTargeting);A.amzniid=E.adId;for(var k in A)E.adserverTargeting[k]=A[k];E.ad=E.adHtml;try{delete E.adserverTargeting.hb_pb}catch(K){}delete E.adUrl}catch(K){}E.bidder&&"smartadserver"===E.bidder&&(E.bidder="smart");if(E.bidder&&("triplelift"===E.bidder&&-1<E.ad.indexOf("render_options_bm")||"sharethrough"===E.bidder)){A=E;M=H(M);for(E=k=0;E<M.length;E++)a=M[E][0],a>k&&(k=a);A.width=
k}},G=function(E,M){E=C.map(E,function(a){a.bidderId=c(a,M);if(a.bidderId)return Q(a,M),e[a.adId]=new C.CDefer,new La.Bid({ad:a.ad,adId:a.adId,adUrl:a.adUrl,bidderId:a.bidderId,bidder:a.bidder,bidderCode:a.bidderCode,currency:a.currency,creativeId:"komoona"===a.bidder||"criteo"===a.bidder||"consumable"===a.bidder?null:a.c?String(a.c):a.adid&&"0"!=a.adid?String(a.adid):a.crid&&"0"!=a.crid?String(a.crid):a.creativeId&&"0"!=a.creativeId?String(a.creativeId):a.creative_id&&"0"!=a.creative_id?String(a.creative_id):
null,cpm:a.cpm,complianceStatus:0,height:a.height,timeToRespond:a.timeToRespond,size:a.size,width:a.width},a,La.Bid.Types.PREBID,function(A){A=0<A.complianceBidsInAuction.length?C.map(A.complianceBidsInAuction,function(K){return K.rawBid&&K.rawBid}):void 0;var k=a.adUnitCode;A=n.getAdserverTargeting(k,A)[k];""==A.hb_pb&&A.hb_pb_org&&(A.hb_pb=A.hb_pb_org);return A=x.fireEvent("customAdserverTargeting",{adServerTargeting:A})||A},function(A){try{t(this);var k=A.placement;this.onRenderedEvent(function(){var K=
k.parentElement.querySelector(".ahover");C.removeClass("up-pb-static",K)});L(k,this)}catch(K){}},function(A){t(this);var k=A.placement;this.onRenderedEvent(function(){var K=k.parentElement.querySelector(".ahover");C.addClass("up-pb-static",K)});L(k,this)},void 0,function(A){this.renderedDeferred.promise.then(function(){A()})}.bind({renderedDeferred:e[a.adId]}),function(){var A={bidderExternalID:this.bidderId,markup:this.ad,url:this.adUrl,hint:{provider:this.bidderCode,uid:this.creativeId},width:parseInt(this.width),
height:parseInt(this.height)};if("152media"===this.bidderCode||"brealtime"===this.bidderCode||"districtm"===this.bidderCode||"defymedia"===this.bidderCode||"appnexusAst"===this.bidderCode)A.provider="appnexus";"ix"===this.bidderCode&&(A.provider="indexExchange");"underdogmedia"===this.bidderCode&&(A.hintID=A.hintID+"_"+this.width+"_"+this.height);"gumgum"===this.bidderCode&&this.creative&&(A.markup=this.creative);if("komoona"===this.bidderCode)try{var k=0,K=JSON.parse(unescape(this.ad.split('"creative_data":"')[1].split('","')[0])),
X;for(X in K.hdbd_data.hbbids){var ka=K.hdbd_data.hbbids[X];ka.cpm>k&&(k=ka.cpm,A.markup=ka.creative_data.creative)}}catch(ya){}this.ad&&-1<this.ad.indexOf("https://googleads.g.doubleclick.net/pagead/adfetch?client=ca-pub-")&&(A.url="https://googleads.g.doubleclick.net/pagead/adfetch"+this.ad.split("https://googleads.g.doubleclick.net/pagead/adfetch")[1].split("&rfl=")[0],A.markup="");return A});D.errorf(null,"prebidAdapter: dispatch: bidsBackHandler: - No corresponding bidderSettings found in ad unit: %o for Prebid auction response bid: %o",
M,a)});return C.reject(E,va.isNil)},c=function(E,M){return(M=C.find(M.biddersSettings,function(a){return a.name==E.bidderCode}))?M.id:void 0},d=function(){n.onEvent("bidWon",function(E){e[E.adId].resolve()})},t=function(E){(E=E.rawBid)&&E.bidder&&(x.fireEvent("FirePublisherEvent",{eventName:"AcceptableAdsRender",payload:{detail:E}}),x.fireEvent("FirePublisherEvent",{eventName:"uponitRender",payload:{detail:E}}))},z=function(){var E=window.pbjs||window.jitaJS;if(E&&E.requestBids){var M=E.requestBids;
E.requestBids=function(a){for(var A=[],k=a&&a.adUnits,K=0;K<k.length;K++)A.push(k[K].code);l.invokeEventCallbacks("refresh",A);if(!x.fireEvent("skipOriginalRequestBidsFunction"))return M.apply(this,arguments)}}},L=function(E,M){var a=N(),A=a.container,k=a.iframe,K=function(){try{k.removeEventListener("load",K);var X=T.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame;k.style.setProperty("visibility","");X||(k.contentWindow.document.documentElement.innerHTML="<html><body></body></html>");var ka=
!X&&k.contentWindow.document,ya=$a.browser();"sharethrough"===M.bidder&&window.setTimeout(function(){for(var ha=document.querySelectorAll(".str-thumbnail"),Ha=0;Ha<ha.length;Ha++){var Na=ha[Ha].style.backgroundImage;!Na||-1!==Na.indexOf("upapi")||-1!==Na.indexOf("criteo.net")||-1!==Na.indexOf("imgix.net")&&-1!==Na.indexOf(".gif")?-1<Na.indexOf("imgix.net")&&-1<Na.indexOf(".gif")&&(-1<Na.indexOf("?")?ha[Ha].style.backgroundImage=Na.replace('")','&adunit=true")'):ha[Ha].style.backgroundImage=Na.replace('")',
'?adunit=true")')):-1<Na.indexOf("?")?ha[Ha].style.backgroundImage=Na.replace('")','&upapi=true")'):ha[Ha].style.backgroundImage=Na.replace('")','?upapi=true")')}},3E3);"edge"===ya&&(M.rawBid.ad=M.rawBid.ad.replace(/\.html[\?#]/,".html?upapi=true&"),M.rawBid.ad=M.rawBid.ad.replace(/\.html%23/,".html%23upapi=true%26"),window.setTimeout(function(){if(X)k.contentWindow.postMessage({type:"eval",code:"try { var styleSheets = document.styleSheets; for (var i = 0; i < styleSheets.length; i++) { if (styleSheets[i].cssText && styleSheets[i].cssText.indexOf(\"a[href^='http://ads2.williamhill.com/redirect.aspx?']\") > -1) { styleSheets[i].cssText = ''; } } } catch (e) { }"},
"*");else try{for(var ha=ka.styleSheets,Ha=0;Ha<ha.length;Ha++)ha[Ha].cssText&&-1<ha[Ha].cssText.indexOf("a[href^='http://ads2.williamhill.com/redirect.aspx?']")&&(ha[Ha].cssText="")}catch(Na){}},3E3));window.setTimeout(function(){var ha="edge"===ya||"ie"===ya;ha||m(M,k,X);var Ha=va.doesBrowserSupportDocOpen();n.version.includes("4.17")?n.renderAd(ka,M.adId,{ifr:k,shouldOpenDocument:Ha}):n.renderAd(ka,M.adId,Ha,k);ha&&m(M,k,X)},0);k.style.width=M.width+"px";k.style.height=M.height+"px"}catch(ha){D.errorf(null,
"renderBid - %o",ha)}};k.addEventListener("load",K);k.style.setProperty("visibility","hidden");E.insertBefore(A,E.children[0])},N=function(){var E=document.createElement("div");E.className="ahover";var M=vb.createSafeFrame();M.style.width="1px";M.style.height="1px";M.style.border="0px";M.setAttribute("marginwidth","0");M.setAttribute("marginheight","0");M.scrolling="no";E.appendChild(M);return{container:E,iframe:M}},ca=function(){if(!document.getElementById("up-pb-stylesheet")){var E=document.createElement("style");
E.id="up-pb-stylesheet";E.type="text/css";E.textContent=".up-pb-static { opacity: 0.001 !important; }";(document.head||document.body||document.documentElement).appendChild(E)}}},q="",
g="try { eval(atob('"+q+"')) } catch (err) {}"})(Ab);var rb={};(function(I){var D=new function(){var F=Ab.HB,x=zb.AdServer,w=new va.SubscriptionLayer,q=da.CustomEvents;this.subscribeForEvent=function(f,n){w.subscribeForEvent(f,n)};var g=function(f){return C.filter(f,function(n){return.01<=n.cpm})};this.dispatchHB=function(f,n){try{var e={},l=[],h=[];C.forEach(f,function(P){var Q=new C.CDefer;e[P.auctionId]=Q;l.push(Q.promise);var G=P.unit.space.preBiddingSettings;G&&G.enabled?h.push(P):Q.resolve({auctionId:P.auctionId,
bids:[]})});var u=C.map(h,function(P){return{auctionId:P.auctionId,biddingSettings:P.unit.space.preBiddingSettings.biddingSettings,spaceName:P.unit.space.name,sizes:P.unit.space.sizes,selector:P.unit.space.selector.value}}),H=F.dispatch(u,n);Promise.all(H).then(function(P){try{for(var Q=[],G=0;G<P.length;G++){var c=P[G],d=c.auctionId,t=C.find(h,function(ca){return ca.auctionId==d}),z=c.bids;z=q.fireEvent("passZeroCpmBidsFilter")?z:g(z);var L=q.fireEvent("filterPrebidBids");if(L){var N=C.map(z,function(ca){return{bid:ca,
rawBid:ca.rawBid}});z=L(N)}c.bids=z;Q.push({auction:t,bids:z})}pb.testBidsCompliance(Q).then(function(ca){for(var E in ca)if(ca.hasOwnProperty(E)){var M=ca[E],a=C.find(P,function(ka){return ka.auctionId==E}),A=a.bids,k;for(k in M)if(M.hasOwnProperty(k)){var K=M[k],X=C.find(A,function(ka){return ka.bidId==k});X.contentIdHash=K.bidContentIdHash;X.complianceStatus=K.status;X.isBackupCreative=K.backup}e[E].resolve(a)}})}catch(ca){}});return l}catch(P){}};this.dispatchAS=function(f,n){try{var e={},l=[],
h=[];C.forEach(f,function(H){var P=new C.CDefer;e[H.auctionId]=P;l.push(P.promise);var Q=H.unit.space.postBiddingSettings;Q&&Q.enabled?h.push(H):P.resolve({auctionId:H.auctionId,bids:[]})});var u=b(h,n,0);C.forEach(u,function(H){H.then(function(P){e[P.auctionId].resolve(P)})});return l}catch(H){}};var b=function(f,n,e){try{var l={},h=[];C.forEach(f,function(Q){var G=new C.CDefer;h.push(G.promise);l[Q.auctionId]={auction:Q,deferred:G}});var u=[];C.forEach(f,function(Q){Q.unit.space.postBiddingSettings.order[e]?
u.push(Q):l[Q.auctionId].deferred.resolve({auctionId:Q.auctionId,bids:[]})});if(u){var H=C.map(u,function(Q){var G=Q.unit.space.postBiddingSettings,c=Q.getWinningBid();c=c?c.cpm:0;var d=Q.auctionId,t=Q.unit.space.name;a:{switch(Q.unit.space.postBiddingSettings.type){case x.Types.DFP:var z=G.order[e];var L={},N=Q.getWinningBid(),ca=Q.getComplianceBids(),E=Q.unit,M="true false undefined 152media 33across a4g aardvark adblade adbund adbutler adform adkernel adkerneladn admedia admixer adocean adsparc adspirit adsupply adtelligent adxcg adyoulike aerserv andbeyond aol appnexusAst appnexus arteebee atomx amazon amazonAAX audienceNetwork automatad beachfront betweendigital bidfluence brainy brealtime bridgewell brightcom buysellads c1x carambola clickonometrics clickforce colossus connectad consumable contentIgnite conversant cox cpx criteo defymedia dgads districtmDMX districtm engagebdr emxdigital emx_digital e-planning essens fairtrade featureForward fidelityMedia freewheel-ssp fyber gamoshi gamma getintent gourmetAds gumgum gxone imonomy improvedigital IndexExchange indexExchange ix inneractive innity inskin insticator invibes iqm justpremium kargo komoona kumma lifestreet lkqd lockerdome madvertise marsmedia matomy media.net medianet mobfox my6sense mytarget nginad upo upo1 upo2 upo3 upo4 upo5 upo6 upo7 upo8 upo9 upo10 oneplanetonly onetag openx optimatic optimera orbitsoft peak226 piximedia platform.io playgroundXyz polluxNetwork polymorph prebidServer pubgears pubmatic pulsepoint pulsepointLite quantcast quantum readpeak realvu rhythmone rockyou roxot rtbdemandBidder rtbdemandadk rtbhouse rubicon rxrtb sara sekindoum serverbid sharethrough smart smartyads somoAudience sonobi soloway sovrn spotx springserve stickyadstv tapsense teads thoughtleadr tremor trionInteractive triplelift trustx twenga ucfunnel underdogmedia undertone unruly vertamedia vertoz vi vidazoo vis.x vuble weborama wideorbit widespace xaxis xendiz yieldbot yieldlab yieldmo yieldone".split(" "),
a={up_bidder:!0};N&&N.bidder&&-1<M.indexOf(N.bidder)?a.up_bidder=N.bidder:N&&N.bidder&&0>M.indexOf(N.bidder)&&q.fireEvent("sendLog",{eventName:"upBidder_unknownBidder",payload:{bidder:N.bidder,bidderCode:N.bidderCode}});M=window.location.hostname;0===M.indexOf("www.")&&(M=M.replace("www.",""));var A=M;A=A.match(/(co\.il|co\.uk|org\.il)/)?A.replace("www.","").split(".").splice(-3).join("."):A.replace("www.","").split(".").splice(-2).join(".");a.up_recovery="true";var k=$a.browser(),K=$a.device(),X=
$a.platform();a.up_browser=k;a.up_device=K;a.up_platform=X;a.up_domain=M;a.up_website=A;a.up_website_id=T.SharedObject.getItem("websiteConfig").websiteID;E=E.countOfDispatches-1;a.up_refresh=30<E?"30":""+E;N=N?N.getGPTTargeting({complianceBidsInAuction:ca}):{};a=C.objectAssign({},a||{},N,z.keyValues||{});N=m[Q.unit.unitID]?Object.keys(m[Q.unit.unitID]):[];m[Q.unit.unitID]=a;L.keyValuesParams={toAdd:a,toRemove:N};L.queryParams=z.params.queryParams||{};L.adxBidderId=z.adx.bidderID;L.adxShouldTestCompliance=
z.adx.testCompliance;L.directBidderId=z.direct.bidderID;L.directShouldTestCompliance=z.direct.testCompliance;z=L;break a}z=void 0}return{auctionId:d,spaceName:t,params:z,slotElementId:Q.unit.element.getAttribute("id"),floorPrice:c,type:G.type}}),P=x.dispatch(H,n);C.forEach(P,function(Q){Q.then(function(G){try{var c=G.auctionId,d=G.bids[0],t=C.find(u,function(L){return L.auctionId==c}),z=C.find(H,function(L){return L.auctionId==c});d?d.type==La.Bid.Types.DFP_PREBID?(d.complianceStatus=T.consts.complianceStatus.COMPLIANT,
l[c].deferred.resolve(G)):d.type!=La.Bid.Types.ADX_TEXT||z.params.adxShouldTestCompliance||pb.incompliantBasedOnHTML(d)?d.type!=La.Bid.Types.DIRECT||z.params.directShouldTestCompliance||pb.incompliantBasedOnHTML(d)?pb.testBidsCompliance([{auction:t,bids:[d]}]).then(function(L){d.contentIdHash=L[c][d.bidId].bidContentIdHash;d.complianceStatus=L[c][d.bidId].status;n&&n.forceCompliantEnabled&&d.type==La.Bid.Types.DIRECT&&d.complianceStatus==T.consts.complianceStatus.INCOMPLIANT?l[c].deferred.resolve(G):
d.complianceStatus!=T.consts.complianceStatus.COMPLIANT?(d.cancelBid(),b([t],n,e+1)[0].then(function(N){l[c].deferred.resolve(N)})):l[c].deferred.resolve(G)}).catch(function(L){d.cancelBid();b([t],n,e+1)[0].then(function(N){l[c].deferred.resolve(N)})}):(d.complianceStatus=T.consts.complianceStatus.COMPLIANT,l[c].deferred.resolve(G)):(d.complianceStatus=T.consts.complianceStatus.COMPLIANT,l[c].deferred.resolve(G)):l[c].deferred.resolve(G)}catch(L){}})});return h}}catch(Q){}},m={};(function(){x.subscribeForEvent("bidReceived",
function(f){w.invokeEventCallbacks("bidReceived",f)});x.subscribeForEvent("refresh",function(f){w.invokeEventCallbacks("refresh",f)});F.subscribeForEvent("bidReceived",function(f){w.invokeEventCallbacks("bidReceived",f)});F.subscribeForEvent("refresh",function(f){w.invokeEventCallbacks("refresh",f)})})()};I.dispatch=D})(rb);var Bb={};(function(I){var D=new function(){var F=rb.dispatch,x=da.CustomEvents,w={},q=!1,g=!1,b=function(){F.subscribeForEvent("bidReceived",function(c){c=G([c.bid])[0];m(D.UPONIT_EVENTS.BID_RECEIVED,
c)})},m=function(c,d){c=w[c]||[];for(var t=c.length||0,z=0;z<t;z++){var L=c[z];setTimeout(function(){L(d)},0)}};this.UPONIT_EVENTS={BID_RECEIVED:1};this.COMPLIANCE_STATUSES={UNKNOWN:0,COMPLIANT:1,INCOMPLIANT:2,ERROR:3,PENDING:4};this.init=function(c){var d=c.prebidConfig,t=c.dfpConfig;c=d&&d.init;var z=t&&t.init;q=d&&d.enabled;g=t&&t.enabled;d={prebid:q,dfp:g};for(var L in d)if(d.hasOwnProperty(L)&&d[L]){t=nb.presetProvider(L);var N=wb.postsetProvider(L);t&&ob.addPresetCallback(L,t);N&&ob.addPostsetCallback(L,
N)}for(L in d)d.hasOwnProperty(L)&&d[L]&&ob.loadThirdParty(L);c&&e(c);z&&l(z);b()};var f=function(c){c&&c.adUnit&&c.sizes&&c.slotElementId&&window.googletag.cmd.push(function(){var d=window.googletag.defineSlot(c.adUnit,c.sizes,c.slotElementId).addService(window.googletag.pubads());if(c.targeting)for(var t in c.targeting)c.targeting.hasOwnProperty(t)&&d.setTargeting(t,c.targeting[t])})},n=function(c){return!!C.find(window.uponit.slots,function(d){return d.unit.space.selector.value==c})};this.defineSlot=
function(c,d){var t={};t.id="space_"+V.hashString(c.name+"_"+c.selector);t.id=t.id.substr(0,500);t.name=c.name;t.sizes=c.sizes;t.selector={position:0,value:c.selector};if(c.prebid){t.preBiddingSettings={enabled:!0,biddingSettings:{}};t.preBiddingSettings.biddingSettings[1]=[];for(var z=0;z<c.prebid.bidders.length;z++){var L=c.prebid.bidders[z],N="bidder_"+V.hashString(t.id+"_"+L.name+"_"+JSON.stringify(L.params).trim());N=N.substr(0,500);t.preBiddingSettings.biddingSettings[1].push({id:N,name:L.name,
testCompliance:!0,params:L.params})}}c.dfp&&(t.postBiddingSettings={adxId:c.name+"_adx",directId:c.name+"_direct",enabled:!0,type:1,order:[{params:{keyValues:c.keyValues},adx:{bidderID:c.name+"_adx",testCompliance:!0},direct:{bidderID:c.name+"_direct",testCompliance:!0}},{params:{queryParams:{ad_type:"text"},keyValues:c.keyValues},adx:{bidderID:c.name+"_adx",testCompliance:!1},direct:{bidderID:c.name+"_direct",testCompliance:!0}}]});z=!!document.querySelector(t.selector.value);L=n(t.selector.value);
if(z&&!L)return!g||d&&d.dfpSlotAlreadyDefined||f(c.dfp),c=new La.Space(t),d=document.querySelector(c.selector.value),d.alreadyWraped||(sa.Hooks.hookFunction(d,"setAttribute",sa.Hooks.Types.SET_ATTRIBUTE_PRE,void 0,!0),d.alreadyWraped=!0),c=new La.Unit({element:d,space:c}),c=new La.Slot({unit:c}),window.uponit.slots.push(c),c};var e=function(c){x.addEventListener("prebidDoneInit",function(d){var t=(d=d.data)&&d.cpbjs;if(t){d={setConfig:function(N){t.setConfig(N)},aliasBidder:function(N,ca){t.aliasBidder(N,
ca)},enableAnalytics:function(N){t.enableAnalytics(N)},bidderSettings:function(N){t.bidderSettings=N}};for(var z in c)if(c.hasOwnProperty(z)){var L=c[z];d[z]&&d[z].apply(this,L)}}})},l=function(c){window.googletag.cmd.push(function(){window.googletag.pubads().disableInitialLoad()})};this.enableServices=function(){g&&(window.googletag=window.googletag||{cmd:[]},window.googletag.cmd.push(function(){window.googletag.enableServices()}))};this.fetchPrebid=function(c){return h(c)};var h=function(c){if(!q)return C.map(c,
function(t){return Promise.resolve({slotName:t.unit.space.name,bids:[]})});var d=Q(c);c=F.dispatchHB(d);return C.map(c,function(t){return t.then(function(z){var L=z.auctionId,N=C.find(d,function(M){return M.auctionId==L}),ca=z.bids;z=N.unit.space.name;var E=ca;x.fireEvent("apiOnlyCompliantBids")&&(E=[],C.forEach(ca,function(M){M.complianceStatus==T.consts.complianceStatus.COMPLIANT&&E.push(M)}));N.addBids(E);N=G(E);return{slotName:z,bids:N}})})};this.fetchDFP=function(c){return u(c)};var u=function(c){if(!g)return C.map(c,
function(t){return Promise.resolve({slotName:t.unit.space.name,bids:[]})});var d=Q(c);c={forceCompliantEnabled:x.fireEvent("forceCompliant")};c=F.dispatchAS(d,c);return C.map(c,function(t){return t.then(function(z){var L=z.auctionId,N=C.find(d,function(a){return a.auctionId==L}),ca=z.bids;z=N.unit.space.name;var E=N.getWinningBid();if(ca&&0<ca.length&&ca[0].type==La.Bid.Types.DFP_PREBID)return E&&E.additionalBidsToRender.push(ca[0]),{slotName:z,bids:[]};var M=ca;x.fireEvent("apiOnlyCompliantBids")&&
(M=[],C.forEach(ca,function(a){a.complianceStatus==T.consts.complianceStatus.COMPLIANT&&M.push(a)}));N.addBids(M);N=G(M);return{slotName:z,bids:N}})})};this.renderBid=function(c,d){c.renderBid(d)};this.fetchAndRender=function(c){return H(c)};var H=function(c){return new Promise(function(d,t){c=c||window.uponit.slots;t=h(c);Promise.all(t).then(function(z){z=u(c);C.forEach(z,function(L){L.then(function(N){var ca=N.slotName;N=C.find(window.uponit.slots,function(k){return k.unit.space.name==ca});for(var E=
N.getBids(),M,a=0;a<E.length;a++){var A=E[a];(!M||M.cpm<A.cpm)&&A.complianceStatus==T.consts.complianceStatus.COMPLIANT&&(M=A)}N.renderBid(M)})});Promise.all(z).then(function(){d()})})})};this.addEventListener=function(c,d){w[c]=w[c]||[];w[c].push(d)};var P=function(c){return C.find(c.auctionsList,function(d){return d.state!=La.Auction.States.DONE})},Q=function(c){return C.map(c,function(d){var t=P(d);t||(t=new La.Auction({unit:d.unit}),d.auctionsList.push(t),x.fireEvent("onAuctionStarted",{auction:t}));
return t})},G=function(c){return C.map(c,function(d){return{bidId:d.bidId,adId:d.adId,bidder:d.bidder,cpm:d.cpm,height:d.height,width:d.width,size:d.size,complianceStatus:d.complianceStatus}})}};I.api=D})(Bb);var Cb={};(function(I){function D(p,v,J){(p=window.googletag.defineSlot(p,v,J))&&p.addService(window.googletag.pubads());return p}function F(p){var v=t.fireEvent("newGAMSlotsOnUnitCreation")||{},J=v.AD_UNIT_PATH_PREFIX,S=v.deriveDataFromUnitForSpaces,fa=v.slotDataBySpaceName;0<p.length&&(S||
fa)&&window.googletag.cmd.push(function(){try{p.forEach(function(ia){var pa=ia.unitID,ua=ia.element;ia=ia.space;var Pa=S&&S.includes(ia.name)&&J,ta=fa&&fa[ia.name];if(Pa||ta){if(ta){var Da=fa[ia.name]||{};var Fa=Da.adUnitPath;var Sa=Da.sizes;Da=Da.slotElementId}!Fa&&J&&(Fa=""+J+ia.name);Sa||(Sa=ia.sizes.map(function(Wa){return Wa.split("x").map(function(gb){return parseInt(gb,10)})}).filter(function(Wa){return 2===Wa.length&&!isNaN(Wa[0])&&!isNaN(Wa[1])}));Da||(ua.id||ua.setAttribute("id","bt-unit-"+
pa),Da=ua.id);Fa&&Sa&&0<Sa.length&&Da&&D(Fa,Sa,Da)}})}catch(ia){N.errorf(null,"error defining new GAM slots on Unit creation",ia)}})}function x(p){if(p){var v=t.fireEvent("rewriteGAMSlots")||t.fireEvent("GAMSpecialAdUnit");if(v&&v.parseSlotAdUnitPath&&!p._is_rewritten_slot){for(var J=p.getSlotElementId(),S=p.getSizes(),fa=[],ia=0;ia<S.length;ia++){var pa=S[ia];pa&&pa.getWidth&&pa.getHeight?fa.push([pa.getWidth(),pa.getHeight()]):pa&&"fluid"===pa&&fa.push("fluid")}S=fa;try{var ua=v.parseSlotAdUnitPath(p);
if(!v.shouldSkipDestroySlot||!v.shouldSkipDestroySlot(p,ua)){var Pa=p.getSlotElementId();window.googletag.destroySlots([p]);var ta=document.getElementById(Pa),Da=ta&&ta.querySelector("div[id^='google_ads_iframe_']");ta&&Da&&ta.removeChild(Da)}if(ua){if(newSlot=D(ua,S,J)){newSlot._is_rewritten_slot=!0;if(v.shouldCopyTargeting){J=newSlot;var Fa=p.getTargetingMap(),Sa;for(Sa in Fa)Fa.hasOwnProperty(Sa)&&J.setTargeting(Sa,Fa[Sa][0])}v.postSlotCreation&&v.postSlotCreation(newSlot)}return newSlot}}catch(Wa){N.errorf(null,
"error redefining GAM slot (e.g. for SAU or BT AdX unit)",Wa)}}}}function w(p,v){function J(ia){var pa=p.height+"px",ua=p.width+"px",Pa=p.creativeHTML,ta=document.createElement("div");ta.className="default-creative-container";ta.style.height=pa;ta.style.width=ua;var Da=l.createSafeFrame();Da.className="default-creative-iframe";Da.setAttribute("scrolling","no");Da.setAttribute("marginwidth","0");Da.setAttribute("marginheight","0");Da.setAttribute("height",pa);Da.setAttribute("width",ua);ta.appendChild(Da);
Da.addEventListener("load",function(){try{var Fa=va.doesBrowserSupportDocOpen();if(h.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame){var Sa="if("+Fa+") { document.open('text/html', 'replace'); } document.write(atob('"+btoa(Pa)+"')); document.close();";Da.contentWindow.postMessage({type:"eval",code:Sa},"*")}else{var Wa=Da.contentWindow.document;Fa&&Wa.open("text/html","replace");Wa.write(Pa);Wa.close()}fa=!0;u.forEach(S,function(gb){gb()})}catch(gb){N.errorf(null,"auction: createDefaultCreativeBid: renderDefaultCreative: %o",
gb)}});ia.appendChild(ta)}var S=[],fa=!1;v={ad:p.creativeHTML,bidder:"default-creative",bidderId:"default-creative-"+v.unit.space.name,bidderCode:"default-creative",width:p.width,height:p.height};return new H.Bid(v,v,H.Bid.Types.DEFAULT_CREATIVE,void 0,function(ia){J(ia.placement)},void 0,void 0,function(ia){fa?ia():S.push(ia)},void 0)}function q(){try{window.__tcfapi("addEventListener",0,function(p,v){!v||"useractioncomplete"!==p.eventStatus&&"tcloaded"!==p.eventStatus?v||(v="Unable to attach event listener. tcfapi does not adhere to IAB spec. listenerSuccess: "+
(v+". "),p&&(v+="eventStatus: "+p.eventStatus+"."),t.fireEvent("consentData",{error:{message:v}})):t.fireEvent("consentData",{tcData:p})})}catch(p){t.fireEvent("consentData",{error:p})}}function g(){var p=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);return p?parseInt(p[2],10):!1}function b(p){var v=t.fireEvent("maxAmountOfUnitDispatches");return v?p.filter(function(J){return J.countOfDispatches<v}):p}function m(p,v){var J=h.upoSettings.minTimeBetweenRefreshes,S=t.fireEvent("minTimeBetweenRefreshes");
isNaN(S)||"number"!=typeof S||(J=S);isNaN(v.minTimeBetweenRefreshes)||"number"!=typeof v.minTimeBetweenRefreshes||(J=v.minTimeBetweenRefreshes);var fa=new Date;return p.filter(function(ia){if(!ia)return!1;var pa=!0;if(ia.lastInvokeTime){var ua=fa.getTime()-ia.lastInvokeTime.getTime();ua>J?N.infof(null,"refreshing %o",ia.space.name):(pa=!1,N.infof(null,"waiting %o secs before next refresh for %o",(J-ua)/1E3,ia.space.name))}return pa})}function f(p){return p.filter(function(v){return!t.fireEvent("filterOutUnitToBeAuctioned",
{unit:v})})}function n(p){var v=p.map(function(J){return J.element});return p.filter(function(J,S){return v.indexOf(J.element)==S})}function e(p,v){return new Promise(function(J,S){v&&v.definedSlotsFilteringSettings&&(v.definedSlotsFilteringSettings.dfpEnabled||v.definedSlotsFilteringSettings.alwaysFilterByGoogletagSlots)?window.googletag.cmd.push(function(){var fa=window.googletag.pubads().getSlots(),ia=[];p.forEach(function(pa){v.definedSlotsFilteringSettings.alwaysFilterByGoogletagSlots||pa.space.postBiddingSettings.enabled?
fa.forEach(function(ua){ua.getSlotElementId()===pa.element.getAttribute("id")&&ia.push(pa)}):ia.push(pa)});J(ia)}):J(p)})}var l=vb,h=T,u=C,H=La,P=function(p){try{var v=function(ta){return ta[0]+"x"+ta[1]},J=function(ta){return 2===ta.length&&ta.every(function(Da){return!Array.isArray(Da)&&!isNaN(Da)})},S={},fa=p.selector||va.escapeSelector("#"+p.code),ia=p.sizes;ia||p.mediaTypes&&p.mediaTypes.banner&&p.mediaTypes.banner.sizes&&(ia=p.mediaTypes.banner.sizes);if(ia){var pa=J(ia)?[v(ia)]:ia.filter(J).map(v);
S.id=p.id;S.id||(S.id="space_"+V.hashString(p.code+"_"+fa));S.id=S.id.substr(0,500);S.name=p.code;S.sizes=pa;S.selector={position:0,value:fa};if(p.bids)for(S.preBiddingSettings={enabled:!0,biddingSettings:[]},S.preBiddingSettings.biddingSettings[1]=[],v=0;v<p.bids.length;v++){var ua=p.bids[v];ua.params=ua.params||{};var Pa="bidder_"+V.hashString(S.id+"_"+ua.bidder+"_"+JSON.stringify(ua.params).trim());Pa=Pa.substr(0,500);S.preBiddingSettings.biddingSettings[1].push({id:Pa,testCompliance:!0,name:ua.bidder,
params:ua.params})}else S.preBiddingSettings={enabled:!1};S.postBiddingSettings=L.dfpEnabled?{adxId:S.name+"_adx",directId:S.name+"_direct",enabled:!0,type:1,order:[{params:{},adx:{bidderID:S.name+"_adx",testCompliance:!0},direct:{bidderID:S.name+"_direct",testCompliance:!0}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:S.name+"_adx",testCompliance:!1},direct:{bidderID:S.name+"_direct",testCompliance:!0}}]}:{enabled:!1};return S}}catch(ta){N.errorf(null,"adUnitParser - error in parsing prebid ad unit - err: %o",
ta)}},Q=new function(){var p=da.CustomEvents;this.init=function(){p.addEventListener("onAuctionGroupStarted",function(v){N.infof(null,"onAuctionGroupStarted: %o",v)});p.addEventListener("onAuctionGroupEnded",function(v){N.infof(null,"onAuctionGroupEnded: %o",v)});p.addEventListener("onAuctionStarted",function(v){N.infof(null,"onAuctionStarted: %o",v)});p.addEventListener("onAuctionEnded",function(v){N.infof(null,"onAuctionEnded: %o",v)});p.addEventListener("onPrebiddingStarted",function(v){N.infof(null,
"onPrebiddingStarted: %o",v)});p.addEventListener("onPrebiddingEnded",function(v){N.infof(null,"onPrebiddingEnded: %o",v)});p.addEventListener("onPostbiddingStarted",function(v){N.infof(null,"onPostbiddingStarted: %o",v)});p.addEventListener("onPostbiddingEnded",function(v){N.infof(null,"onPostbiddingEnded: %o",v)});p.addEventListener("onAuctionBidResponse",function(v){N.infof(null,"onAuctionBidResponse: %o",v)});p.addEventListener("onNewUnitFound",function(v){N.infof(null,"onNewUnitFound: %o",v)})}};
window.__upo_d=window.__upo_d||{};window.__upo_d.v="v2";window.__bt_intrnl=window.__bt_intrnl||{};window.googletag=window.googletag||{};window.googletag.cmd=window.googletag.cmd||[];var G={"contentEnabled":true,"mobileContentEnabled":true,"dfpEnabled":false,"spaces":{}},c=G.spaces||{},d=h.upoSettings.staticDomain;if(0<=window.location.href.indexOf("bt_debug=true")||"true"==window.localStorage.getItem("bt_debug"))G.dfpEnabled="true"==localStorage.getItem("forceGAM")?!0:G.dfpEnabled,G.mobileContentEnabled="true"==localStorage.getItem("forceMobileContent")?!0:G.mobileContentEnabled,
G.contentEnabled="true"==localStorage.getItem("forceContent")?!0:G.contentEnabled;var t=da.CustomEvents,z,L={websiteData:G,scriptSettings:eb.settings,apiDomain:"api.btloader.com",staticDomain:d,websiteID:"5634081145487360",organizationID:"5655901878878208",dfpEnabled:G.dfpEnabled,prebidEnabled:!1,mobileContentEnabled:G.mobileContentEnabled,contentEnabled:G.contentEnabled};window.__upo_d.websiteConfig=function(){return{websiteData:L.websiteData,scriptSettings:L.scriptSettings,apiDomain:L.apiDomain,websiteID:L.websiteID,
staticDomain:L.staticDomain,organizationID:L.organizationID,dfpEnabled:L.dfpEnabled,prebidEnabled:L.prebidEnabled,mobileContentEnabled:L.mobileContentEnabled,contentEnabled:L.contentEnabled}};h.SharedObject.setItem("websiteConfig",L);var N=qa.new();N.setPrefix("main: ");N.setLevel(qa.INFO);var ca=function(){try{var p=qa.new();p.setPrefix("hook: ");p.setLevel(qa.DEBUG);window.eval.call(window,"(function (CustomEvents, websiteConfig, lg) {\n"+atob("")+"\n})")(t,L,p)}catch(v){debugger}},
E=function(){K(window);X();t.fireEvent("noWhitelistedFrame")||A();t.fireEvent("clearSpaces")&&(c=[]);return Ha().then(function(){var p=Promise.resolve();t.fireEvent("addAmazonBidder")&&(p=a());M();return p})},M=function(){var p=u.map(c,function(J){return J}),v=t.fireEvent("customSpacesFilter",{spaces:p});v&&(c=u.filter(c,function(J){return u.find(v,function(S){return S.id==J.id})}))},a=function(){return new Promise(function(p,v){window.googletag.cmd.push(function(){var J=0,S=setInterval(function(){if(10<=
J)p(),clearInterval(S);else{var fa=window.googletag.pubads().getSlots(),ia=window.apstag,pa=ia&&ia._Q&&ia._Q[0]&&ia._Q[0][1]&&ia._Q[0][1][0]&&ia._Q[0][1][0].pubID;pa&&fa?(clearInterval(S),u.forEach(fa,function(ua){var Pa=ua.getAdUnitPath(),ta=ua&&u.find(c,function(Da){return t.fireEvent("useSlotPath")&&Da.name==Pa?!0:Da.name==ua.getSlotElementId()});ta&&ta.preBiddingSettings.biddingSettings[h.consts.headerBiddingType.prebid]&&(u.find(ta.preBiddingSettings.biddingSettings[h.consts.headerBiddingType.prebid],
function(Da){return"amazonAAX"==Da.name})||ta.preBiddingSettings.biddingSettings[h.consts.headerBiddingType.prebid].push({id:Pa+"_amazon_bidder",name:"amazonAAX",testCompliance:!0,params:{pubID:pa,adUnitGPTPath:Pa}}))}),p()):J++}},100)})})},A=function(){var p=g();"chrome"==z.browser&&!t.fireEvent("only3pSafeFrame")&&p&&91>p&&(h.upoSettings.whitelistedFrameSettings.url="about:blank?upapi=true",h.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame=!1);var v=l.createSafeFrame();v.addEventListener("load",
function(){h.whitelistedFrame=v;t.fireEvent("whitelistedFrameLoaded",{whitelistedFrame:v})});v.style.width="0px";v.style.height="0px";v.style.display="none";document.body?document.body.appendChild(v):window.addEventListener("DOMContentLoaded",function(){document.body.appendChild(v)})},k=function(p,v){if(p.grumi){var J=document.createElement("iframe");J.style="display:none;width:1px;height:1px;";J.addEventListener("load",function(){J.done||(p.Node.prototype.appendChild=J.contentWindow.Node.prototype.appendChild,
p.HTMLElement.prototype.appendChild=J.contentWindow.Node.prototype.appendChild,v())});U.onDomLoaded(function(){document.body.appendChild(J);J.contentWindow&&(J.done=!0,p.Node.prototype.appendChild=J.contentWindow.Node.prototype.appendChild,p.HTMLElement.prototype.appendChild=J.contentWindow.Node.prototype.appendChild,v())})}else v()},K=function(p){p&&k(p,function(){try{p.XMLHttpRequest&&sa.Hooks.hookFunction(p.XMLHttpRequest.prototype,"open",sa.Hooks.Types.XHR_OPEN_PRE,void 0,!0);sa.Hooks.hookFunction(p,
"fetch",sa.Hooks.Types.FETCH_PRE,void 0,!0);p.HTMLElement&&sa.Hooks.hookFunction(p.HTMLElement.prototype,"insertBefore",sa.Hooks.Types.INSERT_BEFORE_PRE,void 0,!0);p.HTMLElement&&sa.Hooks.hookFunction(p.HTMLElement.prototype,"appendChild",sa.Hooks.Types.APPEND_CHILD_PRE,sa.Hooks.Types.APPEND_CHILD_POST,!0);p.HTMLImageElement&&sa.Hooks.hookFunction(p.HTMLImageElement.prototype,"setAttribute",sa.Hooks.Types.IMG_SET_ATTRIBUTE_PRE,void 0,!0);sa.Hooks.hookFunction(p,"open",sa.Hooks.Types.WIN_OPEN_PRE,
void 0,!0);p.HTMLElement&&sa.Hooks.hookPropertySetter(p.HTMLElement.prototype,"innerHTML",sa.Hooks.Types.HTML_ELEMENT_INNERHTML_PRE,void 0,!0);p.HTMLElement&&sa.Hooks.hookFunction(p.HTMLElement.prototype,"hasChildNodes",sa.Hooks.Types.HTML_ELEMENT_HAS_CHILD_NODES_PRE,void 0,!0);for(var v="HTMLScriptElement HTMLElement HTMLVideoElement HTMLAudioElement HTMLHtmlElement HTMLHeadElement HTMLLinkElement HTMLStyleElement HTMLBodyElement HTMLFormElement HTMLSelectElement HTMLOptionElement HTMLInputElement HTMLTextAreaElement HTMLButtonElement HTMLLabelElement HTMLFieldSetElement HTMLLegendElement HTMLUListElement HTMLOListElement HTMLDListElement HTMLDirectoryElement HTMLMenuElement HTMLLIElement HTMLDivElement HTMLParagraphElement HTMLHeadingElement HTMLQuoteElement HTMLPreElement HTMLBRElement HTMLFontElement HTMLHRElement HTMLAnchorElement HTMLImageElement HTMLObjectElement HTMLParamElement HTMLMapElement HTMLModElement HTMLAreaElement HTMLTableElement HTMLTableCaptionElement HTMLTableColElement HTMLTableSectionElement HTMLTableRowElement HTMLTableCellElement HTMLFrameSetElement HTMLFrameElement HTMLIFrameElement".split(" "),
J=0;J<v.length;J++)p[v[J]]&&sa.Hooks.hookPropertySetter(p[v[J]].prototype,"src",sa.Hooks.Types.HTML_SRC_PROP_PRE,void 0,!0)}catch(S){}})},X=function(){sa.Hooks.addEventListener(sa.Hooks.Types.HTML_SRC_PROP_PRE,function(p){p=p.data;"object"===typeof p[0]&&p[0].toString&&(p[0]=p[0].toString());if(va.isWhitelistURL(p[0],this.tagName))p[0]=va.addAcceptableParam(p[0]);else if(va.isSyncUrl(p[0],this.tagName)&&h.whitelistedFrame)return h.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame?(h.whitelistedFrame.postMessage({type:"eval",
code:"new window.Image().src = '"+p[0]+"'"},"*"),p[0]):(new h.whitelistedFrame.contentWindow.Image).src=p[0]});sa.Hooks.addEventListener(sa.Hooks.Types.HTML_ELEMENT_HAS_CHILD_NODES_PRE,function(p){try{if(u.hasClass(this,"up-show"))return!1;if(this.childNodes&&0<this.childNodes.length){p=!1;for(var v=0;v<this.children.length;v++)if(u.hasClass(this.children[v],"up-show")){p=!0;break}if(p)return!1}}catch(J){}});sa.Hooks.addEventListener(sa.Hooks.Types.HTML_ELEMENT_INNERHTML_POST,function(p){if(this&&
this.classList&&"adsbygoogle"===this.classList[0]){p=this.querySelector("iframe");var v=p.contentWindow;"about:blank"!==p.src&&""!==p.src||K(v);var J=v.document.write;v.document.write=function(S){S&&-1<S.indexOf("show_ads_impl.js")&&(S=va.addAcceptableParam(S));J.call(this,S)}}});sa.Hooks.addEventListener(sa.Hooks.Types.XHR_OPEN_PRE,function(p){p=p.data;va.isWhitelistURL(p[1],"SCRIPT")&&(p[1]=va.addAcceptableParam(p[1]))});sa.Hooks.addEventListener(sa.Hooks.Types.IMG_SET_ATTRIBUTE_PRE,function(p){p=
p.data;if("srcset"===p[0].toLowerCase()){this.src&&va.isWhitelistURL(this.src,this.tagName)&&(this.src=va.addAcceptableParam(this.src));for(var v=p[1].split(","),J=0;J<v.length;J++){var S=v[J];S=S.trim();var fa=S.split(" ")[0];S=S.split(" ")[1]||"";va.isWhitelistURL(fa,this.tagName)&&(S=va.addAcceptableParam(fa)+" "+S,v[J]=S)}p[1]=v.join(",")}else"src"===p[0].toLowerCase()&&va.isWhitelistURL(p[1],this.tagName)&&(p[1]=va.addAcceptableParam(p[1]))});sa.Hooks.addEventListener(sa.Hooks.Types.INSERT_BEFORE_PRE,
function(p){p=p.data;t.fireEvent("InsertBeforeWebsiteHooksIntercept",{element:p[0]});-1<["SCRIPT","IFRAME"].indexOf(p[0].tagName)&&p[0].src&&va.isWhitelistURL(p[0].src,p[0].tagName)&&(p[0].src=va.addAcceptableParam(p[0].src));"LINK"===p[0].tagName&&p[0].href&&va.isWhitelistURL(p[0].href,p[0].tagName)&&(p[0].href=va.addAcceptableParam(p[0].href))});sa.Hooks.addEventListener(sa.Hooks.Types.APPEND_CHILD_PRE,function(p){var v=p.data;if(v[0]&&v[0].src&&0===v[0].src.indexOf("blob:"))p.shouldStop=!0;else{if(v[0].children&&
0<v[0].children.length)for(p=0;p<v[0].children.length;p++){var J=v[0].children[p];J.src&&va.isWhitelistURL(J.src,J.tagName)&&(J.src=va.addAcceptableParam(J.src));if(J.src&&va.isSyncUrl(J.src,J.tagName)&&h.whitelistedFrame)return h.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame?(p="new Image().src = '"+v[0].src+"'",h.whitelistedFrame.postMessage({type:"eval",code:p},"*"),v[0]):h.whitelistedFrame.contentDocument.body.appendChild(v[0])}"LINK"===v[0].tagName&&v[0].href&&va.isWhitelistURL(v[0].href,
v[0].tagName)&&(v[0].href=va.addAcceptableParam(v[0].href));-1<["SCRIPT","IFRAME"].indexOf(v[0].tagName)&&v[0].src&&va.isWhitelistURL(v[0].src,v[0].tagName)&&(v[0].src=va.addAcceptableParam(v[0].src));if(va.isSyncUrl(v[0].src,v[0].tagName)&&h.whitelistedFrame)return h.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame?(p="new Image().src = '"+v[0].src+"'",h.whitelistedFrame.postMessage({type:"eval",code:p},"*"),v[0]):h.whitelistedFrame.contentDocument.body.appendChild(v[0])}});sa.Hooks.addEventListener(sa.Hooks.Types.APPEND_CHILD_POST,
function(p){p=p.data;"IFRAME"!==p.tagName||"about:blank"!==p.src&&""!==p.src||K(p.contentWindow)});sa.Hooks.addEventListener(sa.Hooks.Types.WIN_OPEN_PRE,function(p){if(p.data[0]&&(-1<p.data[0].indexOf("clickout.sharethrough.com")||-1<p.data[0].indexOf("3lift.com/pass"))&&h.whitelistedFrame&&!h.upoSettings.whitelistedFrameSettings.isOurOriginSafeFrame)return h.whitelistedFrame.contentWindow.open(p.data[0])});sa.Hooks.addEventListener(sa.Hooks.Types.SET_ATTRIBUTE_PRE,function(p){var v=p.data[1];"class"===
p.data[0]&&0<=this.className.indexOf("up-show")&&0>v.indexOf("up-show")&&(p.data[1]+=" up-show")})},ka=function(){var p=Bb.api;window.uponit=window.uponit||{que:[]};window.uponit.slots=[];window.uponit.COMPLIANCE_STATUSES=p.COMPLIANCE_STATUSES;window.uponit.defineSlot=p.defineSlot;window.uponit.init=p.init;window.uponit.enableServices=p.enableServices;window.uponit.UPONIT_EVENTS=p.UPONIT_EVENTS;window.uponit.fetchPrebid=p.fetchPrebid;window.uponit.fetchDFP=p.fetchDFP;window.uponit.renderBid=p.renderBid;
window.uponit.fetchAndRender=p.fetchAndRender;window.uponit.addEventListener=p.addEventListener;window.uponit.addModifier=function(J,S){window.uponit.modifiers=window.uponit.modifiers||{};window.uponit.modifiers[J]=window.uponit.modifiers[J]||[];window.uponit.modifiers[J].push(S)};for(p=0;p<window.uponit.que.length;p++){var v=window.uponit.que[p];try{v()}catch(J){}}window.uponit.que.push=function(J){J()}},ya=function(p){p=Object.entries(p).map(function(v){var J=$jscomp.makeIterator(v);v=J.next().value;
J=J.next().value;var S={};S.id=v;S.name=J.unit;S.staging=J.staging;S.selector={position:J.selector.position,value:J.selector.value};S.sizes=J.sizes;var fa=J.prebids&&0<Object.keys(J.prebids).length;S.preBiddingSettings={enabled:fa,biddingSettings:{}};fa&&(S.preBiddingSettings.biddingSettings[1]=[],Object.entries(J.prebids).forEach(function(ia){var pa=$jscomp.makeIterator(ia);ia=pa.next().value;pa=pa.next().value;S.preBiddingSettings.biddingSettings[1].push({id:ia,name:pa.bidder,testCompliance:!0,
params:pa.params})}));S.postBiddingSettings={adxId:J.adx,directId:J.direct,enabled:L.dfpEnabled&&"0"!=J.adx,type:1,order:[{params:{},adx:{bidderID:J.adx,testCompliance:!0},direct:{bidderID:J.direct,testCompliance:!0}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:J.adx,testCompliance:!1},direct:{bidderID:J.direct,testCompliance:!0}}]};return[v,S]});return Object.fromEntries(p)},ha=function(p){var v=[],J;for(J in p)if(p.hasOwnProperty(J)){var S=p[J];S.id=J;S=new H.Space(S);v.push(S)}return v},
Ha=function(){var p=t.fireEvent("extractPublisherSpacesSettings");if(!p)return Promise.resolve();var v=p.timeout||2E3;return new Promise(function(J,S){p.callback(function(fa){fa=fa.adUnits;for(var ia=0;ia<fa.length;ia++){var pa=P(fa[ia]);(pa=pa&&new H.Space(pa))&&c.push(pa)}J()});setTimeout(function(){J()},v)})};I.init=function(){if(!window.uponitAlreadyLoaded){window.uponitAlreadyLoaded=!0;fb.$XHRService.init("api.btloader.com",{secure:!0});try{Q.init(),xb.Verifications.run(),xb.Report.init()}catch(J){}z=
{browser:$a.browser(),device:$a.device(),platform:$a.platform(),isMobile:$a.isMobile()};window.__upo_d.isMobile=z.isMobile;var p={browser:z.browser,device:z.device,platform:z.platform,isMobile:z.isMobile};t.addEventListener("getUserEnvDataWebsiteHooks",function(){return p});window.__upo_d.userEvnData=p;q();ca();eb.loadSettings();var v=t.fireEvent("hookDFPEnabledValue");v&&(L.dfpEnabled=v);try{c=ha(ya(c))}catch(J){N.errorf(null,"main: init - parsing static spaces - %o",J)}ka();t.fireEvent("shouldDisableUponit")?
N.noticef(null,"halting: we have been disabled by hooks"):(t.fireEvent("FirePublisherEvent",{eventName:"AcceptableAdsInit",payload:{detail:!0}}),t.fireEvent("FirePublisherEvent",{eventName:"uponitInit",payload:{detail:!0}}),E().then(function(){L.prebidEnabled=!(!u.find(c,function(S){return S.preBiddingSettings&&S.preBiddingSettings.enabled})&&!t.fireEvent("scrapePrebidAdUnits"));var J={spaces:c,settings:{prebid:t.fireEvent("forcePrebidEnabled")||L.prebidEnabled,dfp:L.dfpEnabled}};U.onDomLoaded(function(){t.fireEvent("onDomLoaded");
t.fireEvent("onBeforeRecovery",{spaces:c,settings:J.settings});Na.invoke(J)})}))}};var Na=new function(){function p(){window.googletag.cmd.push(function(){var aa=window.googletag.pubads().getSlots();u.forEach(aa,function(ba){x(ba)})})}function v(){return window.pbjs&&window.pbjs.adUnits}function J(){var aa=[],ba=t.fireEvent("auctionBlockerHook");ba&&aa.push(ba);return aa}function S(aa,ba){var na=J();return Promise.all(na).then(function(){return Qa(aa)}).then(function(oa){return Ta(oa,ba)}).then(function(oa){return oa.map(function(ja){return ja.space})})}
function fa(){try{history.pushState=function(aa){return function(){var ba=aa.apply(this,arguments);window.dispatchEvent(new Event("pushstate"));window.dispatchEvent(new Event("locationchange"));return ba}}(history.pushState),history.replaceState=function(aa){return function(){var ba=aa.apply(this,arguments);window.dispatchEvent(new Event("replacestate"));window.dispatchEvent(new Event("locationchange"));return ba}}(history.replaceState),window.addEventListener("popstate",function(){window.dispatchEvent(new Event("locationchange"))})}catch(aa){N.errorf(null,
"setting up locationchange event - error: %o",aa)}}function ia(aa,ba){var na=l.getElementWithSelector('[id="'+aa+'"]');if(na)return(aa=W.getByElement(na))?aa.space:ua(ba).find(function(oa){return(oa=l.getSpaceElement(oa))&&oa===na})}function pa(aa,ba){var na,oa,ja,Ca,Ia,jb;return $jscomp.asyncExecutePromiseGeneratorProgram(function(Ja){switch(Ja.nextAddress){case 1:na={definedSlotsFilteringSettings:{dfpEnabled:Da.dfp,alwaysFilterByGoogletagSlots:B}},ba=Object.assign({},na,ba),oa=aa.filter(function(Za){return Za.state===
H.Unit.States.PENDING}),oa.forEach(function(Za){Za.state=H.Unit.States.CHECKING}),ja=[].concat($jscomp.arrayFromIterable(oa)),Ca=$jscomp.makeIterator(Ea),Ia=Ca.next();case 2:if(Ia.done){Ja.jumpTo(4);break}jb=Ia.value;return Ja.yield(jb(oa,ba),5);case 5:oa=Ja.yieldResult;ja=ja.filter(function(Za){var bb=oa.includes(Za);bb||(Za.state=H.Unit.States.PENDING);return bb});Ia=Ca.next();Ja.jumpTo(2);break;case 4:return Ja.return(oa)}})}function ua(aa){aa=void 0===aa?[]:aa;return aa.filter(function(ba){return!W.getBySpace(ba)})}
function Pa(aa){aa.forEach(function(ba){t.fireEvent("modifySpacesOnBeforeFetching",{space:ba.space})})}var ta=!1,Da,Fa={};Fa[h.consts.refreshType.ALL]=[];Fa[h.consts.refreshType.VISIBLE]=[];Fa[h.consts.refreshType.HIDDEN]=[];var Sa=[],Wa=[],gb=[],B=!1,O=function(aa,ba){if(!ta){ta=!0;r.set(aa);Da=ba||{};B=t.fireEvent("alwaysFilterByGoogletagSlots");Aa(Da);(Da.dfp||B)&&Ka();p();ra();(gb=t.fireEvent("movePositionRules")||[],0<gb.length)&&l.movePositionService.setMovePositionRules(gb);U.onScroll(function(){var ja=
r.getAll();db();Ya(h.consts.refreshType.ALL);ma(ja)});U.onBlur(function(){var ja=t.fireEvent("onBlurRefresh");"ALL"===ja?Ya(h.consts.refreshType.ALL):"VISIBLE"===ja?Ya(h.consts.refreshType.VISIBLE):Ya(h.consts.refreshType.HIDDEN)});fa();t.fireEvent("disableRefreshOnLocationChange")||window.addEventListener("locationchange",function(){Ya(h.consts.refreshType.ALL)});if(aa=t.fireEvent("refreshOnInterval")){var na=aa.refreshInterval||2E3;N.infof(null,"going to dispatch refresher on a %o sec(s) interval",
na/1E3);var oa=function(){Ya(h.consts.refreshType.VISIBLE)};refreshOnIntervalCallbackID=setInterval(oa,na);U.onFocus(function(){refreshOnIntervalCallbackID||(refreshOnIntervalCallbackID=setInterval(oa,na))});U.onBlur(function(){refreshOnIntervalCallbackID&&(clearInterval(refreshOnIntervalCallbackID),refreshOnIntervalCallbackID=null)})}rb.dispatch.subscribeForEvent("refresh",function(ja){var Ca=r.getAll();u.forEach(ja,function(Ia){if(Ia=ia(Ia,Ca))0>Fa[h.consts.refreshType.ALL].indexOf(Ia)&&Fa[h.consts.refreshType.ALL].push(Ia),
Ya(h.consts.refreshType.HIDDEN)})});t.addEventListener("refreshByForce",function(ja){ja=(ja=ja.data)&&ja.settings;var Ca=r.getAll(),Ia=ja&&ja.spacesNames,jb=ja&&ja.shouldRefreshAllSpaces,Ja=[],Za={filteringSettings:{minTimeBetweenRefreshes:ja&&ja.minTimeBetweenRefreshes}};ja&&ja.shouldRefreshFailedSpaces&&u.forEach(Sa,function(bb){Ja.push(bb)});Ia&&(Ja=u.filter(Ca,function(bb){return-1<Ia.indexOf(bb.name)}));jb&&(Ja=Ca);Ja=u.distinct(Ja);S(Ja,Za).then(function(bb){Sa=u.filter(Ja,function(cb){return 0>
bb.indexOf(cb)})})});t.addEventListener("websiteHooksGetSpaces",function(){return r.getAll()});if(aa=t.fireEvent("scrapePrebidAdUnits"))"boolean"===typeof aa&&(aa={}),Z(aa);t.fireEvent("scrapeGoogletagSlots")&&window.googletag.cmd.push(function(){var ja=window.googletag.pubads().getSlots();ja=u.map(ja,function(Ca){var Ia=Ma(Ca);t.fireEvent("addAmazonBidder")&&Oa(Ia,Ca.getAdUnitPath());return Ia});u.forEach(ja,function(Ca){Ca&&r.set(Ca)})});(Da.dfp||B)&&window.googletag.cmd.push(function(){var ja=
window.googletag.pubads().getSlots();ja&&u.forEach(ja,function(Ca){Ga(Ca)})});Y()}},Z=function(aa){var ba=aa.getAdUnits||v,na=aa.filterOutAdUnit,oa=aa.parseAdUnit,ja=aa.postParsingAdUnits;aa=aa.parseInterval||1E3;var Ca,Ia=[],jb=function(){Ca=ba()||[];if(0<Ca.length){for(var Ja=[],Za=[],bb=0;bb<Ca.length;bb++){var cb=Ca[bb];!cb||0<=Ia.indexOf(cb)||(cb=JSON.parse(JSON.stringify(cb)),cb=oa?oa(cb):cb,na&&na(cb)||(Ia.push(cb),Ja.push(cb)))}0!==Ja.length&&(Ja=ja?ja(Ja):Ja,u.forEach(Ja,function(lb){(lb=
(lb=P(lb))&&new H.Space(lb))&&(0<r.getSpacesByName(lb.name).length||Za.push(lb))}),0!==Za.length&&(r.set(Za),ma(Za)))}};jb();setInterval(function(){jb()},aa)},Y=function(){window.__upo_d.getSpaces=function(){return r.getAll()};window.__upo_d.getUnits=function(){return W.getAll()};window.__upo_d.getAuctions=function(){return Wa}},ma=function(aa){aa=ua(aa);return S(aa)},ra=function(){var aa=r.getAll();t.fireEvent("listenToNewSpaces",{spaces:aa,callback:function(ba){if(ba){for(var na=0;na<ba.length;na++){var oa=
ba[na];(oa=oa&&new H.Space(oa))&&r.set(oa)}ba=r.getAll();ma(ba)}}})},za=[],wa,Ga=function(aa){var ba=aa.getSlotElementId(),na=aa.getAdUnitPath(),oa=r.getAll(),ja=ia(ba,oa);if(!ja){if(t.fireEvent("useSlotPath"))ja=r.getSpacesByName(na.split("/")[na.split("/").length-1])[0];else{var Ca=t.fireEvent("customGetSpace",{spaces:oa,divId:ba,slot:aa});Ca&&(ja=u.find(oa,function(Ia){return Ia.name==Ca.name}))}if(ja=ja&&JSON.parse(JSON.stringify(ja)))ja.selector.value=va.escapeSelector("#"+ba),ja.name=ba,r.set(ja)}ja||
(ba=t.fireEvent("extractPublisherSpaceLaterDefineSlot",{name:ba}))&&(ja=(ja=P(ba))&&new H.Space(ja))&&r.set(ja);!ja&&t.fireEvent("scrapeGoogletagSlots")&&(ja=Ma(aa))&&r.set(ja);ja&&0>za.indexOf(ja)&&(t.fireEvent("addAmazonBidder")&&Oa(ja,na),za.push(ja),clearTimeout(wa),wa=setTimeout(function(){S(za);za=[]},100))},Ka=function(){var aa="push";window.googletag&&window.googletag.cmd.unshift&&(aa="unshift");window.googletag.cmd[aa](function(){var ba=window.googletag.defineSlot;window.googletag.defineSlot=
function(oa,ja,Ca){var Ia=ba(oa,ja,Ca);setTimeout(function(){Ia&&!x(Ia)&&Ga(Ia)},0);return Ia};if(t.fireEvent("overrideDefineOutOfPageSlot")){var na=window.googletag.defineOutOfPageSlot;window.googletag.defineOutOfPageSlot=function(oa,ja){var Ca=na(oa,ja);setTimeout(function(){Ca&&!x(Ca)&&Ga(Ca)},0);return Ca}}})},Ma=function(aa){if(aa&&!t.fireEvent("shouldIgnoreGoogletagSlotScraping",{slot:aa})){var ba=aa.getSlotElementId();aa=aa.getSizes();aa=u.map(aa,function(ja){if(ja.getWidth)return ja.getWidth()+
"x"+ja.getHeight()});aa=u.filter(aa,function(ja){return!!ja});var na="adxId_"+ba,oa="directId_"+ba;ba={id:ba,name:ba,staging:!1,selector:{value:va.escapeSelector("#"+ba),position:h.consts.selectorPosition.APPEND_CHILD},sizes:aa,preBiddingSettings:{enabled:!0,biddingSettings:{}},postBiddingSettings:{adxId:na,directId:oa,enabled:Da.dfp,type:1,order:[{params:{},adx:{bidderID:na,testCompliance:!0},direct:{bidderID:oa,testCompliance:!0}},{params:{queryParams:{ad_type:"text"}},adx:{bidderID:na,testCompliance:!1},
direct:{bidderID:oa,testCompliance:!0}}]}};ba.preBiddingSettings.biddingSettings[h.consts.headerBiddingType.prebid]=[];return new H.Space(ba)}},Oa=function(aa,ba){if(aa&&aa.preBiddingSettings.biddingSettings[h.consts.headerBiddingType.prebid]&&!u.find(aa.preBiddingSettings.biddingSettings[h.consts.headerBiddingType.prebid],function(oa){return"amazonAAX"==oa.name})){var na=window.apstag;(na=na&&na._Q&&na._Q[0]&&na._Q[0][1]&&na._Q[0][1][0]&&na._Q[0][1][0].pubID)&&ba&&aa.preBiddingSettings.biddingSettings[h.consts.headerBiddingType.prebid].push({id:ba+
"_amazon_bidder",name:"amazonAAX",testCompliance:!0,params:{pubID:na,adUnitGPTPath:ba}})}},Aa=function(aa){for(var ba in aa)if(aa.hasOwnProperty(ba)&&aa[ba]){presetsCbs=[];postsetsCbs=[];var na=nb.presetProvider(ba),oa=wb.postsetProvider(ba);na&&presetsCbs.push(na);oa&&postsetsCbs.push(oa);na=t.fireEvent("thirdPartyModulePreset",{type:ba});oa=t.fireEvent("thirdPartyModulePostset",{type:ba});na&&presetsCbs.push(na);oa&&postsetsCbs.push(oa);u.forEach(presetsCbs,function(ja){ob.addPresetCallback(ba,
ja)});u.forEach(postsetsCbs,function(ja){ob.addPostsetCallback(ba,ja)});ob.loadThirdParty(ba)}},Ea=[b,m,f,n,e];this.invoke=function(aa){if(!window.__bt_intrnl.stopFlag){var ba=aa.spaces;O(ba,aa.settings);ma(ba);var na=1,oa=setInterval(function(){15==na&&clearInterval(oa);na++;ma(ba)},100)}};var Qa=function(aa){var ba=[],na=[];u.forEach(aa,function(oa){var ja=l.getSpaceElement(oa);if(ja){var Ca=W.getByElement(ja);Ca||(ja.alreadyWraped||(sa.Hooks.hookFunction(ja,"setAttribute",sa.Hooks.Types.SET_ATTRIBUTE_PRE,
void 0,!0),ja.alreadyWraped=!0),Ca=new H.Unit({element:ja,space:oa}),t.fireEvent("onNewUnitFound",Ca),W.set(Ca),na.push(Ca));Ca&&Ca.space==oa&&ba.push(Ca)}});F(na);return ba},Ta=function(aa,ba){return new Promise(function(na,oa){t.fireEvent("onBeforeInvokeDispatch",{spaces:u.map(aa,function(ja){return ja.space})});Pa(aa);oa={};ba&&(oa=ba.filteringSettings||{});pa(aa,oa).then(function(ja){try{if(na(ja),ja&&!(0>=ja.length)){var Ca=u.map(ja,function(Ja){return Ja.space});l.movePositionService.dispatch(Ca);
var Ia=u.map(ja,function(Ja){return new H.Auction({unit:Ja})});t.fireEvent("onAuctionGroupStarted",Ia);tb(Ia);if(!window.__bt_intrnl.stopFlag){t.fireEvent("onPrebiddingStarted",Ia);var jb=rb.dispatch.dispatchHB(Ia);Promise.all(jb).then(function(Ja){t.fireEvent("onPrebiddingEnded",Ia);for(var Za=0;Za<Ja.length;Za++){var bb=Ja[Za],cb=bb.auctionId,lb=bb.bids;u.forEach(Ia,function(ub){ub.auctionId==cb&&ub.addBids(lb)})}Ja={forceCompliantEnabled:t.fireEvent("forceCompliant")};window.__bt_intrnl.stopFlag||
(Ja=rb.dispatch.dispatchAS(Ia,Ja),u.forEach(Ja,function(ub,Eb){ub.then(function(Db){var Ra=u.find(Ia,function(mb){return mb.auctionId==Db.auctionId}),yb=Ra.getWinningBid(),kb=Db.bids;kb&&0<kb.length?u.forEach(kb,function(mb){mb.type==H.Bid.Types.DFP_PREBID?yb&&yb.additionalBidsToRender.push(mb):Ra.addBids([mb])}):Da.dfp&&Ra.unit.space.postBiddingSettings.enabled&&yb&&Ra.cancelAuction();if(!window.__bt_intrnl.stopFlag){var hb=Ra.getWinningBid();localStorage.getItem("forceDefaultCreative")&&(hb=void 0);
!hb&&(kb=t.fireEvent("getDefaultCreative",{auction:Ra}))&&(kb={width:kb.width,height:kb.height,creativeHTML:kb.creativeHTML},hb=w(kb,Ra),Ra.addBids([hb]));Ra.subscribeForEvent("auctionRendered",function(){t.fireEvent("onAuctionRendered",{auction:Ra,bid:hb});t.fireEvent("onAuctionRenderedWebsiteHook",{space:Ra.unit.space,element:Ra.unit.element,winningBid:hb});ib.onVisible(Ra.unit.element,function(){t.fireEvent("onAdViewed",{auction:Ra,bid:hb});t.fireEvent("onAdViewedWebsiteHook",{space:Ra.unit.space,
element:Ra.unit.element,winningBid:hb})})});Ra.subscribeForEvent("renderBidDone",function(mb){t.fireEvent("onAuctionEnded",{auction:Ra,bid:mb.successfulyRenderedBid&&hb});t.fireEvent("onAuctionEndedWebsiteHook",{element:Ra.unit.element,bid:mb.successfulyRenderedBid&&hb})});Ra.renderBid(hb);Ra.unit.state=H.Unit.States.PENDING;Ua(Ra.unit.space)}})}))})}}}catch(Ja){N.errorf(null,"recovery: filterUnits %o",Ja)}})})},Ua=function(aa){var ba=t.fireEvent("spaceRefreshSettings",{space:aa});if(ba){var na=l.refreshTypeDecoder(ba.type);
na==h.consts.refreshType.UNKNOWN?N.errorf(null,"invalid refresh type setting %o",ba.type):(ba=ba.rate||3E4,0>Fa[na].indexOf(aa)&&Fa[na].push(aa),N.infof(null,"setting up refresh(%s) for space %o in %o secs",na,aa.name,ba/1E3),setTimeout(function(){Ya(na)},ba))}},ab,Ya=function(aa){clearTimeout(ab);ab=setTimeout(function(){var ba=[];switch(aa){case h.consts.refreshType.ALL:ba=Fa[aa];break;case h.consts.refreshType.VISIBLE:ba=qb(Fa[aa]);ba.push.apply(ba,$jscomp.arrayFromIterable(qb(Fa[h.consts.refreshType.ALL])));
break;case h.consts.refreshType.HIDDEN:ba=Va(Fa[aa]);ba.push.apply(ba,$jscomp.arrayFromIterable(Va(Fa[h.consts.refreshType.ALL])));break;default:ba=Fa[aa]||[]}if(1>ba.length)N.infof(null,"nothing to refresh");else{var na=ba.filter(function(oa,ja,Ca){return Ca.indexOf(oa)===ja});N.infof(null,"dispatch trying to refresh %o spaces out of %o with type %o",na.length,Fa[aa].length,aa);S(na).then(function(oa){oa=oa||[];var ja=[];u.forEach(na,function(Ca){0>oa.indexOf(Ca)&&ja.push(Ca)});N.infof(null,"refreshed %o spaces out of %o",
oa.length,na.length);Fa[aa]=ja})}},1E3)},tb=function(aa){u.forEach(aa,function(ba){ba.state=H.Auction.States.DISPATCHED;ba.unit.state=H.Unit.States.DISPATCHED;Wa.push(ba);ba.unit.countOfDispatches++;ba.unit.lastInvokeTime=new Date;t.fireEvent("onAuctionStarted",{auction:ba})})},qb=function(aa){for(var ba=[],na=0;na<aa.length;na++){var oa=aa[na];ib.isElementVisible(oa.selector.value)&&ba.push(oa)}return ba},Va=function(aa){if(!document.hasFocus())return aa;for(var ba=[],na=0;na<aa.length;na++){var oa=
aa[na];ib.isElementVisible(oa.selector.value)||ba.push(oa)}return ba},Xa,db=function(){clearTimeout(Xa);Xa=setTimeout(function(){try{var aa=t.fireEvent("extractPublisherSpacesLaterDefinedUnits");if(aa)for(var ba=0;ba<aa.length;ba++){var na=P(aa[ba]),oa=na&&new H.Space(na);oa&&r.set(oa)}}catch(ja){}},1E3)}},r=new function(){var p=[],v={},J={};this.set=function(S){Array.isArray(S)||(S=[S]);for(var fa=0;fa<S.length;fa++){var ia=S[fa];ia&&(p.push(ia),v[ia.name]=v[ia.name]||[],v[ia.name].push(ia),J[ia.id]=
J[ia.id]||[],J[ia.id].push(ia))}};this.getSpacesByName=function(S){return v[S]||[]};this.getSpacesByID=function(S){return J[S]||[]};this.getAll=function(){return p};this.remove=function(S){p=u.filter(p,function(ia){return ia!=S});var fa=J[S.id].indexOf(S);0<=fa&&J[S.id].splice(fa,1);fa=v[S.name].indexOf(S);0<=fa&&v[S.name].splice(fa,1)}},W=new function(){var p=[];this.set=function(v){p.push(v)};this.getBySpace=function(v){for(var J=0;J<p.length;J++){var S=p[J];if(S.space==v)return S}};this.getByElement=
function(v){for(var J=0;J<p.length;J++){var S=p[J];if(S.element==v)return S}};this.getAll=function(){return p}}})(Cb);Cb.init(y[0])})(arguments);

})({});
